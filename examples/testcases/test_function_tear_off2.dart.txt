main = main::main;
library from "test:///main.dart" as main {

  typedef Fun = (dart.core::int, {b: dart.core::int}) → dart.core::int;
  class A extends dart.core::Object {
    final field (dart.core::int, {b: dart.core::int}) → dart.core::int fun1;
    constructor •((dart.core::int, {b: dart.core::int}) → dart.core::int fun1) → main::A
      : main::A::fun1 = fun1, super dart.core::Object::•()
      ;
  }
  class B extends dart.core::Object {
    field dart.core::int i;
    constructor •(dart.core::int i) → main::B
      : main::B::i = i, super dart.core::Object::•()
      ;
    method fun2(dart.core::int a, {dart.core::int b = #C1}) → dart.core::int {
      return this.{main::B::i}{dart.core::int}.{dart.core::num::+}(a){(dart.core::num) → dart.core::int}.{dart.core::num::-}(b){(dart.core::num) → dart.core::int};
    }
  }
  static method main() → dart.core::int {
    main::B b = new main::B::•(2);
    b.{main::B::i} = 3;
    main::A a = new main::A::•(b.{main::B::fun2}{(dart.core::int, {b: dart.core::int}) → dart.core::int});
    return let final main::A #t1 = a in let final dart.core::int #t2 = 2 in let final dart.core::int #t3 = 4 in #t1.{main::A::fun1}{(dart.core::int, {b: dart.core::int}) → dart.core::int}(#t2, b: #t3){(dart.core::int, {b: dart.core::int}) → dart.core::int};
  }
}
constants  {
  #C1 = 0
}
