import 'package:intl/src/intl/number_format_parser.dart';
import 'dart:math';
import 'package:intl/number_symbols.dart';
import 'package:intl/number_symbols_data.dart';
import 'package:intl/src/intl/string_stack.dart';
import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
Map<String,Function> getLibrary(m.MicroDartEngine engine) {
return {
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@#as': (m.Scope scope, target)=>()=>target as NumberFormatParseResult,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@#is': (m.Scope scope, target)=>()=>target is NumberFormatParseResult,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@negativePrefix': (m.Scope scope, NumberFormatParseResult target)=>target.negativePrefix,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@negativePrefix:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.negativePrefix=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@positivePrefix': (m.Scope scope, NumberFormatParseResult target)=>target.positivePrefix,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@positivePrefix:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.positivePrefix=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@negativeSuffix': (m.Scope scope, NumberFormatParseResult target)=>target.negativeSuffix,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@negativeSuffix:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.negativeSuffix=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@positiveSuffix': (m.Scope scope, NumberFormatParseResult target)=>target.positiveSuffix,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@positiveSuffix:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.positiveSuffix=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@multiplier': (m.Scope scope, NumberFormatParseResult target)=>target.multiplier,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@multiplier:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.multiplier=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@minimumExponentDigits': (m.Scope scope, NumberFormatParseResult target)=>target.minimumExponentDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@minimumExponentDigits:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.minimumExponentDigits=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@maximumIntegerDigits': (m.Scope scope, NumberFormatParseResult target)=>target.maximumIntegerDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@maximumIntegerDigits:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.maximumIntegerDigits=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@minimumIntegerDigits': (m.Scope scope, NumberFormatParseResult target)=>target.minimumIntegerDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@minimumIntegerDigits:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.minimumIntegerDigits=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@maximumFractionDigits': (m.Scope scope, NumberFormatParseResult target)=>target.maximumFractionDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@maximumFractionDigits:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.maximumFractionDigits=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@minimumFractionDigits': (m.Scope scope, NumberFormatParseResult target)=>target.minimumFractionDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@minimumFractionDigits:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.minimumFractionDigits=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@groupingSize': (m.Scope scope, NumberFormatParseResult target)=>target.groupingSize,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@groupingSize:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.groupingSize=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@finalGroupingSize': (m.Scope scope, NumberFormatParseResult target)=>target.finalGroupingSize,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@finalGroupingSize:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.finalGroupingSize=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@decimalSeparatorAlwaysShown': (m.Scope scope, NumberFormatParseResult target)=>target.decimalSeparatorAlwaysShown,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@decimalSeparatorAlwaysShown:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.decimalSeparatorAlwaysShown=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@useSignForPositiveExponent': (m.Scope scope, NumberFormatParseResult target)=>target.useSignForPositiveExponent,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@useSignForPositiveExponent:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.useSignForPositiveExponent=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@useExponentialNotation': (m.Scope scope, NumberFormatParseResult target)=>target.useExponentialNotation,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@useExponentialNotation:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.useExponentialNotation=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@decimalDigits': (m.Scope scope, NumberFormatParseResult target)=>target.decimalDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@decimalDigits:set': (m.Scope scope, NumberFormatParseResult target)=>(other)=>target.decimalDigits=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@multiplierDigits': (m.Scope scope, NumberFormatParseResult target)=>target.multiplierDigits,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParseResult@': (m.Scope scope)=>( symbols,  decimalDigits){
return NumberFormatParseResult(symbols, decimalDigits);
},
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@#as': (m.Scope scope, target)=>()=>target as NumberFormatParser,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@#is': (m.Scope scope, target)=>()=>target is NumberFormatParser,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_SEPARATOR': (m.Scope scope)=>NumberFormatParser.PATTERN_SEPARATOR,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@QUOTE': (m.Scope scope)=>NumberFormatParser.QUOTE,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_DIGIT': (m.Scope scope)=>NumberFormatParser.PATTERN_DIGIT,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_ZERO_DIGIT': (m.Scope scope)=>NumberFormatParser.PATTERN_ZERO_DIGIT,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_GROUPING_SEPARATOR': (m.Scope scope)=>NumberFormatParser.PATTERN_GROUPING_SEPARATOR,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_DECIMAL_SEPARATOR': (m.Scope scope)=>NumberFormatParser.PATTERN_DECIMAL_SEPARATOR,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_CURRENCY_SIGN': (m.Scope scope)=>NumberFormatParser.PATTERN_CURRENCY_SIGN,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_PER_MILLE': (m.Scope scope)=>NumberFormatParser.PATTERN_PER_MILLE,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PER_MILLE_SCALE': (m.Scope scope)=>NumberFormatParser.PER_MILLE_SCALE,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_PERCENT': (m.Scope scope)=>NumberFormatParser.PATTERN_PERCENT,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PERCENT_SCALE': (m.Scope scope)=>NumberFormatParser.PERCENT_SCALE,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_EXPONENT': (m.Scope scope)=>NumberFormatParser.PATTERN_EXPONENT,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@PATTERN_PLUS': (m.Scope scope)=>NumberFormatParser.PATTERN_PLUS,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@symbols': (m.Scope scope, NumberFormatParser target)=>target.symbols,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@pattern': (m.Scope scope, NumberFormatParser target)=>target.pattern,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@isForCurrency': (m.Scope scope, NumberFormatParser target)=>target.isForCurrency,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@currencySymbol': (m.Scope scope, NumberFormatParser target)=>target.currencySymbol,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@currencyName': (m.Scope scope, NumberFormatParser target)=>target.currencyName,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@result': (m.Scope scope, NumberFormatParser target)=>target.result,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@groupingSizeSetExplicitly': (m.Scope scope, NumberFormatParser target)=>target.groupingSizeSetExplicitly,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@groupingSizeSetExplicitly:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.groupingSizeSetExplicitly=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@inQuote': (m.Scope scope, NumberFormatParser target)=>target.inQuote,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@inQuote:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.inQuote=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@decimalPos': (m.Scope scope, NumberFormatParser target)=>target.decimalPos,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@decimalPos:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.decimalPos=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@digitLeftCount': (m.Scope scope, NumberFormatParser target)=>target.digitLeftCount,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@digitLeftCount:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.digitLeftCount=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@zeroDigitCount': (m.Scope scope, NumberFormatParser target)=>target.zeroDigitCount,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@zeroDigitCount:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.zeroDigitCount=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@digitRightCount': (m.Scope scope, NumberFormatParser target)=>target.digitRightCount,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@digitRightCount:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.digitRightCount=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@groupingCount': (m.Scope scope, NumberFormatParser target)=>target.groupingCount,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@groupingCount:set': (m.Scope scope, NumberFormatParser target)=>(other)=>target.groupingCount=other,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@': (m.Scope scope)=>( symbols,  input,  isForCurrency,  currencySymbol,  currencyName,  decimalDigits){
return NumberFormatParser(symbols, input, isForCurrency, currencySymbol, currencyName, decimalDigits);
},
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@parse': (m.Scope scope)=>NumberFormatParser.parse,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@parseCharacterAffix': (m.Scope scope, NumberFormatParser target)=>target.parseCharacterAffix,
'package:intl/src/intl/number_format_parser.dart@NumberFormatParser@parseTrunkCharacter': (m.Scope scope, NumberFormatParser target)=>target.parseTrunkCharacter,

};
}