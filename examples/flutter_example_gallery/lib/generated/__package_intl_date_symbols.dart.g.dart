import 'package:intl/date_symbols.dart';
import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
Map<String,Function> getLibrary(m.MicroDartEngine engine) {
return {
'package:intl/date_symbols.dart@@en_USSymbols': (m.Scope scope)=>en_USSymbols,
'package:intl/date_symbols.dart@@en_USPatterns': (m.Scope scope)=>en_USPatterns,
'package:intl/date_symbols.dart@DateSymbols@#as': (m.Scope scope, target)=>()=>target as DateSymbols,
'package:intl/date_symbols.dart@DateSymbols@#is': (m.Scope scope, target)=>()=>target is DateSymbols,
'package:intl/date_symbols.dart@DateSymbols@NAME': (m.Scope scope, DateSymbols target)=>target.NAME,
'package:intl/date_symbols.dart@DateSymbols@NAME:set': (m.Scope scope, DateSymbols target)=>(other)=>target.NAME=other,
'package:intl/date_symbols.dart@DateSymbols@ERAS': (m.Scope scope, DateSymbols target)=>target.ERAS,
'package:intl/date_symbols.dart@DateSymbols@ERAS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.ERAS=other,
'package:intl/date_symbols.dart@DateSymbols@ERANAMES': (m.Scope scope, DateSymbols target)=>target.ERANAMES,
'package:intl/date_symbols.dart@DateSymbols@ERANAMES:set': (m.Scope scope, DateSymbols target)=>(other)=>target.ERANAMES=other,
'package:intl/date_symbols.dart@DateSymbols@NARROWMONTHS': (m.Scope scope, DateSymbols target)=>target.NARROWMONTHS,
'package:intl/date_symbols.dart@DateSymbols@NARROWMONTHS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.NARROWMONTHS=other,
'package:intl/date_symbols.dart@DateSymbols@STANDALONENARROWMONTHS': (m.Scope scope, DateSymbols target)=>target.STANDALONENARROWMONTHS,
'package:intl/date_symbols.dart@DateSymbols@STANDALONENARROWMONTHS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.STANDALONENARROWMONTHS=other,
'package:intl/date_symbols.dart@DateSymbols@MONTHS': (m.Scope scope, DateSymbols target)=>target.MONTHS,
'package:intl/date_symbols.dart@DateSymbols@MONTHS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.MONTHS=other,
'package:intl/date_symbols.dart@DateSymbols@STANDALONEMONTHS': (m.Scope scope, DateSymbols target)=>target.STANDALONEMONTHS,
'package:intl/date_symbols.dart@DateSymbols@STANDALONEMONTHS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.STANDALONEMONTHS=other,
'package:intl/date_symbols.dart@DateSymbols@SHORTMONTHS': (m.Scope scope, DateSymbols target)=>target.SHORTMONTHS,
'package:intl/date_symbols.dart@DateSymbols@SHORTMONTHS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.SHORTMONTHS=other,
'package:intl/date_symbols.dart@DateSymbols@STANDALONESHORTMONTHS': (m.Scope scope, DateSymbols target)=>target.STANDALONESHORTMONTHS,
'package:intl/date_symbols.dart@DateSymbols@STANDALONESHORTMONTHS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.STANDALONESHORTMONTHS=other,
'package:intl/date_symbols.dart@DateSymbols@WEEKDAYS': (m.Scope scope, DateSymbols target)=>target.WEEKDAYS,
'package:intl/date_symbols.dart@DateSymbols@WEEKDAYS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.WEEKDAYS=other,
'package:intl/date_symbols.dart@DateSymbols@STANDALONEWEEKDAYS': (m.Scope scope, DateSymbols target)=>target.STANDALONEWEEKDAYS,
'package:intl/date_symbols.dart@DateSymbols@STANDALONEWEEKDAYS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.STANDALONEWEEKDAYS=other,
'package:intl/date_symbols.dart@DateSymbols@SHORTWEEKDAYS': (m.Scope scope, DateSymbols target)=>target.SHORTWEEKDAYS,
'package:intl/date_symbols.dart@DateSymbols@SHORTWEEKDAYS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.SHORTWEEKDAYS=other,
'package:intl/date_symbols.dart@DateSymbols@STANDALONESHORTWEEKDAYS': (m.Scope scope, DateSymbols target)=>target.STANDALONESHORTWEEKDAYS,
'package:intl/date_symbols.dart@DateSymbols@STANDALONESHORTWEEKDAYS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.STANDALONESHORTWEEKDAYS=other,
'package:intl/date_symbols.dart@DateSymbols@NARROWWEEKDAYS': (m.Scope scope, DateSymbols target)=>target.NARROWWEEKDAYS,
'package:intl/date_symbols.dart@DateSymbols@NARROWWEEKDAYS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.NARROWWEEKDAYS=other,
'package:intl/date_symbols.dart@DateSymbols@STANDALONENARROWWEEKDAYS': (m.Scope scope, DateSymbols target)=>target.STANDALONENARROWWEEKDAYS,
'package:intl/date_symbols.dart@DateSymbols@STANDALONENARROWWEEKDAYS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.STANDALONENARROWWEEKDAYS=other,
'package:intl/date_symbols.dart@DateSymbols@SHORTQUARTERS': (m.Scope scope, DateSymbols target)=>target.SHORTQUARTERS,
'package:intl/date_symbols.dart@DateSymbols@SHORTQUARTERS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.SHORTQUARTERS=other,
'package:intl/date_symbols.dart@DateSymbols@QUARTERS': (m.Scope scope, DateSymbols target)=>target.QUARTERS,
'package:intl/date_symbols.dart@DateSymbols@QUARTERS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.QUARTERS=other,
'package:intl/date_symbols.dart@DateSymbols@AMPMS': (m.Scope scope, DateSymbols target)=>target.AMPMS,
'package:intl/date_symbols.dart@DateSymbols@AMPMS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.AMPMS=other,
'package:intl/date_symbols.dart@DateSymbols@DATEFORMATS': (m.Scope scope, DateSymbols target)=>target.DATEFORMATS,
'package:intl/date_symbols.dart@DateSymbols@DATEFORMATS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.DATEFORMATS=other,
'package:intl/date_symbols.dart@DateSymbols@TIMEFORMATS': (m.Scope scope, DateSymbols target)=>target.TIMEFORMATS,
'package:intl/date_symbols.dart@DateSymbols@TIMEFORMATS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.TIMEFORMATS=other,
'package:intl/date_symbols.dart@DateSymbols@DATETIMEFORMATS': (m.Scope scope, DateSymbols target)=>target.DATETIMEFORMATS,
'package:intl/date_symbols.dart@DateSymbols@DATETIMEFORMATS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.DATETIMEFORMATS=other,
'package:intl/date_symbols.dart@DateSymbols@AVAILABLEFORMATS': (m.Scope scope, DateSymbols target)=>target.AVAILABLEFORMATS,
'package:intl/date_symbols.dart@DateSymbols@AVAILABLEFORMATS:set': (m.Scope scope, DateSymbols target)=>(other)=>target.AVAILABLEFORMATS=other,
'package:intl/date_symbols.dart@DateSymbols@FIRSTDAYOFWEEK': (m.Scope scope, DateSymbols target)=>target.FIRSTDAYOFWEEK,
'package:intl/date_symbols.dart@DateSymbols@FIRSTDAYOFWEEK:set': (m.Scope scope, DateSymbols target)=>(other)=>target.FIRSTDAYOFWEEK=other,
'package:intl/date_symbols.dart@DateSymbols@WEEKENDRANGE': (m.Scope scope, DateSymbols target)=>target.WEEKENDRANGE,
'package:intl/date_symbols.dart@DateSymbols@WEEKENDRANGE:set': (m.Scope scope, DateSymbols target)=>(other)=>target.WEEKENDRANGE=other,
'package:intl/date_symbols.dart@DateSymbols@FIRSTWEEKCUTOFFDAY': (m.Scope scope, DateSymbols target)=>target.FIRSTWEEKCUTOFFDAY,
'package:intl/date_symbols.dart@DateSymbols@FIRSTWEEKCUTOFFDAY:set': (m.Scope scope, DateSymbols target)=>(other)=>target.FIRSTWEEKCUTOFFDAY=other,
'package:intl/date_symbols.dart@DateSymbols@ZERODIGIT': (m.Scope scope, DateSymbols target)=>target.ZERODIGIT,
'package:intl/date_symbols.dart@DateSymbols@ZERODIGIT:set': (m.Scope scope, DateSymbols target)=>(other)=>target.ZERODIGIT=other,
'package:intl/date_symbols.dart@DateSymbols@': (m.Scope scope)=>({ AMPMS,  AVAILABLEFORMATS,  DATEFORMATS,  DATETIMEFORMATS,  ERANAMES,  ERAS,  FIRSTDAYOFWEEK,  FIRSTWEEKCUTOFFDAY,  MONTHS,  NAME,  NARROWMONTHS,  NARROWWEEKDAYS,  QUARTERS,  SHORTMONTHS,  SHORTQUARTERS,  SHORTWEEKDAYS,  STANDALONEMONTHS,  STANDALONENARROWMONTHS,  STANDALONENARROWWEEKDAYS,  STANDALONESHORTMONTHS,  STANDALONESHORTWEEKDAYS,  STANDALONEWEEKDAYS,  TIMEFORMATS,  WEEKDAYS,  WEEKENDRANGE,  ZERODIGIT}){
return DateSymbols(AMPMS:AMPMS, AVAILABLEFORMATS:AVAILABLEFORMATS, DATEFORMATS:DATEFORMATS, DATETIMEFORMATS:DATETIMEFORMATS, ERANAMES:ERANAMES, ERAS:ERAS, FIRSTDAYOFWEEK:FIRSTDAYOFWEEK, FIRSTWEEKCUTOFFDAY:FIRSTWEEKCUTOFFDAY, MONTHS:MONTHS, NAME:NAME, NARROWMONTHS:NARROWMONTHS, NARROWWEEKDAYS:NARROWWEEKDAYS, QUARTERS:QUARTERS, SHORTMONTHS:SHORTMONTHS, SHORTQUARTERS:SHORTQUARTERS, SHORTWEEKDAYS:SHORTWEEKDAYS, STANDALONEMONTHS:STANDALONEMONTHS, STANDALONENARROWMONTHS:STANDALONENARROWMONTHS, STANDALONENARROWWEEKDAYS:STANDALONENARROWWEEKDAYS, STANDALONESHORTMONTHS:STANDALONESHORTMONTHS, STANDALONESHORTWEEKDAYS:STANDALONESHORTWEEKDAYS, STANDALONEWEEKDAYS:STANDALONEWEEKDAYS, TIMEFORMATS:TIMEFORMATS, WEEKDAYS:WEEKDAYS, WEEKENDRANGE:WEEKENDRANGE, ZERODIGIT:ZERODIGIT);
},
'package:intl/date_symbols.dart@DateSymbols@deserializeFromMap': (m.Scope scope)=>DateSymbols.deserializeFromMap,
'package:intl/date_symbols.dart@DateSymbols@serializeToMap': (m.Scope scope, DateSymbols target)=>target.serializeToMap,
'package:intl/date_symbols.dart@DateSymbols@toString': (m.Scope scope, DateSymbols target)=>target.toString,

};
}