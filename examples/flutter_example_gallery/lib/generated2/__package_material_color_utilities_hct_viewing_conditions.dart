// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:material_color_utilities/hct/viewing_conditions.dart';
import 'dart:math';
import 'package:material_color_utilities/utils/color_utils.dart';
import 'package:material_color_utilities/utils/math_utils.dart';

const libraryMirror = m.LibraryMirror(
  'package:material_color_utilities/hct/viewing_conditions.dart',
  {
    'ViewingConditions.standard': _ViewingConditions_standard$,
    'ViewingConditions.sRgb': _ViewingConditions_sRgb$,
    'ViewingConditions.': _ViewingConditions__$,
    'ViewingConditions.make': _ViewingConditions_make_$,
  },
  {},
  {
    'ViewingConditions': m.ClassMirror(
      'ViewingConditions',
      {
        '#as': ViewingConditions_as$,
        '#is': ViewingConditions_is$,
        'whitePoint': _ViewingConditions_whitePoint$,
        'adaptingLuminance': _ViewingConditions_adaptingLuminance$,
        'backgroundLstar': _ViewingConditions_backgroundLstar$,
        'surround': _ViewingConditions_surround$,
        'discountingIlluminant': _ViewingConditions_discountingIlluminant$,
        'backgroundYTowhitePointY':
            _ViewingConditions_backgroundYTowhitePointY$,
        'aw': _ViewingConditions_aw$,
        'nbb': _ViewingConditions_nbb$,
        'ncb': _ViewingConditions_ncb$,
        'c': _ViewingConditions_c$,
        'nC': _ViewingConditions_nC$,
        'drgbInverse': _ViewingConditions_drgbInverse$,
        'rgbD': _ViewingConditions_rgbD$,
        'fl': _ViewingConditions_fl$,
        'fLRoot': _ViewingConditions_fLRoot$,
        'z': _ViewingConditions_z$,
      },
      {},
    )
  },
);
Function ViewingConditions_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as ViewingConditions;
Function ViewingConditions_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is ViewingConditions;
Function _ViewingConditions_standard$(m.Scope scope$) =>
    () => ViewingConditions.standard;
Function _ViewingConditions_sRgb$(m.Scope scope$) =>
    () => ViewingConditions.sRgb;
Function _ViewingConditions_whitePoint$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.whitePoint;
    };
Function _ViewingConditions_adaptingLuminance$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.adaptingLuminance;
    };
Function _ViewingConditions_backgroundLstar$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.backgroundLstar;
    };
Function _ViewingConditions_surround$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.surround;
    };
Function _ViewingConditions_discountingIlluminant$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.discountingIlluminant;
    };
Function _ViewingConditions_backgroundYTowhitePointY$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.backgroundYTowhitePointY;
    };
Function _ViewingConditions_aw$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.aw;
    };
Function _ViewingConditions_nbb$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.nbb;
    };
Function _ViewingConditions_ncb$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.ncb;
    };
Function _ViewingConditions_c$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.c;
    };
Function _ViewingConditions_nC$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.nC;
    };
Function _ViewingConditions_drgbInverse$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.drgbInverse;
    };
Function _ViewingConditions_rgbD$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.rgbD;
    };
Function _ViewingConditions_fl$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.fl;
    };
Function _ViewingConditions_fLRoot$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.fLRoot;
    };
Function _ViewingConditions_z$(
  m.Scope scope$,
  ViewingConditions target$,
) =>
    () {
      return target$.z;
    };
Function _ViewingConditions__$(m.Scope scope$) => ({
      required List whitePoint,
      required double adaptingLuminance,
      required double backgroundLstar,
      required double surround,
      required bool discountingIlluminant,
      required double backgroundYTowhitePointY,
      required double aw,
      required double nbb,
      required double ncb,
      required double c,
      required double nC,
      required List drgbInverse,
      required List rgbD,
      required double fl,
      required double fLRoot,
      required double z,
    }) {
      return ViewingConditions(
        adaptingLuminance: adaptingLuminance,
        aw: aw,
        backgroundLstar: backgroundLstar,
        backgroundYTowhitePointY: backgroundYTowhitePointY,
        c: c,
        discountingIlluminant: discountingIlluminant,
        drgbInverse: List.from(drgbInverse),
        fLRoot: fLRoot,
        fl: fl,
        nC: nC,
        nbb: nbb,
        ncb: ncb,
        rgbD: List.from(rgbD),
        surround: surround,
        whitePoint: List.from(whitePoint),
        z: z,
      );
    };
Function _ViewingConditions_make_$(m.Scope scope$) => ViewingConditions.make;
