// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:material_color_utilities/hct/cam16.dart';
import 'dart:math';
import 'package:material_color_utilities/utils/color_utils.dart';
import 'package:material_color_utilities/utils/math_utils.dart';
import 'package:material_color_utilities/hct/viewing_conditions.dart';

const libraryMirror = m.LibraryMirror(
  'package:material_color_utilities/hct/cam16.dart',
  {
    'Cam16.': _Cam16__$,
    'Cam16.fromInt': _Cam16_fromInt$,
    'Cam16.fromIntInViewingConditions': _Cam16_fromIntInViewingConditions$,
    'Cam16.fromJch': _Cam16_fromJch$,
    'Cam16.fromJchInViewingConditions': _Cam16_fromJchInViewingConditions$,
    'Cam16.fromUcs': _Cam16_fromUcs$,
    'Cam16.fromUcsInViewingConditions': _Cam16_fromUcsInViewingConditions$,
  },
  {},
  {
    'Cam16': m.ClassMirror(
      'Cam16',
      {
        '#as': Cam16_as$,
        '#is': Cam16_is$,
        'hue': _Cam16_hue$,
        'chroma': _Cam16_chroma$,
        'j': _Cam16_j$,
        'q': _Cam16_q$,
        'm': _Cam16_m$,
        's': _Cam16_s$,
        'jstar': _Cam16_jstar$,
        'astar': _Cam16_astar$,
        'bstar': _Cam16_bstar$,
        'distance': _Cam16_distance$,
        'toInt': _Cam16_toInt$,
        'viewed': _Cam16_viewed$,
      },
      {},
    )
  },
);
Function Cam16_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Cam16;
Function Cam16_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Cam16;
Function _Cam16_hue$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.hue;
    };
Function _Cam16_chroma$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.chroma;
    };
Function _Cam16_j$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.j;
    };
Function _Cam16_q$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.q;
    };
Function _Cam16_m$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.m;
    };
Function _Cam16_s$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.s;
    };
Function _Cam16_jstar$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.jstar;
    };
Function _Cam16_astar$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.astar;
    };
Function _Cam16_bstar$(
  m.Scope scope$,
  Cam16 target$,
) =>
    () {
      return target$.bstar;
    };
Function _Cam16__$(m.Scope scope$) => (
      double hue,
      double chroma,
      double j,
      double q,
      double m,
      double s,
      double jstar,
      double astar,
      double bstar,
    ) {
      return Cam16(
        hue,
        chroma,
        j,
        q,
        m,
        s,
        jstar,
        astar,
        bstar,
      );
    };
Function _Cam16_distance$(
  m.Scope scope$,
  Cam16 target$,
) =>
    target$.distance;
Function _Cam16_fromInt$(m.Scope scope$) => Cam16.fromInt;
Function _Cam16_fromIntInViewingConditions$(m.Scope scope$) =>
    Cam16.fromIntInViewingConditions;
Function _Cam16_fromJch$(m.Scope scope$) => Cam16.fromJch;
Function _Cam16_fromJchInViewingConditions$(m.Scope scope$) =>
    Cam16.fromJchInViewingConditions;
Function _Cam16_fromUcs$(m.Scope scope$) => Cam16.fromUcs;
Function _Cam16_fromUcsInViewingConditions$(m.Scope scope$) =>
    Cam16.fromUcsInViewingConditions;
Function _Cam16_toInt$(
  m.Scope scope$,
  Cam16 target$,
) =>
    target$.toInt;
Function _Cam16_viewed$(
  m.Scope scope$,
  Cam16 target$,
) =>
    target$.viewed;
