// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:collection/src/union_set_controller.dart';
import 'package:collection/src/union_set.dart';

const libraryMirror = m.LibraryMirror(
  'package:collection/src/union_set_controller.dart',
  {'UnionSetController.': _UnionSetController__$},
  {},
  {
    'UnionSetController': m.ClassMirror(
      'UnionSetController',
      {
        '#as': UnionSetController_as$,
        '#is': UnionSetController_is$,
        'set': _UnionSetController_set$,
        'add': _UnionSetController_add$,
        'remove': _UnionSetController_remove$,
      },
      {},
    )
  },
);
Function UnionSetController_as$<E>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnionSetController<E>;
Function UnionSetController_is$<E>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnionSetController<E>;
Function _UnionSetController_set$<E>(
  m.Scope scope$,
  UnionSetController<E> target$,
) =>
    () {
      return target$.set;
    };
Function _UnionSetController__$(m.Scope scope$) => ({bool? disjoint}) {
      return UnionSetController(disjoint: disjoint ?? false);
    };
Function _UnionSetController_add$<E>(
  m.Scope scope$,
  UnionSetController<E> target$,
) =>
    target$.add;
Function _UnionSetController_remove$<E>(
  m.Scope scope$,
  UnionSetController<E> target$,
) =>
    target$.remove;
