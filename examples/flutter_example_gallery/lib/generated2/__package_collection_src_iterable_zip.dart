// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:collection/src/iterable_zip.dart';
import 'dart:collection';

const libraryMirror = m.LibraryMirror(
  'package:collection/src/iterable_zip.dart',
  {'IterableZip.': _IterableZip__$},
  {},
  {
    'IterableZip': m.ClassMirror(
      'IterableZip',
      {
        '#as': IterableZip_as$,
        '#is': IterableZip_is$,
        'iterator': _IterableZip_iterator$,
      },
      {},
    )
  },
);
Function IterableZip_as$<T>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as IterableZip<T>;
Function IterableZip_is$<T>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is IterableZip<T>;
Function _IterableZip_iterator$<T>(
  m.Scope scope$,
  IterableZip<T> target$,
) =>
    () {
      return target$.iterator;
    };
Function _IterableZip__$(m.Scope scope$) => (Iterable iterables) {
      return IterableZip(Iterable.castFrom(iterables));
    };
