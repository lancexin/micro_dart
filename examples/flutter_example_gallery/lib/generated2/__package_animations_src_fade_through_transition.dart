// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:animations/src/fade_through_transition.dart';
import 'package:flutter/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:animations/src/fade_through_transition.dart',
  {
    'FadeThroughPageTransitionsBuilder.': _FadeThroughPageTransitionsBuilder__$,
    'FadeThroughTransition.': _FadeThroughTransition__$,
  },
  {},
  {
    'FadeThroughPageTransitionsBuilder': m.ClassMirror(
      'FadeThroughPageTransitionsBuilder',
      {
        '#as': FadeThroughPageTransitionsBuilder_as$,
        '#is': FadeThroughPageTransitionsBuilder_is$,
        'fillColor': _FadeThroughPageTransitionsBuilder_fillColor$,
        'buildTransitions':
            _FadeThroughPageTransitionsBuilder_buildTransitions$,
      },
      {},
    ),
    'FadeThroughTransition': m.ClassMirror(
      'FadeThroughTransition',
      {
        '#as': FadeThroughTransition_as$,
        '#is': FadeThroughTransition_is$,
        'animation': _FadeThroughTransition_animation$,
        'secondaryAnimation': _FadeThroughTransition_secondaryAnimation$,
        'fillColor': _FadeThroughTransition_fillColor$,
        'child': _FadeThroughTransition_child$,
        'build': _FadeThroughTransition_build$,
      },
      {},
    ),
  },
);
Function FadeThroughPageTransitionsBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as FadeThroughPageTransitionsBuilder;
Function FadeThroughPageTransitionsBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is FadeThroughPageTransitionsBuilder;
Function _FadeThroughPageTransitionsBuilder_fillColor$(
  m.Scope scope$,
  FadeThroughPageTransitionsBuilder target$,
) =>
    () {
      return target$.fillColor;
    };
Function _FadeThroughPageTransitionsBuilder__$(m.Scope scope$) =>
    ({Color? fillColor}) {
      return FadeThroughPageTransitionsBuilder(fillColor: fillColor);
    };
Function _FadeThroughPageTransitionsBuilder_buildTransitions$<T>(
  m.Scope scope$,
  FadeThroughPageTransitionsBuilder target$,
) =>
    target$.buildTransitions<T>;
Function FadeThroughTransition_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as FadeThroughTransition;
Function FadeThroughTransition_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is FadeThroughTransition;
Function _FadeThroughTransition_animation$(
  m.Scope scope$,
  FadeThroughTransition target$,
) =>
    () {
      return target$.animation;
    };
Function _FadeThroughTransition_secondaryAnimation$(
  m.Scope scope$,
  FadeThroughTransition target$,
) =>
    () {
      return target$.secondaryAnimation;
    };
Function _FadeThroughTransition_fillColor$(
  m.Scope scope$,
  FadeThroughTransition target$,
) =>
    () {
      return target$.fillColor;
    };
Function _FadeThroughTransition_child$(
  m.Scope scope$,
  FadeThroughTransition target$,
) =>
    () {
      return target$.child;
    };
Function _FadeThroughTransition__$(m.Scope scope$) => ({
      Key? key,
      required Animation<double> animation,
      required Animation<double> secondaryAnimation,
      Color? fillColor,
      Widget? child,
    }) {
      return FadeThroughTransition(
        animation: animation,
        child: child,
        fillColor: fillColor,
        key: key,
        secondaryAnimation: secondaryAnimation,
      );
    };
Function _FadeThroughTransition_build$(
  m.Scope scope$,
  FadeThroughTransition target$,
) =>
    target$.build;
