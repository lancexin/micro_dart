// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:intl/src/date_format_internal.dart';
import 'package:intl/date_symbols.dart';
import 'package:intl/src/intl_helpers.dart';

const libraryMirror = m.LibraryMirror(
  'package:intl/src/date_format_internal.dart',
  {
    'cachedDateSymbols': _cachedDateSymbols$,
    'lastDateSymbolLocale': _lastDateSymbolLocale$,
    'dateTimePatterns': _dateTimePatterns$,
    'dateTimeSymbols': _dateTimeSymbols$,
    'initializeDateSymbols': _initializeDateSymbols$,
    'initializeDatePatterns': _initializeDatePatterns$,
    'initializeIndividualLocaleDateFormatting':
        _initializeIndividualLocaleDateFormatting$,
  },
  {
    'cachedDateSymbols': _cachedDateSymbols_set$,
    'lastDateSymbolLocale': _lastDateSymbolLocale_set$,
    'dateTimePatterns': _dateTimePatterns_set$,
    'dateTimeSymbols': _dateTimeSymbols_set$,
  },
  {},
);
Function _cachedDateSymbols$(m.Scope scope$) => () => cachedDateSymbols;
void _cachedDateSymbols_set$(DateSymbols? other$) {
  cachedDateSymbols = other$;
}

Function _lastDateSymbolLocale$(m.Scope scope$) => () => lastDateSymbolLocale;
void _lastDateSymbolLocale_set$(String? other$) {
  lastDateSymbolLocale = other$;
}

Function _dateTimePatterns$(m.Scope scope$) => () => dateTimePatterns;
void _dateTimePatterns_set$(dynamic other$) {
  dateTimePatterns = other$;
}

Function _dateTimeSymbols$(m.Scope scope$) => () => dateTimeSymbols;
void _dateTimeSymbols_set$(dynamic other$) {
  dateTimeSymbols = other$;
}

Function _initializeDateSymbols$(m.Scope scope$) => initializeDateSymbols;
Function _initializeDatePatterns$(m.Scope scope$) => initializeDatePatterns;
Function _initializeIndividualLocaleDateFormatting$(m.Scope scope$) =>
    initializeIndividualLocaleDateFormatting;
