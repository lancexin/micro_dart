// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:characters/src/grapheme_clusters/constants.dart';

const libraryMirror = m.LibraryMirror(
  'package:characters/src/grapheme_clusters/constants.dart',
  {
    'categoryCR': _categoryCR$,
    'categoryZWJ': _categoryZWJ$,
    'categoryControl': _categoryControl$,
    'categoryOther': _categoryOther$,
    'categoryExtend': _categoryExtend$,
    'categorySpacingMark': _categorySpacingMark$,
    'categoryRegionalIndicator': _categoryRegionalIndicator$,
    'categoryPictographic': _categoryPictographic$,
    'categoryLF': _categoryLF$,
    'categoryPrepend': _categoryPrepend$,
    'categoryL': _categoryL$,
    'categoryV': _categoryV$,
    'categoryT': _categoryT$,
    'categoryLV': _categoryLV$,
    'categoryLVT': _categoryLVT$,
    'categoryEoT': _categoryEoT$,
    'stateSoT': _stateSoT$,
    'stateBreak': _stateBreak$,
    'stateCR': _stateCR$,
    'stateOther': _stateOther$,
    'statePrepend': _statePrepend$,
    'stateL': _stateL$,
    'stateV': _stateV$,
    'stateT': _stateT$,
    'statePictographic': _statePictographic$,
    'statePictographicZWJ': _statePictographicZWJ$,
    'stateRegionalSingle': _stateRegionalSingle$,
    'stateSoTNoBreak': _stateSoTNoBreak$,
    'stateNoBreak': _stateNoBreak$,
    'categorySoT': _categorySoT$,
    'stateEoT': _stateEoT$,
    'stateLF': _stateLF$,
    'stateExtend': _stateExtend$,
    'stateZWJPictographic': _stateZWJPictographic$,
    'stateEoTNoBreak': _stateEoTNoBreak$,
    'stateRegionalEven': _stateRegionalEven$,
    'stateRegionalOdd': _stateRegionalOdd$,
    'stateLookaheadMin': _stateLookaheadMin$,
    'stateRegionalLookahead': _stateRegionalLookahead$,
    'stateZWJPictographicLookahead': _stateZWJPictographicLookahead$,
  },
  {},
  {},
);
Function _categoryCR$(m.Scope scope$) => () => categoryCR;
Function _categoryZWJ$(m.Scope scope$) => () => categoryZWJ;
Function _categoryControl$(m.Scope scope$) => () => categoryControl;
Function _categoryOther$(m.Scope scope$) => () => categoryOther;
Function _categoryExtend$(m.Scope scope$) => () => categoryExtend;
Function _categorySpacingMark$(m.Scope scope$) => () => categorySpacingMark;
Function _categoryRegionalIndicator$(m.Scope scope$) =>
    () => categoryRegionalIndicator;
Function _categoryPictographic$(m.Scope scope$) => () => categoryPictographic;
Function _categoryLF$(m.Scope scope$) => () => categoryLF;
Function _categoryPrepend$(m.Scope scope$) => () => categoryPrepend;
Function _categoryL$(m.Scope scope$) => () => categoryL;
Function _categoryV$(m.Scope scope$) => () => categoryV;
Function _categoryT$(m.Scope scope$) => () => categoryT;
Function _categoryLV$(m.Scope scope$) => () => categoryLV;
Function _categoryLVT$(m.Scope scope$) => () => categoryLVT;
Function _categoryEoT$(m.Scope scope$) => () => categoryEoT;
Function _stateSoT$(m.Scope scope$) => () => stateSoT;
Function _stateBreak$(m.Scope scope$) => () => stateBreak;
Function _stateCR$(m.Scope scope$) => () => stateCR;
Function _stateOther$(m.Scope scope$) => () => stateOther;
Function _statePrepend$(m.Scope scope$) => () => statePrepend;
Function _stateL$(m.Scope scope$) => () => stateL;
Function _stateV$(m.Scope scope$) => () => stateV;
Function _stateT$(m.Scope scope$) => () => stateT;
Function _statePictographic$(m.Scope scope$) => () => statePictographic;
Function _statePictographicZWJ$(m.Scope scope$) => () => statePictographicZWJ;
Function _stateRegionalSingle$(m.Scope scope$) => () => stateRegionalSingle;
Function _stateSoTNoBreak$(m.Scope scope$) => () => stateSoTNoBreak;
Function _stateNoBreak$(m.Scope scope$) => () => stateNoBreak;
Function _categorySoT$(m.Scope scope$) => () => categorySoT;
Function _stateEoT$(m.Scope scope$) => () => stateEoT;
Function _stateLF$(m.Scope scope$) => () => stateLF;
Function _stateExtend$(m.Scope scope$) => () => stateExtend;
Function _stateZWJPictographic$(m.Scope scope$) => () => stateZWJPictographic;
Function _stateEoTNoBreak$(m.Scope scope$) => () => stateEoTNoBreak;
Function _stateRegionalEven$(m.Scope scope$) => () => stateRegionalEven;
Function _stateRegionalOdd$(m.Scope scope$) => () => stateRegionalOdd;
Function _stateLookaheadMin$(m.Scope scope$) => () => stateLookaheadMin;
Function _stateRegionalLookahead$(m.Scope scope$) =>
    () => stateRegionalLookahead;
Function _stateZWJPictographicLookahead$(m.Scope scope$) =>
    () => stateZWJPictographicLookahead;
