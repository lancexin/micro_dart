// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:material_color_utilities/quantize/point_provider_lab.dart';
import 'package:material_color_utilities/utils/color_utils.dart';
import 'package:material_color_utilities/quantize/point_provider.dart';

const libraryMirror = m.LibraryMirror(
  'package:material_color_utilities/quantize/point_provider_lab.dart',
  {'PointProviderLab.': _PointProviderLab__$},
  {},
  {
    'PointProviderLab': m.ClassMirror(
      'PointProviderLab',
      {
        '#as': PointProviderLab_as$,
        '#is': PointProviderLab_is$,
        'fromInt': _PointProviderLab_fromInt$,
        'toInt': _PointProviderLab_toInt$,
        'distance': _PointProviderLab_distance$,
      },
      {},
    )
  },
);
Function PointProviderLab_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PointProviderLab;
Function PointProviderLab_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PointProviderLab;
Function _PointProviderLab__$(m.Scope scope$) => () {
      return PointProviderLab();
    };
Function _PointProviderLab_fromInt$(
  m.Scope scope$,
  PointProviderLab target$,
) =>
    target$.fromInt;
Function _PointProviderLab_toInt$(
  m.Scope scope$,
  PointProviderLab target$,
) =>
    target$.toInt;
Function _PointProviderLab_distance$(
  m.Scope scope$,
  PointProviderLab target$,
) =>
    target$.distance;
