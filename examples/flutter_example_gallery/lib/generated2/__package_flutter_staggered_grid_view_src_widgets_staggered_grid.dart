// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter_staggered_grid_view/src/widgets/staggered_grid.dart';
import 'package:flutter/material.dart';
import 'package:flutter_staggered_grid_view/src/rendering/staggered_grid.dart';
import 'package:flutter_staggered_grid_view/src/widgets/staggered_grid_tile.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter_staggered_grid_view/src/widgets/staggered_grid.dart',
  {
    'StaggeredGrid.custom': _StaggeredGrid_custom_$,
    'StaggeredGrid.count': _StaggeredGrid_count_$,
    'StaggeredGrid.extent': _StaggeredGrid_extent_$,
  },
  {},
  {
    'StaggeredGrid': m.ClassMirror(
      'StaggeredGrid',
      {
        '#as': StaggeredGrid_as$,
        '#is': StaggeredGrid_is$,
        'delegate': _StaggeredGrid_delegate$,
        'mainAxisSpacing': _StaggeredGrid_mainAxisSpacing$,
        'crossAxisSpacing': _StaggeredGrid_crossAxisSpacing$,
        'axisDirection': _StaggeredGrid_axisDirection$,
        'createRenderObject': _StaggeredGrid_createRenderObject$,
        'updateRenderObject': _StaggeredGrid_updateRenderObject$,
      },
      {},
    )
  },
);
Function StaggeredGrid_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as StaggeredGrid;
Function StaggeredGrid_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is StaggeredGrid;
Function _StaggeredGrid_delegate$(
  m.Scope scope$,
  StaggeredGrid target$,
) =>
    () {
      return target$.delegate;
    };
Function _StaggeredGrid_mainAxisSpacing$(
  m.Scope scope$,
  StaggeredGrid target$,
) =>
    () {
      return target$.mainAxisSpacing;
    };
Function _StaggeredGrid_crossAxisSpacing$(
  m.Scope scope$,
  StaggeredGrid target$,
) =>
    () {
      return target$.crossAxisSpacing;
    };
Function _StaggeredGrid_axisDirection$(
  m.Scope scope$,
  StaggeredGrid target$,
) =>
    () {
      return target$.axisDirection;
    };
Function _StaggeredGrid_custom_$(m.Scope scope$) => StaggeredGrid.custom;
Function _StaggeredGrid_count_$(m.Scope scope$) => StaggeredGrid.count;
Function _StaggeredGrid_extent_$(m.Scope scope$) => StaggeredGrid.extent;
Function _StaggeredGrid_createRenderObject$(
  m.Scope scope$,
  StaggeredGrid target$,
) =>
    target$.createRenderObject;
Function _StaggeredGrid_updateRenderObject$(
  m.Scope scope$,
  StaggeredGrid target$,
) =>
    target$.updateRenderObject;
