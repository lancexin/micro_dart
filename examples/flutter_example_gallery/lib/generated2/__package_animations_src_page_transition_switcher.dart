// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:animations/src/page_transition_switcher.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';

const libraryMirror = m.LibraryMirror(
  'package:animations/src/page_transition_switcher.dart',
  {
    'PageTransitionSwitcher.': _PageTransitionSwitcher__$,
    'PageTransitionSwitcher.defaultLayoutBuilder':
        _PageTransitionSwitcher_defaultLayoutBuilder$,
  },
  {},
  {
    'PageTransitionSwitcher': m.ClassMirror(
      'PageTransitionSwitcher',
      {
        '#as': PageTransitionSwitcher_as$,
        '#is': PageTransitionSwitcher_is$,
        'child': _PageTransitionSwitcher_child$,
        'duration': _PageTransitionSwitcher_duration$,
        'reverse': _PageTransitionSwitcher_reverse$,
        'transitionBuilder': _PageTransitionSwitcher_transitionBuilder$,
        'layoutBuilder': _PageTransitionSwitcher_layoutBuilder$,
        'createState': _PageTransitionSwitcher_createState$,
      },
      {},
    )
  },
);
Function PageTransitionSwitcher_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PageTransitionSwitcher;
Function PageTransitionSwitcher_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PageTransitionSwitcher;
Function _PageTransitionSwitcher_child$(
  m.Scope scope$,
  PageTransitionSwitcher target$,
) =>
    () {
      return target$.child;
    };
Function _PageTransitionSwitcher_duration$(
  m.Scope scope$,
  PageTransitionSwitcher target$,
) =>
    () {
      return target$.duration;
    };
Function _PageTransitionSwitcher_reverse$(
  m.Scope scope$,
  PageTransitionSwitcher target$,
) =>
    () {
      return target$.reverse;
    };
Function _PageTransitionSwitcher_transitionBuilder$(
  m.Scope scope$,
  PageTransitionSwitcher target$,
) =>
    () {
      return target$.transitionBuilder;
    };
Function _PageTransitionSwitcher_layoutBuilder$(
  m.Scope scope$,
  PageTransitionSwitcher target$,
) =>
    () {
      return target$.layoutBuilder;
    };
Function _PageTransitionSwitcher__$(m.Scope scope$) => ({
      Key? key,
      Duration? duration,
      bool? reverse,
      required m.FunctionPointer transitionBuilder,
      m.FunctionPointer? layoutBuilder,
      Widget? child,
    }) {
      Widget layoutBuilderProxy(List layoutBuilder_entries$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            layoutBuilder!,
            [layoutBuilder_entries$],
            {},
          );
      Widget transitionBuilderProxy(
        Widget transitionBuilder_child$,
        Animation<double> transitionBuilder_primaryAnimation$,
        Animation<double> transitionBuilder_secondaryAnimation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            transitionBuilder,
            [
              transitionBuilder_child$,
              transitionBuilder_primaryAnimation$,
              transitionBuilder_secondaryAnimation$,
            ],
            {},
          );
      return PageTransitionSwitcher(
        duration: duration ?? const Duration(milliseconds: 300),
        key: key,
        layoutBuilder: layoutBuilder == null
            ? PageTransitionSwitcher.defaultLayoutBuilder
            : layoutBuilderProxy,
        reverse: reverse ?? false,
        transitionBuilder: transitionBuilderProxy,
        child: child,
      );
    };
Function _PageTransitionSwitcher_defaultLayoutBuilder$(m.Scope scope$) =>
    PageTransitionSwitcher.defaultLayoutBuilder;
Function _PageTransitionSwitcher_createState$(
  m.Scope scope$,
  PageTransitionSwitcher target$,
) =>
    target$.createState;
