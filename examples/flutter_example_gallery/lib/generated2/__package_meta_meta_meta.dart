// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:meta/meta_meta.dart';

const libraryMirror = m.LibraryMirror(
  'package:meta/meta_meta.dart',
  {
    'Target.': _Target__$,
    'TargetKind.classType': _TargetKind_classType$,
    'TargetKind.enumType': _TargetKind_enumType$,
    'TargetKind.extension': _TargetKind_extension$,
    'TargetKind.field': _TargetKind_field$,
    'TargetKind.function': _TargetKind_function$,
    'TargetKind.library': _TargetKind_library$,
    'TargetKind.getter': _TargetKind_getter$,
    'TargetKind.method': _TargetKind_method$,
    'TargetKind.mixinType': _TargetKind_mixinType$,
    'TargetKind.parameter': _TargetKind_parameter$,
    'TargetKind.setter': _TargetKind_setter$,
    'TargetKind.topLevelVariable': _TargetKind_topLevelVariable$,
    'TargetKind.type': _TargetKind_type$,
    'TargetKind.typedefType': _TargetKind_typedefType$,
    'TargetKind.values': _TargetKind_values$,
  },
  {},
  {
    'Target': m.ClassMirror(
      'Target',
      {
        '#as': Target_as$,
        '#is': Target_is$,
        'kinds': _Target_kinds$,
      },
      {},
    ),
    'TargetKind': m.ClassMirror(
      'TargetKind',
      {},
      {},
    ),
  },
);
Function Target_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Target;
Function Target_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Target;
Function _Target_kinds$(
  m.Scope scope$,
  Target target$,
) =>
    () {
      return target$.kinds;
    };
Function _Target__$(m.Scope scope$) => (Set kinds) {
      return Target(Set.from(kinds));
    };
Function _TargetKind_classType$(m.Scope scope$) => () => TargetKind.classType;
Function _TargetKind_enumType$(m.Scope scope$) => () => TargetKind.enumType;
Function _TargetKind_extension$(m.Scope scope$) => () => TargetKind.extension;
Function _TargetKind_field$(m.Scope scope$) => () => TargetKind.field;
Function _TargetKind_function$(m.Scope scope$) => () => TargetKind.function;
Function _TargetKind_library$(m.Scope scope$) => () => TargetKind.library;
Function _TargetKind_getter$(m.Scope scope$) => () => TargetKind.getter;
Function _TargetKind_method$(m.Scope scope$) => () => TargetKind.method;
Function _TargetKind_mixinType$(m.Scope scope$) => () => TargetKind.mixinType;
Function _TargetKind_parameter$(m.Scope scope$) => () => TargetKind.parameter;
Function _TargetKind_setter$(m.Scope scope$) => () => TargetKind.setter;
Function _TargetKind_topLevelVariable$(m.Scope scope$) =>
    () => TargetKind.topLevelVariable;
Function _TargetKind_type$(m.Scope scope$) => () => TargetKind.type;
Function _TargetKind_typedefType$(m.Scope scope$) =>
    () => TargetKind.typedefType;
Function _TargetKind_values$(m.Scope scope$) => () => TargetKind.values;
