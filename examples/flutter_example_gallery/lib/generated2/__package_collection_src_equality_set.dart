// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:collection/src/equality_set.dart';
import 'dart:collection';
import 'package:collection/src/equality.dart';
import 'package:collection/src/wrappers.dart';

const libraryMirror = m.LibraryMirror(
  'package:collection/src/equality_set.dart',
  {
    'EqualitySet.': _EqualitySet__$,
    'EqualitySet.from': _EqualitySet_from_$,
  },
  {},
  {
    'EqualitySet': m.ClassMirror(
      'EqualitySet',
      {
        '#as': EqualitySet_as$,
        '#is': EqualitySet_is$,
      },
      {},
    )
  },
);
Function EqualitySet_as$<E>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as EqualitySet<E>;
Function EqualitySet_is$<E>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is EqualitySet<E>;
Function _EqualitySet__$(m.Scope scope$) => (Equality equality) {
      return EqualitySet(equality);
    };
Function _EqualitySet_from_$(m.Scope scope$) => EqualitySet.from;
