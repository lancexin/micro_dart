// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:collection/src/combined_wrappers/combined_iterator.dart';

const libraryMirror = m.LibraryMirror(
  'package:collection/src/combined_wrappers/combined_iterator.dart',
  {'CombinedIterator.': _CombinedIterator__$},
  {},
  {
    'CombinedIterator': m.ClassMirror(
      'CombinedIterator',
      {
        '#as': CombinedIterator_as$,
        '#is': CombinedIterator_is$,
        'current': _CombinedIterator_current$,
        'moveNext': _CombinedIterator_moveNext$,
      },
      {},
    )
  },
);
Function CombinedIterator_as$<T>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CombinedIterator<T>;
Function CombinedIterator_is$<T>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CombinedIterator<T>;
Function _CombinedIterator_current$<T>(
  m.Scope scope$,
  CombinedIterator<T> target$,
) =>
    () {
      return target$.current;
    };
Function _CombinedIterator__$(m.Scope scope$) =>
    (Iterator<Iterator> iterators) {
      return CombinedIterator(iterators);
    };
Function _CombinedIterator_moveNext$<T>(
  m.Scope scope$,
  CombinedIterator<T> target$,
) =>
    target$.moveNext;
