// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:intl/src/plural_rules.dart';
import 'dart:math';

const libraryMirror = m.LibraryMirror(
  'package:intl/src/plural_rules.dart',
  {
    'pluralRules': _pluralRules$,
    'ZERO': _ZERO$,
    'ONE': _ONE$,
    'TWO': _TWO$,
    'FEW': _FEW$,
    'MANY': _MANY$,
    'OTHER': _OTHER$,
    'PluralCase.ZERO': _PluralCase_ZERO$,
    'PluralCase.ONE': _PluralCase_ONE$,
    'PluralCase.TWO': _PluralCase_TWO$,
    'PluralCase.FEW': _PluralCase_FEW$,
    'PluralCase.MANY': _PluralCase_MANY$,
    'PluralCase.OTHER': _PluralCase_OTHER$,
    'PluralCase.values': _PluralCase_values$,
    'startRuleEvaluation': _startRuleEvaluation$,
    'localeHasPluralRules': _localeHasPluralRules$,
  },
  {},
  {
    'PluralCase': m.ClassMirror(
      'PluralCase',
      {},
      {},
    )
  },
);
Function _pluralRules$(m.Scope scope$) => () => pluralRules;
Function _ZERO$(m.Scope scope$) => () => ZERO;
Function _ONE$(m.Scope scope$) => () => ONE;
Function _TWO$(m.Scope scope$) => () => TWO;
Function _FEW$(m.Scope scope$) => () => FEW;
Function _MANY$(m.Scope scope$) => () => MANY;
Function _OTHER$(m.Scope scope$) => () => OTHER;
Function _PluralCase_ZERO$(m.Scope scope$) => () => PluralCase.ZERO;
Function _PluralCase_ONE$(m.Scope scope$) => () => PluralCase.ONE;
Function _PluralCase_TWO$(m.Scope scope$) => () => PluralCase.TWO;
Function _PluralCase_FEW$(m.Scope scope$) => () => PluralCase.FEW;
Function _PluralCase_MANY$(m.Scope scope$) => () => PluralCase.MANY;
Function _PluralCase_OTHER$(m.Scope scope$) => () => PluralCase.OTHER;
Function _PluralCase_values$(m.Scope scope$) => () => PluralCase.values;
Function _startRuleEvaluation$(m.Scope scope$) => startRuleEvaluation;
Function _localeHasPluralRules$(m.Scope scope$) => localeHasPluralRules;
