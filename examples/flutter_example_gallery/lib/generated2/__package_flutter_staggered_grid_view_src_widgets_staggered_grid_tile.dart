// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter_staggered_grid_view/src/widgets/staggered_grid_tile.dart';
import 'package:flutter/material.dart';
import 'package:flutter_staggered_grid_view/src/rendering/staggered_grid.dart';
import 'package:flutter_staggered_grid_view/src/widgets/staggered_grid.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter_staggered_grid_view/src/widgets/staggered_grid_tile.dart',
  {
    'StaggeredGridTile.count': _StaggeredGridTile_count_$,
    'StaggeredGridTile.extent': _StaggeredGridTile_extent_$,
    'StaggeredGridTile.fit': _StaggeredGridTile_fit_$,
  },
  {},
  {
    'StaggeredGridTile': m.ClassMirror(
      'StaggeredGridTile',
      {
        '#as': StaggeredGridTile_as$,
        '#is': StaggeredGridTile_is$,
        'crossAxisCellCount': _StaggeredGridTile_crossAxisCellCount$,
        'mainAxisCellCount': _StaggeredGridTile_mainAxisCellCount$,
        'mainAxisExtent': _StaggeredGridTile_mainAxisExtent$,
        'debugTypicalAncestorWidgetClass':
            _StaggeredGridTile_debugTypicalAncestorWidgetClass$,
        'applyParentData': _StaggeredGridTile_applyParentData$,
      },
      {},
    )
  },
);
Function StaggeredGridTile_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as StaggeredGridTile;
Function StaggeredGridTile_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is StaggeredGridTile;
Function _StaggeredGridTile_crossAxisCellCount$(
  m.Scope scope$,
  StaggeredGridTile target$,
) =>
    () {
      return target$.crossAxisCellCount;
    };
Function _StaggeredGridTile_mainAxisCellCount$(
  m.Scope scope$,
  StaggeredGridTile target$,
) =>
    () {
      return target$.mainAxisCellCount;
    };
Function _StaggeredGridTile_mainAxisExtent$(
  m.Scope scope$,
  StaggeredGridTile target$,
) =>
    () {
      return target$.mainAxisExtent;
    };
Function _StaggeredGridTile_debugTypicalAncestorWidgetClass$(
  m.Scope scope$,
  StaggeredGridTile target$,
) =>
    () {
      return target$.debugTypicalAncestorWidgetClass;
    };
Function _StaggeredGridTile_count_$(m.Scope scope$) => StaggeredGridTile.count;
Function _StaggeredGridTile_extent_$(m.Scope scope$) =>
    StaggeredGridTile.extent;
Function _StaggeredGridTile_fit_$(m.Scope scope$) => StaggeredGridTile.fit;
Function _StaggeredGridTile_applyParentData$(
  m.Scope scope$,
  StaggeredGridTile target$,
) =>
    target$.applyParentData;
