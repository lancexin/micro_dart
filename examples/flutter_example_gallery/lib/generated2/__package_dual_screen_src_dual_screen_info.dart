// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:dual_screen/src/dual_screen_info.dart';
import 'dart:async';
import 'package:flutter/services.dart';

const libraryMirror = m.LibraryMirror(
  'package:dual_screen/src/dual_screen_info.dart',
  {
    'DualScreenInfo.hingeAngleEvents': _DualScreenInfo_hingeAngleEvents$,
    'DualScreenInfo.hasHingeAngleSensor': _DualScreenInfo_hasHingeAngleSensor$,
    'DualScreenInfo.': _DualScreenInfo__$,
  },
  {},
  {
    'DualScreenInfo': m.ClassMirror(
      'DualScreenInfo',
      {
        '#as': DualScreenInfo_as$,
        '#is': DualScreenInfo_is$,
      },
      {},
    )
  },
);
Function DualScreenInfo_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DualScreenInfo;
Function DualScreenInfo_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DualScreenInfo;
Function _DualScreenInfo_hingeAngleEvents$(m.Scope scope$) =>
    () => DualScreenInfo.hingeAngleEvents;
Function _DualScreenInfo_hasHingeAngleSensor$(m.Scope scope$) =>
    () => DualScreenInfo.hasHingeAngleSensor;
Function _DualScreenInfo__$(m.Scope scope$) => () {
      return DualScreenInfo();
    };
