// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:collection/src/combined_wrappers/combined_map.dart';
import 'dart:collection';
import 'package:collection/src/combined_wrappers/combined_iterable.dart';

const libraryMirror = m.LibraryMirror(
  'package:collection/src/combined_wrappers/combined_map.dart',
  {'CombinedMapView.': _CombinedMapView__$},
  {},
  {
    'CombinedMapView': m.ClassMirror(
      'CombinedMapView',
      {
        '#as': CombinedMapView_as$,
        '#is': CombinedMapView_is$,
        'keys': _CombinedMapView_keys$,
        '[]': _CombinedMapView_$index$$,
      },
      {},
    )
  },
);
Function CombinedMapView_as$<K, V>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CombinedMapView<K, V>;
Function CombinedMapView_is$<K, V>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CombinedMapView<K, V>;
Function _CombinedMapView_keys$<K, V>(
  m.Scope scope$,
  CombinedMapView<K, V> target$,
) =>
    () {
      return target$.keys;
    };
Function _CombinedMapView__$(m.Scope scope$) => (Iterable _maps) {
      return CombinedMapView(Iterable.castFrom(_maps));
    };
Function _CombinedMapView_$index$$<K, V>(
  m.Scope scope$,
  CombinedMapView<K, V> target$,
) =>
    (Object? index) => target$[index];
