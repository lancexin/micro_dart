// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter_staggered_grid_view/src/widgets/sliver_aligned_grid.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_staggered_grid_view/src/rendering/sliver_simple_grid_delegate.dart';
import 'package:flutter_staggered_grid_view/src/widgets/uniform_track.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter_staggered_grid_view/src/widgets/sliver_aligned_grid.dart',
  {
    'SliverAlignedGrid.': _SliverAlignedGrid__$,
    'SliverAlignedGrid.count': _SliverAlignedGrid_count_$,
    'SliverAlignedGrid.extent': _SliverAlignedGrid_extent_$,
  },
  {},
  {
    'SliverAlignedGrid': m.ClassMirror(
      'SliverAlignedGrid',
      {
        '#as': SliverAlignedGrid_as$,
        '#is': SliverAlignedGrid_is$,
        'mainAxisSpacing': _SliverAlignedGrid_mainAxisSpacing$,
        'crossAxisSpacing': _SliverAlignedGrid_crossAxisSpacing$,
        'gridDelegate': _SliverAlignedGrid_gridDelegate$,
        'itemBuilder': _SliverAlignedGrid_itemBuilder$,
        'itemCount': _SliverAlignedGrid_itemCount$,
        'addAutomaticKeepAlives': _SliverAlignedGrid_addAutomaticKeepAlives$,
        'addRepaintBoundaries': _SliverAlignedGrid_addRepaintBoundaries$,
        'build': _SliverAlignedGrid_build$,
      },
      {},
    )
  },
);
Function SliverAlignedGrid_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as SliverAlignedGrid;
Function SliverAlignedGrid_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is SliverAlignedGrid;
Function _SliverAlignedGrid_mainAxisSpacing$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.mainAxisSpacing;
    };
Function _SliverAlignedGrid_crossAxisSpacing$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.crossAxisSpacing;
    };
Function _SliverAlignedGrid_gridDelegate$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.gridDelegate;
    };
Function _SliverAlignedGrid_itemBuilder$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.itemBuilder;
    };
Function _SliverAlignedGrid_itemCount$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.itemCount;
    };
Function _SliverAlignedGrid_addAutomaticKeepAlives$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.addAutomaticKeepAlives;
    };
Function _SliverAlignedGrid_addRepaintBoundaries$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    () {
      return target$.addRepaintBoundaries;
    };
Function _SliverAlignedGrid__$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer itemBuilder,
      int? itemCount,
      required SliverSimpleGridDelegate gridDelegate,
      double? mainAxisSpacing,
      double? crossAxisSpacing,
      bool? addAutomaticKeepAlives,
      bool? addRepaintBoundaries,
    }) {
      Widget? itemBuilderProxy(
        BuildContext itemBuilder_context$,
        int itemBuilder_index$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            itemBuilder,
            [
              itemBuilder_context$,
              itemBuilder_index$,
            ],
            {},
          );
      return SliverAlignedGrid(
        addAutomaticKeepAlives: addAutomaticKeepAlives ?? true,
        addRepaintBoundaries: addRepaintBoundaries ?? true,
        crossAxisSpacing: crossAxisSpacing ?? 0,
        gridDelegate: gridDelegate,
        itemBuilder: itemBuilderProxy,
        itemCount: itemCount,
        key: key,
        mainAxisSpacing: mainAxisSpacing ?? 0,
      );
    };
Function _SliverAlignedGrid_count_$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer itemBuilder,
      int? itemCount,
      required int crossAxisCount,
      double? mainAxisSpacing,
      double? crossAxisSpacing,
      bool? addAutomaticKeepAlives,
      bool? addRepaintBoundaries,
    }) {
      Widget? itemBuilderProxy(
        BuildContext itemBuilder_context$,
        int itemBuilder_index$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            itemBuilder,
            [
              itemBuilder_context$,
              itemBuilder_index$,
            ],
            {},
          );
      return SliverAlignedGrid.count(
        addAutomaticKeepAlives: addAutomaticKeepAlives ?? true,
        addRepaintBoundaries: addRepaintBoundaries ?? true,
        crossAxisCount: crossAxisCount,
        crossAxisSpacing: crossAxisSpacing ?? 0,
        itemBuilder: itemBuilderProxy,
        itemCount: itemCount,
        key: key,
        mainAxisSpacing: mainAxisSpacing ?? 0,
      );
    };
Function _SliverAlignedGrid_extent_$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer itemBuilder,
      int? itemCount,
      required double maxCrossAxisExtent,
      double? mainAxisSpacing,
      double? crossAxisSpacing,
      bool? addAutomaticKeepAlives,
      bool? addRepaintBoundaries,
    }) {
      Widget? itemBuilderProxy(
        BuildContext itemBuilder_context$,
        int itemBuilder_index$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            itemBuilder,
            [
              itemBuilder_context$,
              itemBuilder_index$,
            ],
            {},
          );
      return SliverAlignedGrid.extent(
        addAutomaticKeepAlives: addAutomaticKeepAlives ?? true,
        addRepaintBoundaries: addRepaintBoundaries ?? true,
        crossAxisSpacing: crossAxisSpacing ?? 0,
        itemBuilder: itemBuilderProxy,
        itemCount: itemCount,
        key: key,
        mainAxisSpacing: mainAxisSpacing ?? 0,
        maxCrossAxisExtent: maxCrossAxisExtent,
      );
    };
Function _SliverAlignedGrid_build$(
  m.Scope scope$,
  SliverAlignedGrid target$,
) =>
    target$.build;
