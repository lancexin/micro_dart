// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:material_color_utilities/quantize/quantizer_map.dart';
import 'package:material_color_utilities/utils/color_utils.dart';
import 'package:material_color_utilities/quantize/quantizer.dart';

const libraryMirror = m.LibraryMirror(
  'package:material_color_utilities/quantize/quantizer_map.dart',
  {'QuantizerMap.': _QuantizerMap__$},
  {},
  {
    'QuantizerMap': m.ClassMirror(
      'QuantizerMap',
      {
        '#as': QuantizerMap_as$,
        '#is': QuantizerMap_is$,
        'quantize': _QuantizerMap_quantize$,
      },
      {},
    )
  },
);
Function QuantizerMap_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as QuantizerMap;
Function QuantizerMap_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is QuantizerMap;
Function _QuantizerMap__$(m.Scope scope$) => () {
      return QuantizerMap();
    };
Function _QuantizerMap_quantize$(
  m.Scope scope$,
  QuantizerMap target$,
) =>
    target$.quantize;
