// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/animation/tween.dart';
import 'dart:ui' show Color, Rect, Size;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/animation/animations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/animation/tween.dart',
  {
    'Tween.': _Tween__$,
    'Tween.<double>': _Tween__double$,
    'Tween.<Offset>': _Tween__$,
    'ColorTween.': _ColorTween__$,
    'CurveTween.': _CurveTween__$,
  },
  {},
  {
    'Animatable': m.ClassMirror(
      'Animatable',
      {
        'animate': _Animatable_animate$,
        'chain': _Animatable_chain$,
      },
      {},
    ),
    'Tween': m.ClassMirror(
      'Tween',
      {'end': _Tween_end$},
      {},
    ),
  },
);
Function _Animatable_animate$<T>(
  m.Scope scope$,
  Animatable<T> target$,
) =>
    target$.animate;
Function _Animatable_chain$<T>(
  m.Scope scope$,
  Animatable<T> target$,
) =>
    target$.chain;
Function _Tween_end$<T extends Object?>(
  m.Scope scope$,
  Tween<T> target$,
) =>
    () {
      return target$.end;
    };
Function _Tween__$(m.Scope scope$) => <T extends Object?>({
      dynamic? begin,
      dynamic? end,
    }) {
      return Tween<T>(
        begin: begin,
        end: end,
      );
    };
Function _ColorTween__$(m.Scope scope$) => ({
      Color? begin,
      Color? end,
    }) {
      return ColorTween(
        begin: begin,
        end: end,
      );
    };
Function _CurveTween__$(m.Scope scope$) => ({required Curve curve}) {
      return CurveTween(curve: curve);
    };
Function _Tween__double$(m.Scope scope$) => ({
      double? begin,
      double? end,
    }) {
      return Tween<double>(
        begin: begin,
        end: end,
      );
    };
