// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/heroes.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/binding.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/implicit_animations.dart';
import 'package:flutter/src/widgets/media_query.dart';
import 'package:flutter/src/widgets/navigator.dart';
import 'package:flutter/src/widgets/overlay.dart';
import 'package:flutter/src/widgets/pages.dart';
import 'package:flutter/src/widgets/routes.dart';
import 'package:flutter/src/widgets/ticker_provider.dart' show TickerMode;
import 'package:flutter/src/widgets/transitions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/heroes.dart',
  {'Hero.': _Hero__$},
  {},
  {},
);
Function _Hero__$(m.Scope scope$) => ({
      Key? key,
      required Object tag,
      m.FunctionPointer? createRectTween,
      m.FunctionPointer? flightShuttleBuilder,
      m.FunctionPointer? placeholderBuilder,
      bool? transitionOnUserGestures,
      required Widget child,
    }) {
      Tween<Rect> createRectTweenProxy(
        Rect? createRectTween_begin$,
        Rect? createRectTween_end$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            createRectTween!,
            [
              createRectTween_begin$,
              createRectTween_end$,
            ],
            {},
          );
      Widget flightShuttleBuilderProxy(
        BuildContext flightShuttleBuilder_flightContext$,
        Animation<double> flightShuttleBuilder_animation$,
        HeroFlightDirection flightShuttleBuilder_flightDirection$,
        BuildContext flightShuttleBuilder_fromHeroContext$,
        BuildContext flightShuttleBuilder_toHeroContext$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            flightShuttleBuilder!,
            [
              flightShuttleBuilder_flightContext$,
              flightShuttleBuilder_animation$,
              flightShuttleBuilder_flightDirection$,
              flightShuttleBuilder_fromHeroContext$,
              flightShuttleBuilder_toHeroContext$,
            ],
            {},
          );
      Widget placeholderBuilderProxy(
        BuildContext placeholderBuilder_context$,
        Size placeholderBuilder_heroSize$,
        Widget placeholderBuilder_child$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            placeholderBuilder!,
            [
              placeholderBuilder_context$,
              placeholderBuilder_heroSize$,
              placeholderBuilder_child$,
            ],
            {},
          );
      return Hero(
        child: child,
        createRectTween: createRectTween == null ? null : createRectTweenProxy,
        flightShuttleBuilder:
            flightShuttleBuilder == null ? null : flightShuttleBuilderProxy,
        key: key,
        placeholderBuilder:
            placeholderBuilder == null ? null : placeholderBuilderProxy,
        tag: tag,
        transitionOnUserGestures: transitionOnUserGestures ?? false,
      );
    };
