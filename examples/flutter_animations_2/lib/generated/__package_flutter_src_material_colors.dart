// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/painting.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/colors.dart',
  {
    'Colors.black': _Colors_black$,
    'Colors.white': _Colors_white$,
    'Colors.red': _Colors_red$,
    'Colors.purple': _Colors_purple$,
    'Colors.deepPurple': _Colors_deepPurple$,
    'Colors.indigo': _Colors_indigo$,
    'Colors.blue': _Colors_blue$,
    'Colors.lightBlue': _Colors_lightBlue$,
    'Colors.green': _Colors_green$,
    'Colors.yellow': _Colors_yellow$,
    'Colors.amber': _Colors_amber$,
    'Colors.orange': _Colors_orange$,
    'Colors.deepOrange': _Colors_deepOrange$,
    'Colors.grey': _Colors_grey$,
  },
  {},
  {
    'MaterialColor': m.ClassMirror(
      'MaterialColor',
      {'shade300': _MaterialColor_shade300$},
      {},
    )
  },
);
Function _MaterialColor_shade300$(
  m.Scope scope$,
  MaterialColor target$,
) =>
    () {
      return target$.shade300;
    };
Function _Colors_black$(m.Scope scope$) => () => Colors.black;
Function _Colors_white$(m.Scope scope$) => () => Colors.white;
Function _Colors_red$(m.Scope scope$) => () => Colors.red;
Function _Colors_purple$(m.Scope scope$) => () => Colors.purple;
Function _Colors_deepPurple$(m.Scope scope$) => () => Colors.deepPurple;
Function _Colors_indigo$(m.Scope scope$) => () => Colors.indigo;
Function _Colors_blue$(m.Scope scope$) => () => Colors.blue;
Function _Colors_lightBlue$(m.Scope scope$) => () => Colors.lightBlue;
Function _Colors_green$(m.Scope scope$) => () => Colors.green;
Function _Colors_yellow$(m.Scope scope$) => () => Colors.yellow;
Function _Colors_amber$(m.Scope scope$) => () => Colors.amber;
Function _Colors_orange$(m.Scope scope$) => () => Colors.orange;
Function _Colors_deepOrange$(m.Scope scope$) => () => Colors.deepOrange;
Function _Colors_grey$(m.Scope scope$) => () => Colors.grey;
