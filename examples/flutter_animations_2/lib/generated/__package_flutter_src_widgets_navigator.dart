// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/navigator.dart';
import 'dart:async';
import 'dart:collection';
import 'dart:convert';
import 'dart:developer';
import 'dart:ui';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/binding.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/widgets/focus_scope.dart';
import 'package:flutter/src/widgets/focus_traversal.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/heroes.dart';
import 'package:flutter/src/widgets/overlay.dart';
import 'package:flutter/src/widgets/restoration.dart';
import 'package:flutter/src/widgets/restoration_properties.dart';
import 'package:flutter/src/widgets/routes.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/navigator.dart',
  {'Navigator.of': _Navigator_of$},
  {},
  {
    'NavigatorState': m.ClassMirror(
      'NavigatorState',
      {
        'pushNamed': _NavigatorState_pushNamed$,
        'pushNamed<Object>': _NavigatorState_pushNamed$,
        'push': _NavigatorState_push$,
        'pop': _NavigatorState_pop$,
        'pop<Object>': _NavigatorState_pop$,
      },
      {},
    )
  },
);
Function _Navigator_of$(m.Scope scope$) => Navigator.of;
Function _NavigatorState_pushNamed$<T extends Object?>(
  m.Scope scope$,
  NavigatorState target$,
) =>
    target$.pushNamed<T>;
Function _NavigatorState_push$<T extends Object?>(
  m.Scope scope$,
  NavigatorState target$,
) =>
    target$.push<T>;
Function _NavigatorState_pop$<T extends Object?>(
  m.Scope scope$,
  NavigatorState target$,
) =>
    target$.pop<T>;
