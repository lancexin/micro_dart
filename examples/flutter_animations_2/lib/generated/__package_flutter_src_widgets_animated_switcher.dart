// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/animated_switcher.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';
import 'package:flutter/src/widgets/transitions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/animated_switcher.dart',
  {'AnimatedSwitcher.': _AnimatedSwitcher__$},
  {},
  {},
);
Function _AnimatedSwitcher__$(m.Scope scope$) => ({
      Key? key,
      Widget? child,
      required Duration duration,
      Duration? reverseDuration,
      Curve? switchInCurve,
      Curve? switchOutCurve,
      m.FunctionPointer? transitionBuilder,
      m.FunctionPointer? layoutBuilder,
    }) {
      Widget layoutBuilderProxy(
        Widget? layoutBuilder_currentChild$,
        List layoutBuilder_previousChildren$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            layoutBuilder!,
            [
              layoutBuilder_currentChild$,
              layoutBuilder_previousChildren$,
            ],
            {},
          );
      Widget transitionBuilderProxy(
        Widget transitionBuilder_child$,
        Animation<double> transitionBuilder_animation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            transitionBuilder!,
            [
              transitionBuilder_child$,
              transitionBuilder_animation$,
            ],
            {},
          );
      return AnimatedSwitcher(
        child: child,
        duration: duration,
        key: key,
        layoutBuilder: layoutBuilder == null
            ? AnimatedSwitcher.defaultLayoutBuilder
            : layoutBuilderProxy,
        reverseDuration: reverseDuration,
        switchInCurve: switchInCurve ?? Curves.linear,
        switchOutCurve: switchOutCurve ?? Curves.linear,
        transitionBuilder: transitionBuilder == null
            ? AnimatedSwitcher.defaultTransitionBuilder
            : transitionBuilderProxy,
      );
    };
