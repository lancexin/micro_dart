import 'package:flutter/src/painting/alignment.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
Map<String,Function> getLibrary(m.MicroDartEngine engine) {
return {
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@#as': (m.Scope scope, target)=>()=>target as AlignmentGeometry,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@#is': (m.Scope scope, target)=>()=>target is AlignmentGeometry,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@hashCode': (m.Scope scope, AlignmentGeometry target)=>target.hashCode,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@add': (m.Scope scope, AlignmentGeometry target)=>target.add,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@unary-': (m.Scope scope, AlignmentGeometry target)=>()=> - target ,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@*': (m.Scope scope, AlignmentGeometry target)=>(other)=> target * other,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@/': (m.Scope scope, AlignmentGeometry target)=>(other)=> target / other,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@~/': (m.Scope scope, AlignmentGeometry target)=>(other)=> target ~/ other,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@%': (m.Scope scope, AlignmentGeometry target)=>(other)=> target % other,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@lerp': (m.Scope scope)=>AlignmentGeometry.lerp,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@resolve': (m.Scope scope, AlignmentGeometry target)=>target.resolve,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@toString': (m.Scope scope, AlignmentGeometry target)=>target.toString,
'package:flutter/src/painting/alignment.dart@AlignmentGeometry@==': (m.Scope scope, AlignmentGeometry target)=>(other)=> target == other,
'package:flutter/src/painting/alignment.dart@Alignment@#as': (m.Scope scope, target)=>()=>target as Alignment,
'package:flutter/src/painting/alignment.dart@Alignment@#is': (m.Scope scope, target)=>()=>target is Alignment,
'package:flutter/src/painting/alignment.dart@Alignment@x': (m.Scope scope, Alignment target)=>target.x,
'package:flutter/src/painting/alignment.dart@Alignment@y': (m.Scope scope, Alignment target)=>target.y,
'package:flutter/src/painting/alignment.dart@Alignment@topLeft': (m.Scope scope)=>Alignment.topLeft,
'package:flutter/src/painting/alignment.dart@Alignment@topCenter': (m.Scope scope)=>Alignment.topCenter,
'package:flutter/src/painting/alignment.dart@Alignment@topRight': (m.Scope scope)=>Alignment.topRight,
'package:flutter/src/painting/alignment.dart@Alignment@centerLeft': (m.Scope scope)=>Alignment.centerLeft,
'package:flutter/src/painting/alignment.dart@Alignment@center': (m.Scope scope)=>Alignment.center,
'package:flutter/src/painting/alignment.dart@Alignment@centerRight': (m.Scope scope)=>Alignment.centerRight,
'package:flutter/src/painting/alignment.dart@Alignment@bottomLeft': (m.Scope scope)=>Alignment.bottomLeft,
'package:flutter/src/painting/alignment.dart@Alignment@bottomCenter': (m.Scope scope)=>Alignment.bottomCenter,
'package:flutter/src/painting/alignment.dart@Alignment@bottomRight': (m.Scope scope)=>Alignment.bottomRight,
'package:flutter/src/painting/alignment.dart@Alignment@': (m.Scope scope)=>Alignment,
'package:flutter/src/painting/alignment.dart@Alignment@add': (m.Scope scope, Alignment target)=>target.add,
'package:flutter/src/painting/alignment.dart@Alignment@-': (m.Scope scope, Alignment target)=>(other)=> target - other,
'package:flutter/src/painting/alignment.dart@Alignment@+': (m.Scope scope, Alignment target)=>(other)=> target + other,
'package:flutter/src/painting/alignment.dart@Alignment@unary-': (m.Scope scope, Alignment target)=>()=> - target ,
'package:flutter/src/painting/alignment.dart@Alignment@*': (m.Scope scope, Alignment target)=>(other)=> target * other,
'package:flutter/src/painting/alignment.dart@Alignment@/': (m.Scope scope, Alignment target)=>(other)=> target / other,
'package:flutter/src/painting/alignment.dart@Alignment@~/': (m.Scope scope, Alignment target)=>(other)=> target ~/ other,
'package:flutter/src/painting/alignment.dart@Alignment@%': (m.Scope scope, Alignment target)=>(other)=> target % other,
'package:flutter/src/painting/alignment.dart@Alignment@alongOffset': (m.Scope scope, Alignment target)=>target.alongOffset,
'package:flutter/src/painting/alignment.dart@Alignment@alongSize': (m.Scope scope, Alignment target)=>target.alongSize,
'package:flutter/src/painting/alignment.dart@Alignment@withinRect': (m.Scope scope, Alignment target)=>target.withinRect,
'package:flutter/src/painting/alignment.dart@Alignment@inscribe': (m.Scope scope, Alignment target)=>target.inscribe,
'package:flutter/src/painting/alignment.dart@Alignment@lerp': (m.Scope scope)=>Alignment.lerp,
'package:flutter/src/painting/alignment.dart@Alignment@resolve': (m.Scope scope, Alignment target)=>target.resolve,
'package:flutter/src/painting/alignment.dart@Alignment@toString': (m.Scope scope, Alignment target)=>target.toString,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@#as': (m.Scope scope, target)=>()=>target as AlignmentDirectional,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@#is': (m.Scope scope, target)=>()=>target is AlignmentDirectional,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@start': (m.Scope scope, AlignmentDirectional target)=>target.start,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@y': (m.Scope scope, AlignmentDirectional target)=>target.y,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@topStart': (m.Scope scope)=>AlignmentDirectional.topStart,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@topCenter': (m.Scope scope)=>AlignmentDirectional.topCenter,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@topEnd': (m.Scope scope)=>AlignmentDirectional.topEnd,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@centerStart': (m.Scope scope)=>AlignmentDirectional.centerStart,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@center': (m.Scope scope)=>AlignmentDirectional.center,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@centerEnd': (m.Scope scope)=>AlignmentDirectional.centerEnd,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@bottomStart': (m.Scope scope)=>AlignmentDirectional.bottomStart,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@bottomCenter': (m.Scope scope)=>AlignmentDirectional.bottomCenter,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@bottomEnd': (m.Scope scope)=>AlignmentDirectional.bottomEnd,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@': (m.Scope scope)=>AlignmentDirectional,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@add': (m.Scope scope, AlignmentDirectional target)=>target.add,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@-': (m.Scope scope, AlignmentDirectional target)=>(other)=> target - other,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@+': (m.Scope scope, AlignmentDirectional target)=>(other)=> target + other,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@unary-': (m.Scope scope, AlignmentDirectional target)=>()=> - target ,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@*': (m.Scope scope, AlignmentDirectional target)=>(other)=> target * other,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@/': (m.Scope scope, AlignmentDirectional target)=>(other)=> target / other,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@~/': (m.Scope scope, AlignmentDirectional target)=>(other)=> target ~/ other,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@%': (m.Scope scope, AlignmentDirectional target)=>(other)=> target % other,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@lerp': (m.Scope scope)=>AlignmentDirectional.lerp,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@resolve': (m.Scope scope, AlignmentDirectional target)=>target.resolve,
'package:flutter/src/painting/alignment.dart@AlignmentDirectional@toString': (m.Scope scope, AlignmentDirectional target)=>target.toString,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@#as': (m.Scope scope, target)=>()=>target as TextAlignVertical,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@#is': (m.Scope scope, target)=>()=>target is TextAlignVertical,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@y': (m.Scope scope, TextAlignVertical target)=>target.y,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@top': (m.Scope scope)=>TextAlignVertical.top,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@center': (m.Scope scope)=>TextAlignVertical.center,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@bottom': (m.Scope scope)=>TextAlignVertical.bottom,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@': (m.Scope scope)=>TextAlignVertical,
'package:flutter/src/painting/alignment.dart@TextAlignVertical@toString': (m.Scope scope, TextAlignVertical target)=>target.toString,

};
}