// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/painting.dart' show AxisDirection;
import 'package:flutter/physics.dart';
import 'package:flutter/src/widgets/binding.dart' show WidgetsBinding;
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/overscroll_indicator.dart';
import 'package:flutter/src/widgets/scroll_metrics.dart';
import 'package:flutter/src/widgets/scroll_simulation.dart';
import 'package:flutter/src/widgets/view.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/scroll_physics.dart',
  {
    'BouncingScrollPhysics.': _BouncingScrollPhysics__$,
    'ClampingScrollPhysics.': _ClampingScrollPhysics__$,
    'AlwaysScrollableScrollPhysics.': _AlwaysScrollableScrollPhysics__$,
    'NeverScrollableScrollPhysics.': _NeverScrollableScrollPhysics__$,
  },
  {},
  {},
);
Function _BouncingScrollPhysics__$(m.Scope scope$) => ({
      ScrollDecelerationRate? decelerationRate,
      ScrollPhysics? parent,
    }) {
      return BouncingScrollPhysics(
        decelerationRate: decelerationRate ?? ScrollDecelerationRate.normal,
        parent: parent,
      );
    };
Function _ClampingScrollPhysics__$(m.Scope scope$) =>
    ({ScrollPhysics? parent}) {
      return ClampingScrollPhysics(parent: parent);
    };
Function _AlwaysScrollableScrollPhysics__$(m.Scope scope$) =>
    ({ScrollPhysics? parent}) {
      return AlwaysScrollableScrollPhysics(parent: parent);
    };
Function _NeverScrollableScrollPhysics__$(m.Scope scope$) =>
    ({ScrollPhysics? parent}) {
      return NeverScrollableScrollPhysics(parent: parent);
    };
