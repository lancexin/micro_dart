// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/raw_keyboard.dart';
import 'dart:io';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/binding.dart';
import 'package:flutter/src/services/hardware_keyboard.dart';
import 'package:flutter/src/services/keyboard_key.g.dart';
import 'package:flutter/src/services/raw_keyboard_android.dart';
import 'package:flutter/src/services/raw_keyboard_fuchsia.dart';
import 'package:flutter/src/services/raw_keyboard_ios.dart';
import 'package:flutter/src/services/raw_keyboard_linux.dart';
import 'package:flutter/src/services/raw_keyboard_macos.dart';
import 'package:flutter/src/services/raw_keyboard_web.dart';
import 'package:flutter/src/services/raw_keyboard_windows.dart';
import 'package:flutter/src/services/system_channels.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/raw_keyboard.dart',
  {},
  {},
  {
    'RawKeyEvent': m.ClassMirror(
      'RawKeyEvent',
      {'logicalKey': _RawKeyEvent_logicalKey$},
      {},
    ),
    'RawKeyDownEvent': m.ClassMirror(
      'RawKeyDownEvent',
      {'#is': RawKeyDownEvent_is$},
      {},
    ),
  },
);
Function _RawKeyEvent_logicalKey$(
  m.Scope scope$,
  RawKeyEvent target$,
) =>
    () {
      return target$.logicalKey;
    };
Function RawKeyDownEvent_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RawKeyDownEvent;
