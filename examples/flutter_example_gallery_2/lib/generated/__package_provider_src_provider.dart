// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:provider/src/provider.dart';
import 'dart:developer';
import 'package:collection/collection.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:nested/nested.dart';
import 'package:provider/src/reassemble_handler.dart';

const libraryMirror = m.LibraryMirror(
  'package:provider/src/provider.dart',
  {
    'MultiProvider.': _MultiProvider__$,
    'Provider.of': _Provider_of$,
  },
  {},
  {},
);
Function _MultiProvider__$(m.Scope scope$) => ({
      Key? key,
      required List providers,
      Widget? child,
      m.FunctionPointer? builder,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        Widget? builder_child$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder!,
            [
              builder_context$,
              builder_child$,
            ],
            {},
          );
      return MultiProvider(
        builder: builder == null ? null : builderProxy,
        child: child,
        key: key,
        providers: List.from(providers),
      );
    };
Function _Provider_of$<T>(m.Scope scope$) => Provider.of<T>;
