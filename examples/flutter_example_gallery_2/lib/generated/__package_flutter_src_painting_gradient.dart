// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/gradient.dart';
import 'dart:collection';
import 'dart:math';
import 'dart:ui' show Gradient, lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:vector_math/vector_math_64.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:flutter/src/painting/basic_types.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/gradient.dart',
  {'LinearGradient.': _LinearGradient__$},
  {},
  {
    'LinearGradient': m.ClassMirror(
      'LinearGradient',
      {'createShader': _LinearGradient_createShader$},
      {},
    )
  },
);
Function _LinearGradient__$(m.Scope scope$) => ({
      AlignmentGeometry? begin,
      AlignmentGeometry? end,
      required List colors,
      List? stops,
      TileMode? tileMode,
      GradientTransform? transform,
    }) {
      return LinearGradient(
        begin: begin ?? Alignment.centerLeft,
        colors: List.from(colors),
        end: end ?? Alignment.centerRight,
        stops: stops == null ? null : List.from(stops),
        tileMode: tileMode ?? TileMode.clamp,
        transform: transform,
      );
    };
Function _LinearGradient_createShader$(
  m.Scope scope$,
  LinearGradient target$,
) =>
    target$.createShader;
