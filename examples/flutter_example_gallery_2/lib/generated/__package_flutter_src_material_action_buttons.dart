// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/action_buttons.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/action_icons_theme.dart';
import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/icon_button.dart';
import 'package:flutter/src/material/icons.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/scaffold.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/action_buttons.dart',
  {
    'BackButtonIcon.': _BackButtonIcon__$,
    'BackButton.': _BackButton__$,
  },
  {},
  {},
);
Function _BackButtonIcon__$(m.Scope scope$) => ({Key? key}) {
      return BackButtonIcon(key: key);
    };
Function _BackButton__$(m.Scope scope$) => ({
      Key? key,
      Color? color,
      ButtonStyle? style,
      m.FunctionPointer? onPressed,
    }) {
      void onPressedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPressed!,
            [],
            {},
          );
      return BackButton(
        color: color,
        key: key,
        onPressed: onPressed == null ? null : onPressedProxy,
        style: style,
      );
    };
