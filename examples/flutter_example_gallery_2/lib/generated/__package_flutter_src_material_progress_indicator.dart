// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/progress_indicator.dart';
import 'dart:math';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/progress_indicator_theme.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/progress_indicator.dart',
  {
    'LinearProgressIndicator.': _LinearProgressIndicator__$,
    'CircularProgressIndicator.': _CircularProgressIndicator__$,
  },
  {},
  {},
);
Function _LinearProgressIndicator__$(m.Scope scope$) => ({
      Key? key,
      double? value,
      Color? backgroundColor,
      Color? color,
      Animation<Color>? valueColor,
      double? minHeight,
      String? semanticsLabel,
      String? semanticsValue,
    }) {
      return LinearProgressIndicator(
        backgroundColor: backgroundColor,
        color: color,
        key: key,
        minHeight: minHeight,
        semanticsLabel: semanticsLabel,
        semanticsValue: semanticsValue,
        value: value,
        valueColor: valueColor,
      );
    };
Function _CircularProgressIndicator__$(m.Scope scope$) => ({
      Key? key,
      double? value,
      Color? backgroundColor,
      Color? color,
      Animation<Color>? valueColor,
      double? strokeWidth,
      String? semanticsLabel,
      String? semanticsValue,
    }) {
      return CircularProgressIndicator(
        backgroundColor: backgroundColor,
        color: color,
        key: key,
        semanticsLabel: semanticsLabel,
        semanticsValue: semanticsValue,
        strokeWidth: strokeWidth ?? 4.0,
        value: value,
        valueColor: valueColor,
      );
    };
