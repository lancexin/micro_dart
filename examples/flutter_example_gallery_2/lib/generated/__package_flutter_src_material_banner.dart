// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/banner.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/banner_theme.dart';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/material/divider.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/scaffold.dart';
import 'package:flutter/src/material/text_theme.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/banner.dart',
  {'MaterialBanner.': _MaterialBanner__$},
  {},
  {},
);
Function _MaterialBanner__$(m.Scope scope$) => ({
      Key? key,
      required Widget content,
      TextStyle? contentTextStyle,
      required List actions,
      double? elevation,
      Widget? leading,
      Color? backgroundColor,
      Color? surfaceTintColor,
      Color? shadowColor,
      Color? dividerColor,
      EdgeInsetsGeometry? padding,
      EdgeInsetsGeometry? margin,
      EdgeInsetsGeometry? leadingPadding,
      bool? forceActionsBelow,
      OverflowBarAlignment? overflowAlignment,
      Animation<double>? animation,
      m.FunctionPointer? onVisible,
    }) {
      void onVisibleProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onVisible!,
            [],
            {},
          );
      return MaterialBanner(
        actions: List.from(actions),
        animation: animation,
        backgroundColor: backgroundColor,
        content: content,
        contentTextStyle: contentTextStyle,
        dividerColor: dividerColor,
        elevation: elevation,
        forceActionsBelow: forceActionsBelow ?? false,
        key: key,
        leading: leading,
        leadingPadding: leadingPadding,
        margin: margin,
        onVisible: onVisible == null ? null : onVisibleProxy,
        overflowAlignment: overflowAlignment ?? OverflowBarAlignment.end,
        padding: padding,
        shadowColor: shadowColor,
        surfaceTintColor: surfaceTintColor,
      );
    };
