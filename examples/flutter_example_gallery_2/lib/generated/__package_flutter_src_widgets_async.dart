// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/async.dart';
import 'dart:async' show StreamSubscription;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/async.dart',
  {'FutureBuilder.': _FutureBuilder__$},
  {},
  {
    'AsyncSnapshot': m.ClassMirror(
      'AsyncSnapshot',
      {
        'data': _AsyncSnapshot_data$,
        'hasData': _AsyncSnapshot_hasData$,
      },
      {},
    )
  },
);
Function _AsyncSnapshot_data$<T>(
  m.Scope scope$,
  AsyncSnapshot<T> target$,
) =>
    () {
      return target$.data;
    };
Function _AsyncSnapshot_hasData$<T>(
  m.Scope scope$,
  AsyncSnapshot<T> target$,
) =>
    () {
      return target$.hasData;
    };
Function _FutureBuilder__$(m.Scope scope$) => ({
      Key? key,
      Future? future,
      dynamic? initialData,
      required m.FunctionPointer builder,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        AsyncSnapshot builder_snapshot$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder,
            [
              builder_context$,
              builder_snapshot$,
            ],
            {},
          );
      return FutureBuilder(
        builder: builderProxy,
        future: future,
        initialData: initialData,
        key: key,
      );
    };
