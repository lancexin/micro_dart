// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_navigation_bar.dart';
import 'dart:collection' show Queue;
import 'dart:math';
import 'package:flutter/widgets.dart';
import 'package:vector_math/vector_math_64.dart' show Vector3;
import 'package:flutter/src/material/bottom_navigation_bar_theme.dart';
import 'package:flutter/src/material/constants.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/theme.dart';
import 'package:flutter/src/material/tooltip.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_navigation_bar.dart',
  {
    'BottomNavigationBar.': _BottomNavigationBar__$,
    'BottomNavigationBarType.fixed': _BottomNavigationBarType_fixed$,
  },
  {},
  {},
);
Function _BottomNavigationBar__$(m.Scope scope$) => ({
      Key? key,
      required List items,
      m.FunctionPointer? onTap,
      int? currentIndex,
      double? elevation,
      BottomNavigationBarType? type,
      Color? fixedColor,
      Color? backgroundColor,
      double? iconSize,
      Color? selectedItemColor,
      Color? unselectedItemColor,
      IconThemeData? selectedIconTheme,
      IconThemeData? unselectedIconTheme,
      double? selectedFontSize,
      double? unselectedFontSize,
      TextStyle? selectedLabelStyle,
      TextStyle? unselectedLabelStyle,
      bool? showSelectedLabels,
      bool? showUnselectedLabels,
      MouseCursor? mouseCursor,
      bool? enableFeedback,
      BottomNavigationBarLandscapeLayout? landscapeLayout,
      bool? useLegacyColorScheme,
    }) {
      void onTapProxy(int onTap_value$) => scope$.engine.callFunctionPointer(
            scope$,
            onTap!,
            [onTap_value$],
            {},
          );
      return BottomNavigationBar(
        backgroundColor: backgroundColor,
        currentIndex: currentIndex ?? 0,
        elevation: elevation,
        enableFeedback: enableFeedback,
        fixedColor: fixedColor,
        iconSize: iconSize ?? 24.0,
        items: List.from(items),
        key: key,
        landscapeLayout: landscapeLayout,
        mouseCursor: mouseCursor,
        onTap: onTap == null ? null : onTapProxy,
        selectedFontSize: selectedFontSize ?? 14.0,
        selectedIconTheme: selectedIconTheme,
        selectedItemColor: selectedItemColor,
        selectedLabelStyle: selectedLabelStyle,
        showSelectedLabels: showSelectedLabels,
        showUnselectedLabels: showUnselectedLabels,
        type: type,
        unselectedFontSize: unselectedFontSize ?? 12.0,
        unselectedIconTheme: unselectedIconTheme,
        unselectedItemColor: unselectedItemColor,
        unselectedLabelStyle: unselectedLabelStyle,
        useLegacyColorScheme: useLegacyColorScheme ?? true,
      );
    };
Function _BottomNavigationBarType_fixed$(m.Scope scope$) =>
    () => BottomNavigationBarType.fixed;
