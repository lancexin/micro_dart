// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/search_field.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/button.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/icons.dart';
import 'package:flutter/src/cupertino/localizations.dart';
import 'package:flutter/src/cupertino/text_field.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/search_field.dart',
  {'CupertinoSearchTextField.': _CupertinoSearchTextField__$},
  {},
  {},
);
Function _CupertinoSearchTextField__$(m.Scope scope$) => ({
      Key? key,
      TextEditingController? controller,
      m.FunctionPointer? onChanged,
      m.FunctionPointer? onSubmitted,
      TextStyle? style,
      String? placeholder,
      TextStyle? placeholderStyle,
      BoxDecoration? decoration,
      Color? backgroundColor,
      BorderRadius? borderRadius,
      TextInputType? keyboardType,
      EdgeInsetsGeometry? padding,
      Color? itemColor,
      double? itemSize,
      EdgeInsetsGeometry? prefixInsets,
      Widget? prefixIcon,
      EdgeInsetsGeometry? suffixInsets,
      Icon? suffixIcon,
      OverlayVisibilityMode? suffixMode,
      m.FunctionPointer? onSuffixTap,
      String? restorationId,
      FocusNode? focusNode,
      SmartQuotesType? smartQuotesType,
      SmartDashesType? smartDashesType,
      bool? enableIMEPersonalizedLearning,
      bool? autofocus,
      m.FunctionPointer? onTap,
      bool? autocorrect,
      bool? enabled,
    }) {
      void onChangedProxy(String onChanged_value$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onChanged!,
            [onChanged_value$],
            {},
          );
      void onSubmittedProxy(String onSubmitted_value$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSubmitted!,
            [onSubmitted_value$],
            {},
          );
      void onSuffixTapProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onSuffixTap!,
            [],
            {},
          );
      void onTapProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTap!,
            [],
            {},
          );
      return CupertinoSearchTextField(
        autocorrect: autocorrect ?? true,
        autofocus: autofocus ?? false,
        backgroundColor: backgroundColor,
        borderRadius: borderRadius,
        controller: controller,
        decoration: decoration,
        enableIMEPersonalizedLearning: enableIMEPersonalizedLearning ?? true,
        enabled: enabled,
        focusNode: focusNode,
        itemColor: itemColor ?? CupertinoColors.secondaryLabel,
        itemSize: itemSize ?? 20.0,
        key: key,
        keyboardType: keyboardType ?? TextInputType.text,
        onChanged: onChanged == null ? null : onChangedProxy,
        onSubmitted: onSubmitted == null ? null : onSubmittedProxy,
        onSuffixTap: onSuffixTap == null ? null : onSuffixTapProxy,
        onTap: onTap == null ? null : onTapProxy,
        padding:
            padding ?? const EdgeInsetsDirectional.fromSTEB(5.5, 8, 5.5, 8),
        placeholder: placeholder,
        placeholderStyle: placeholderStyle,
        prefixIcon: prefixIcon ?? const Icon(CupertinoIcons.search),
        prefixInsets:
            prefixInsets ?? const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 3),
        restorationId: restorationId,
        smartDashesType: smartDashesType,
        smartQuotesType: smartQuotesType,
        style: style,
        suffixIcon: suffixIcon ?? const Icon(CupertinoIcons.xmark_circle_fill),
        suffixInsets:
            suffixInsets ?? const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2),
        suffixMode: suffixMode ?? OverlayVisibilityMode.editing,
      );
    };
