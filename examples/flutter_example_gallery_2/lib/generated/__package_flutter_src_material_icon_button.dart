// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/icon_button.dart';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/material/button_style_button.dart';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/constants.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/icon_button_theme.dart';
import 'package:flutter/src/material/icons.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/theme.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/material/tooltip.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/icon_button.dart',
  {'IconButton.': _IconButton__$},
  {},
  {},
);
Function _IconButton__$(m.Scope scope$) => ({
      Key? key,
      double? iconSize,
      VisualDensity? visualDensity,
      EdgeInsetsGeometry? padding,
      AlignmentGeometry? alignment,
      double? splashRadius,
      Color? color,
      Color? focusColor,
      Color? hoverColor,
      Color? highlightColor,
      Color? splashColor,
      Color? disabledColor,
      required m.FunctionPointer? onPressed,
      MouseCursor? mouseCursor,
      FocusNode? focusNode,
      bool? autofocus,
      String? tooltip,
      bool? enableFeedback,
      BoxConstraints? constraints,
      ButtonStyle? style,
      bool? isSelected,
      Widget? selectedIcon,
      required Widget icon,
    }) {
      void onPressedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPressed!,
            [],
            {},
          );
      return IconButton(
        alignment: alignment,
        autofocus: autofocus ?? false,
        color: color,
        constraints: constraints,
        disabledColor: disabledColor,
        enableFeedback: enableFeedback,
        focusColor: focusColor,
        focusNode: focusNode,
        highlightColor: highlightColor,
        hoverColor: hoverColor,
        icon: icon,
        iconSize: iconSize,
        isSelected: isSelected,
        key: key,
        mouseCursor: mouseCursor,
        onPressed: onPressed == null ? null : onPressedProxy,
        padding: padding,
        selectedIcon: selectedIcon,
        splashColor: splashColor,
        splashRadius: splashRadius,
        style: style,
        tooltip: tooltip,
        visualDensity: visualDensity,
      );
    };
