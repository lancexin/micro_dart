// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter_example_gallery/studies/shrine/model/app_state_model.dart';
import 'package:flutter_example_gallery/studies/shrine/model/product.dart';
import 'package:flutter_example_gallery/studies/shrine/model/products_repository.dart';
import 'package:scoped_model/scoped_model.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter_example_gallery/studies/shrine/model/app_state_model.dart',
  {'AppStateModel.': _AppStateModel__$},
  {},
  {
    'AppStateModel': m.ClassMirror(
      'AppStateModel',
      {
        'productsInCart': _AppStateModel_productsInCart$,
        'totalCartQuantity': _AppStateModel_totalCartQuantity$,
        'selectedCategory': _AppStateModel_selectedCategory$,
        'subtotalCost': _AppStateModel_subtotalCost$,
        'shippingCost': _AppStateModel_shippingCost$,
        'tax': _AppStateModel_tax$,
        'totalCost': _AppStateModel_totalCost$,
        'getProducts': _AppStateModel_getProducts$,
        'addProductToCart': _AppStateModel_addProductToCart$,
        'addMultipleProductsToCart': _AppStateModel_addMultipleProductsToCart$,
        'removeItemFromCart': _AppStateModel_removeItemFromCart$,
        'getProductById': _AppStateModel_getProductById$,
        'clearCart': _AppStateModel_clearCart$,
        'loadProducts': _AppStateModel_loadProducts$,
        'setCategory': _AppStateModel_setCategory$,
      },
      {},
    )
  },
);
Function _AppStateModel_productsInCart$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.productsInCart;
    };
Function _AppStateModel_totalCartQuantity$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.totalCartQuantity;
    };
Function _AppStateModel_selectedCategory$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.selectedCategory;
    };
Function _AppStateModel_subtotalCost$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.subtotalCost;
    };
Function _AppStateModel_shippingCost$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.shippingCost;
    };
Function _AppStateModel_tax$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.tax;
    };
Function _AppStateModel_totalCost$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    () {
      return target$.totalCost;
    };
Function _AppStateModel__$(m.Scope scope$) => () {
      return AppStateModel();
    };
Function _AppStateModel_getProducts$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.getProducts;
Function _AppStateModel_addProductToCart$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.addProductToCart;
Function _AppStateModel_addMultipleProductsToCart$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.addMultipleProductsToCart;
Function _AppStateModel_removeItemFromCart$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.removeItemFromCart;
Function _AppStateModel_getProductById$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.getProductById;
Function _AppStateModel_clearCart$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.clearCart;
Function _AppStateModel_loadProducts$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.loadProducts;
Function _AppStateModel_setCategory$(
  m.Scope scope$,
  AppStateModel target$,
) =>
    target$.setCategory;
