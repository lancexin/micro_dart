// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/animated_scroll_view.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/scroll_delegate.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_view.dart';
import 'package:flutter/src/widgets/sliver.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/animated_scroll_view.dart',
  {'AnimatedList.': _AnimatedList__$},
  {},
  {},
);
Function _AnimatedList__$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer itemBuilder,
      int? initialItemCount,
      Axis? scrollDirection,
      bool? reverse,
      ScrollController? controller,
      bool? primary,
      ScrollPhysics? physics,
      bool? shrinkWrap,
      EdgeInsetsGeometry? padding,
      Clip? clipBehavior,
    }) {
      Widget itemBuilderProxy(
        BuildContext itemBuilder_context$,
        int itemBuilder_index$,
        Animation<double> itemBuilder_animation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            itemBuilder,
            [
              itemBuilder_context$,
              itemBuilder_index$,
              itemBuilder_animation$,
            ],
            {},
          );
      return AnimatedList(
        clipBehavior: clipBehavior ?? Clip.hardEdge,
        controller: controller,
        initialItemCount: initialItemCount ?? 0,
        itemBuilder: itemBuilderProxy,
        key: key,
        padding: padding,
        physics: physics,
        primary: primary,
        reverse: reverse ?? false,
        scrollDirection: scrollDirection ?? Axis.vertical,
        shrinkWrap: shrinkWrap ?? false,
      );
    };
