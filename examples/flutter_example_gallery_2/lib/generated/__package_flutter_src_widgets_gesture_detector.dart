// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/gesture_detector.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/media_query.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/gesture_detector.dart',
  {'GestureDetector.': _GestureDetector__$},
  {},
  {},
);
Function _GestureDetector__$(m.Scope scope$) => ({
      Key? key,
      Widget? child,
      m.FunctionPointer? onTapDown,
      m.FunctionPointer? onTapUp,
      m.FunctionPointer? onTap,
      m.FunctionPointer? onTapCancel,
      m.FunctionPointer? onSecondaryTap,
      m.FunctionPointer? onSecondaryTapDown,
      m.FunctionPointer? onSecondaryTapUp,
      m.FunctionPointer? onSecondaryTapCancel,
      m.FunctionPointer? onTertiaryTapDown,
      m.FunctionPointer? onTertiaryTapUp,
      m.FunctionPointer? onTertiaryTapCancel,
      m.FunctionPointer? onDoubleTapDown,
      m.FunctionPointer? onDoubleTap,
      m.FunctionPointer? onDoubleTapCancel,
      m.FunctionPointer? onLongPressDown,
      m.FunctionPointer? onLongPressCancel,
      m.FunctionPointer? onLongPress,
      m.FunctionPointer? onLongPressStart,
      m.FunctionPointer? onLongPressMoveUpdate,
      m.FunctionPointer? onLongPressUp,
      m.FunctionPointer? onLongPressEnd,
      m.FunctionPointer? onSecondaryLongPressDown,
      m.FunctionPointer? onSecondaryLongPressCancel,
      m.FunctionPointer? onSecondaryLongPress,
      m.FunctionPointer? onSecondaryLongPressStart,
      m.FunctionPointer? onSecondaryLongPressMoveUpdate,
      m.FunctionPointer? onSecondaryLongPressUp,
      m.FunctionPointer? onSecondaryLongPressEnd,
      m.FunctionPointer? onTertiaryLongPressDown,
      m.FunctionPointer? onTertiaryLongPressCancel,
      m.FunctionPointer? onTertiaryLongPress,
      m.FunctionPointer? onTertiaryLongPressStart,
      m.FunctionPointer? onTertiaryLongPressMoveUpdate,
      m.FunctionPointer? onTertiaryLongPressUp,
      m.FunctionPointer? onTertiaryLongPressEnd,
      m.FunctionPointer? onVerticalDragDown,
      m.FunctionPointer? onVerticalDragStart,
      m.FunctionPointer? onVerticalDragUpdate,
      m.FunctionPointer? onVerticalDragEnd,
      m.FunctionPointer? onVerticalDragCancel,
      m.FunctionPointer? onHorizontalDragDown,
      m.FunctionPointer? onHorizontalDragStart,
      m.FunctionPointer? onHorizontalDragUpdate,
      m.FunctionPointer? onHorizontalDragEnd,
      m.FunctionPointer? onHorizontalDragCancel,
      m.FunctionPointer? onForcePressStart,
      m.FunctionPointer? onForcePressPeak,
      m.FunctionPointer? onForcePressUpdate,
      m.FunctionPointer? onForcePressEnd,
      m.FunctionPointer? onPanDown,
      m.FunctionPointer? onPanStart,
      m.FunctionPointer? onPanUpdate,
      m.FunctionPointer? onPanEnd,
      m.FunctionPointer? onPanCancel,
      m.FunctionPointer? onScaleStart,
      m.FunctionPointer? onScaleUpdate,
      m.FunctionPointer? onScaleEnd,
      HitTestBehavior? behavior,
      bool? excludeFromSemantics,
      DragStartBehavior? dragStartBehavior,
      bool? trackpadScrollCausesScale,
      Offset? trackpadScrollToScaleFactor,
      Set? supportedDevices,
    }) {
      void onDoubleTapProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onDoubleTap!,
            [],
            {},
          );
      void onDoubleTapCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onDoubleTapCancel!,
            [],
            {},
          );
      void onDoubleTapDownProxy(TapDownDetails onDoubleTapDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onDoubleTapDown!,
            [onDoubleTapDown_details$],
            {},
          );
      void onForcePressEndProxy(ForcePressDetails onForcePressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onForcePressEnd!,
            [onForcePressEnd_details$],
            {},
          );
      void onForcePressPeakProxy(ForcePressDetails onForcePressPeak_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onForcePressPeak!,
            [onForcePressPeak_details$],
            {},
          );
      void onForcePressStartProxy(
              ForcePressDetails onForcePressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onForcePressStart!,
            [onForcePressStart_details$],
            {},
          );
      void onForcePressUpdateProxy(
              ForcePressDetails onForcePressUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onForcePressUpdate!,
            [onForcePressUpdate_details$],
            {},
          );
      void onHorizontalDragCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onHorizontalDragCancel!,
            [],
            {},
          );
      void onHorizontalDragDownProxy(
              DragDownDetails onHorizontalDragDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onHorizontalDragDown!,
            [onHorizontalDragDown_details$],
            {},
          );
      void onHorizontalDragEndProxy(
              DragEndDetails onHorizontalDragEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onHorizontalDragEnd!,
            [onHorizontalDragEnd_details$],
            {},
          );
      void onHorizontalDragStartProxy(
              DragStartDetails onHorizontalDragStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onHorizontalDragStart!,
            [onHorizontalDragStart_details$],
            {},
          );
      void onHorizontalDragUpdateProxy(
              DragUpdateDetails onHorizontalDragUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onHorizontalDragUpdate!,
            [onHorizontalDragUpdate_details$],
            {},
          );
      void onLongPressProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onLongPress!,
            [],
            {},
          );
      void onLongPressCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onLongPressCancel!,
            [],
            {},
          );
      void onLongPressDownProxy(
              LongPressDownDetails onLongPressDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onLongPressDown!,
            [onLongPressDown_details$],
            {},
          );
      void onLongPressEndProxy(LongPressEndDetails onLongPressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onLongPressEnd!,
            [onLongPressEnd_details$],
            {},
          );
      void onLongPressMoveUpdateProxy(
              LongPressMoveUpdateDetails onLongPressMoveUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onLongPressMoveUpdate!,
            [onLongPressMoveUpdate_details$],
            {},
          );
      void onLongPressStartProxy(
              LongPressStartDetails onLongPressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onLongPressStart!,
            [onLongPressStart_details$],
            {},
          );
      void onLongPressUpProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onLongPressUp!,
            [],
            {},
          );
      void onPanCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPanCancel!,
            [],
            {},
          );
      void onPanDownProxy(DragDownDetails onPanDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onPanDown!,
            [onPanDown_details$],
            {},
          );
      void onPanEndProxy(DragEndDetails onPanEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onPanEnd!,
            [onPanEnd_details$],
            {},
          );
      void onPanStartProxy(DragStartDetails onPanStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onPanStart!,
            [onPanStart_details$],
            {},
          );
      void onPanUpdateProxy(DragUpdateDetails onPanUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onPanUpdate!,
            [onPanUpdate_details$],
            {},
          );
      void onScaleEndProxy(ScaleEndDetails onScaleEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onScaleEnd!,
            [onScaleEnd_details$],
            {},
          );
      void onScaleStartProxy(ScaleStartDetails onScaleStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onScaleStart!,
            [onScaleStart_details$],
            {},
          );
      void onScaleUpdateProxy(ScaleUpdateDetails onScaleUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onScaleUpdate!,
            [onScaleUpdate_details$],
            {},
          );
      void onSecondaryLongPressProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPress!,
            [],
            {},
          );
      void onSecondaryLongPressCancelProxy() =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPressCancel!,
            [],
            {},
          );
      void onSecondaryLongPressDownProxy(
              LongPressDownDetails onSecondaryLongPressDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPressDown!,
            [onSecondaryLongPressDown_details$],
            {},
          );
      void onSecondaryLongPressEndProxy(
              LongPressEndDetails onSecondaryLongPressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPressEnd!,
            [onSecondaryLongPressEnd_details$],
            {},
          );
      void onSecondaryLongPressMoveUpdateProxy(
              LongPressMoveUpdateDetails
                  onSecondaryLongPressMoveUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPressMoveUpdate!,
            [onSecondaryLongPressMoveUpdate_details$],
            {},
          );
      void onSecondaryLongPressStartProxy(
              LongPressStartDetails onSecondaryLongPressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPressStart!,
            [onSecondaryLongPressStart_details$],
            {},
          );
      void onSecondaryLongPressUpProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryLongPressUp!,
            [],
            {},
          );
      void onSecondaryTapProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryTap!,
            [],
            {},
          );
      void onSecondaryTapCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryTapCancel!,
            [],
            {},
          );
      void onSecondaryTapDownProxy(
              TapDownDetails onSecondaryTapDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryTapDown!,
            [onSecondaryTapDown_details$],
            {},
          );
      void onSecondaryTapUpProxy(TapUpDetails onSecondaryTapUp_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onSecondaryTapUp!,
            [onSecondaryTapUp_details$],
            {},
          );
      void onTapProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTap!,
            [],
            {},
          );
      void onTapCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTapCancel!,
            [],
            {},
          );
      void onTapDownProxy(TapDownDetails onTapDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTapDown!,
            [onTapDown_details$],
            {},
          );
      void onTapUpProxy(TapUpDetails onTapUp_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTapUp!,
            [onTapUp_details$],
            {},
          );
      void onTertiaryLongPressProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPress!,
            [],
            {},
          );
      void onTertiaryLongPressCancelProxy() =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPressCancel!,
            [],
            {},
          );
      void onTertiaryLongPressDownProxy(
              LongPressDownDetails onTertiaryLongPressDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPressDown!,
            [onTertiaryLongPressDown_details$],
            {},
          );
      void onTertiaryLongPressEndProxy(
              LongPressEndDetails onTertiaryLongPressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPressEnd!,
            [onTertiaryLongPressEnd_details$],
            {},
          );
      void onTertiaryLongPressMoveUpdateProxy(
              LongPressMoveUpdateDetails
                  onTertiaryLongPressMoveUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPressMoveUpdate!,
            [onTertiaryLongPressMoveUpdate_details$],
            {},
          );
      void onTertiaryLongPressStartProxy(
              LongPressStartDetails onTertiaryLongPressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPressStart!,
            [onTertiaryLongPressStart_details$],
            {},
          );
      void onTertiaryLongPressUpProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryLongPressUp!,
            [],
            {},
          );
      void onTertiaryTapCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryTapCancel!,
            [],
            {},
          );
      void onTertiaryTapDownProxy(TapDownDetails onTertiaryTapDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryTapDown!,
            [onTertiaryTapDown_details$],
            {},
          );
      void onTertiaryTapUpProxy(TapUpDetails onTertiaryTapUp_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onTertiaryTapUp!,
            [onTertiaryTapUp_details$],
            {},
          );
      void onVerticalDragCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onVerticalDragCancel!,
            [],
            {},
          );
      void onVerticalDragDownProxy(
              DragDownDetails onVerticalDragDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onVerticalDragDown!,
            [onVerticalDragDown_details$],
            {},
          );
      void onVerticalDragEndProxy(DragEndDetails onVerticalDragEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onVerticalDragEnd!,
            [onVerticalDragEnd_details$],
            {},
          );
      void onVerticalDragStartProxy(
              DragStartDetails onVerticalDragStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onVerticalDragStart!,
            [onVerticalDragStart_details$],
            {},
          );
      void onVerticalDragUpdateProxy(
              DragUpdateDetails onVerticalDragUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onVerticalDragUpdate!,
            [onVerticalDragUpdate_details$],
            {},
          );
      return GestureDetector(
        behavior: behavior,
        child: child,
        dragStartBehavior: dragStartBehavior ?? DragStartBehavior.start,
        excludeFromSemantics: excludeFromSemantics ?? false,
        key: key,
        onDoubleTap: onDoubleTap == null ? null : onDoubleTapProxy,
        onDoubleTapCancel:
            onDoubleTapCancel == null ? null : onDoubleTapCancelProxy,
        onDoubleTapDown: onDoubleTapDown == null ? null : onDoubleTapDownProxy,
        onForcePressEnd: onForcePressEnd == null ? null : onForcePressEndProxy,
        onForcePressPeak:
            onForcePressPeak == null ? null : onForcePressPeakProxy,
        onForcePressStart:
            onForcePressStart == null ? null : onForcePressStartProxy,
        onForcePressUpdate:
            onForcePressUpdate == null ? null : onForcePressUpdateProxy,
        onHorizontalDragCancel:
            onHorizontalDragCancel == null ? null : onHorizontalDragCancelProxy,
        onHorizontalDragDown:
            onHorizontalDragDown == null ? null : onHorizontalDragDownProxy,
        onHorizontalDragEnd:
            onHorizontalDragEnd == null ? null : onHorizontalDragEndProxy,
        onHorizontalDragStart:
            onHorizontalDragStart == null ? null : onHorizontalDragStartProxy,
        onHorizontalDragUpdate:
            onHorizontalDragUpdate == null ? null : onHorizontalDragUpdateProxy,
        onLongPress: onLongPress == null ? null : onLongPressProxy,
        onLongPressCancel:
            onLongPressCancel == null ? null : onLongPressCancelProxy,
        onLongPressDown: onLongPressDown == null ? null : onLongPressDownProxy,
        onLongPressEnd: onLongPressEnd == null ? null : onLongPressEndProxy,
        onLongPressMoveUpdate:
            onLongPressMoveUpdate == null ? null : onLongPressMoveUpdateProxy,
        onLongPressStart:
            onLongPressStart == null ? null : onLongPressStartProxy,
        onLongPressUp: onLongPressUp == null ? null : onLongPressUpProxy,
        onPanCancel: onPanCancel == null ? null : onPanCancelProxy,
        onPanDown: onPanDown == null ? null : onPanDownProxy,
        onPanEnd: onPanEnd == null ? null : onPanEndProxy,
        onPanStart: onPanStart == null ? null : onPanStartProxy,
        onPanUpdate: onPanUpdate == null ? null : onPanUpdateProxy,
        onScaleEnd: onScaleEnd == null ? null : onScaleEndProxy,
        onScaleStart: onScaleStart == null ? null : onScaleStartProxy,
        onScaleUpdate: onScaleUpdate == null ? null : onScaleUpdateProxy,
        onSecondaryLongPress:
            onSecondaryLongPress == null ? null : onSecondaryLongPressProxy,
        onSecondaryLongPressCancel: onSecondaryLongPressCancel == null
            ? null
            : onSecondaryLongPressCancelProxy,
        onSecondaryLongPressDown: onSecondaryLongPressDown == null
            ? null
            : onSecondaryLongPressDownProxy,
        onSecondaryLongPressEnd: onSecondaryLongPressEnd == null
            ? null
            : onSecondaryLongPressEndProxy,
        onSecondaryLongPressMoveUpdate: onSecondaryLongPressMoveUpdate == null
            ? null
            : onSecondaryLongPressMoveUpdateProxy,
        onSecondaryLongPressStart: onSecondaryLongPressStart == null
            ? null
            : onSecondaryLongPressStartProxy,
        onSecondaryLongPressUp:
            onSecondaryLongPressUp == null ? null : onSecondaryLongPressUpProxy,
        onSecondaryTap: onSecondaryTap == null ? null : onSecondaryTapProxy,
        onSecondaryTapCancel:
            onSecondaryTapCancel == null ? null : onSecondaryTapCancelProxy,
        onSecondaryTapDown:
            onSecondaryTapDown == null ? null : onSecondaryTapDownProxy,
        onSecondaryTapUp:
            onSecondaryTapUp == null ? null : onSecondaryTapUpProxy,
        onTap: onTap == null ? null : onTapProxy,
        onTapCancel: onTapCancel == null ? null : onTapCancelProxy,
        onTapDown: onTapDown == null ? null : onTapDownProxy,
        onTapUp: onTapUp == null ? null : onTapUpProxy,
        onTertiaryLongPress:
            onTertiaryLongPress == null ? null : onTertiaryLongPressProxy,
        onTertiaryLongPressCancel: onTertiaryLongPressCancel == null
            ? null
            : onTertiaryLongPressCancelProxy,
        onTertiaryLongPressDown: onTertiaryLongPressDown == null
            ? null
            : onTertiaryLongPressDownProxy,
        onTertiaryLongPressEnd:
            onTertiaryLongPressEnd == null ? null : onTertiaryLongPressEndProxy,
        onTertiaryLongPressMoveUpdate: onTertiaryLongPressMoveUpdate == null
            ? null
            : onTertiaryLongPressMoveUpdateProxy,
        onTertiaryLongPressStart: onTertiaryLongPressStart == null
            ? null
            : onTertiaryLongPressStartProxy,
        onTertiaryLongPressUp:
            onTertiaryLongPressUp == null ? null : onTertiaryLongPressUpProxy,
        onTertiaryTapCancel:
            onTertiaryTapCancel == null ? null : onTertiaryTapCancelProxy,
        onTertiaryTapDown:
            onTertiaryTapDown == null ? null : onTertiaryTapDownProxy,
        onTertiaryTapUp: onTertiaryTapUp == null ? null : onTertiaryTapUpProxy,
        onVerticalDragCancel:
            onVerticalDragCancel == null ? null : onVerticalDragCancelProxy,
        onVerticalDragDown:
            onVerticalDragDown == null ? null : onVerticalDragDownProxy,
        onVerticalDragEnd:
            onVerticalDragEnd == null ? null : onVerticalDragEndProxy,
        onVerticalDragStart:
            onVerticalDragStart == null ? null : onVerticalDragStartProxy,
        onVerticalDragUpdate:
            onVerticalDragUpdate == null ? null : onVerticalDragUpdateProxy,
        supportedDevices:
            supportedDevices == null ? null : Set.from(supportedDevices),
        trackpadScrollCausesScale: trackpadScrollCausesScale ?? false,
        trackpadScrollToScaleFactor:
            trackpadScrollToScaleFactor ?? kDefaultTrackpadScrollToScaleFactor,
      );
    };
