// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:scoped_model/scoped_model.dart';
import 'dart:async';
import 'package:flutter/material.dart';

part '../proxy/proxy__package_scoped_model_scoped_model.dart';

const libraryMirror = m.LibraryMirror(
  'package:scoped_model/scoped_model.dart',
  {
    ...globalGetters,
    'ScopedModel.': _ScopedModel__$,
    'ScopedModel.of': _ScopedModel_of$,
    'ScopedModelDescendant.': _ScopedModelDescendant__$,
  },
  {},
  {},
);
Function _ScopedModel__$(m.Scope scope$) => <T extends Model>({
      required dynamic model,
      required Widget child,
    }) {
      return ScopedModel<T>(
        child: child,
        model: model,
      );
    };
Function _ScopedModel_of$<T extends Model>(m.Scope scope$) => ScopedModel.of<T>;
Function _ScopedModelDescendant__$(m.Scope scope$) => <T extends Model>({
      required m.FunctionPointer builder,
      Widget? child,
      bool? rebuildOnChange,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        Widget? builder_child$,
        dynamic builder_model$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder,
            [
              builder_context$,
              builder_child$,
              builder_model$,
            ],
            {},
          );
      return ScopedModelDescendant<T>(
        builder: builderProxy,
        child: child,
        rebuildOnChange: rebuildOnChange ?? true,
      );
    };
