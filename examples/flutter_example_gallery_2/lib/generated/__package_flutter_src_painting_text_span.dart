// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:flutter/widgets.dart';
import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/text_span.dart';
import 'dart:ui'
    show
        Locale,
        LocaleStringAttribute,
        ParagraphBuilder,
        SpellOutStringAttribute,
        StringAttribute;
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/inline_span.dart';
import 'package:flutter/src/painting/text_painter.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/text_span.dart',
  {'TextSpan.': _TextSpan__$},
  {},
  {},
);
Function _TextSpan__$(m.Scope scope$) => ({
      String? text,
      List? children,
      TextStyle? style,
      GestureRecognizer? recognizer,
      MouseCursor? mouseCursor,
      m.FunctionPointer? onEnter,
      m.FunctionPointer? onExit,
      String? semanticsLabel,
      Locale? locale,
      bool? spellOut,
    }) {
      void onEnterProxy(PointerEnterEvent onEnter_event$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onEnter!,
            [onEnter_event$],
            {},
          );
      void onExitProxy(PointerExitEvent onExit_event$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onExit!,
            [onExit_event$],
            {},
          );
      return TextSpan(
        children: children == null ? null : List.from(children),
        locale: locale,
        mouseCursor: mouseCursor,
        onEnter: onEnter == null ? null : onEnterProxy,
        onExit: onExit == null ? null : onExitProxy,
        recognizer: recognizer,
        semanticsLabel: semanticsLabel,
        spellOut: spellOut,
        style: style,
        text: text,
      );
    };
