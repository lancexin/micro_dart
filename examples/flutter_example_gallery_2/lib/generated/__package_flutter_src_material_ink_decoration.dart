// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/ink_decoration.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/ink_decoration.dart',
  {'Ink.image': _Ink_image_$},
  {},
  {},
);
Function _Ink_image_$(m.Scope scope$) => ({
      Key? key,
      EdgeInsetsGeometry? padding,
      required ImageProvider<Object> image,
      m.FunctionPointer? onImageError,
      ColorFilter? colorFilter,
      BoxFit? fit,
      AlignmentGeometry? alignment,
      Rect? centerSlice,
      ImageRepeat? repeat,
      bool? matchTextDirection,
      double? width,
      double? height,
      Widget? child,
    }) {
      void onImageErrorProxy(
        Object onImageError_exception$,
        StackTrace? onImageError_stackTrace$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onImageError!,
            [
              onImageError_exception$,
              onImageError_stackTrace$,
            ],
            {},
          );
      return Ink.image(
        alignment: alignment ?? Alignment.center,
        centerSlice: centerSlice,
        child: child,
        colorFilter: colorFilter,
        fit: fit,
        height: height,
        image: image,
        key: key,
        matchTextDirection: matchTextDirection ?? false,
        onImageError: onImageError == null ? null : onImageErrorProxy,
        padding: padding,
        repeat: repeat ?? ImageRepeat.noRepeat,
        width: width,
      );
    };
