// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/segmented_control.dart';
import 'dart:collection';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/segmented_control.dart',
  {'CupertinoSegmentedControl.': _CupertinoSegmentedControl__$},
  {},
  {},
);
Function _CupertinoSegmentedControl__$(m.Scope scope$) => <T extends Object>({
      Key? key,
      required Map children,
      required m.FunctionPointer onValueChanged,
      dynamic? groupValue,
      Color? unselectedColor,
      Color? selectedColor,
      Color? borderColor,
      Color? pressedColor,
      EdgeInsetsGeometry? padding,
    }) {
      void onValueChangedProxy(dynamic onValueChanged_value$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onValueChanged,
            [onValueChanged_value$],
            {},
          );
      return CupertinoSegmentedControl<T>(
        borderColor: borderColor,
        children: Map.from(children),
        groupValue: groupValue,
        key: key,
        onValueChanged: onValueChangedProxy,
        padding: padding,
        pressedColor: pressedColor,
        selectedColor: selectedColor,
        unselectedColor: unselectedColor,
      );
    };
