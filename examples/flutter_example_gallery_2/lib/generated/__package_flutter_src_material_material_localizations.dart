// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/time.dart';
import 'package:flutter/src/material/typography.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/material_localizations.dart',
  {'MaterialLocalizations.of': _MaterialLocalizations_of$},
  {},
  {
    'MaterialLocalizations': m.ClassMirror(
      'MaterialLocalizations',
      {
        'openAppDrawerTooltip': _MaterialLocalizations_openAppDrawerTooltip$,
        'backButtonTooltip': _MaterialLocalizations_backButtonTooltip$,
        'closeButtonTooltip': _MaterialLocalizations_closeButtonTooltip$,
        'nextPageTooltip': _MaterialLocalizations_nextPageTooltip$,
        'previousPageTooltip': _MaterialLocalizations_previousPageTooltip$,
        'closeButtonLabel': _MaterialLocalizations_closeButtonLabel$,
        'viewLicensesButtonLabel':
            _MaterialLocalizations_viewLicensesButtonLabel$,
      },
      {},
    )
  },
);
Function _MaterialLocalizations_openAppDrawerTooltip$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.openAppDrawerTooltip;
    };
Function _MaterialLocalizations_backButtonTooltip$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.backButtonTooltip;
    };
Function _MaterialLocalizations_closeButtonTooltip$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.closeButtonTooltip;
    };
Function _MaterialLocalizations_nextPageTooltip$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.nextPageTooltip;
    };
Function _MaterialLocalizations_previousPageTooltip$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.previousPageTooltip;
    };
Function _MaterialLocalizations_closeButtonLabel$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.closeButtonLabel;
    };
Function _MaterialLocalizations_viewLicensesButtonLabel$(
  m.Scope scope$,
  MaterialLocalizations target$,
) =>
    () {
      return target$.viewLicensesButtonLabel;
    };
Function _MaterialLocalizations_of$(m.Scope scope$) => MaterialLocalizations.of;
