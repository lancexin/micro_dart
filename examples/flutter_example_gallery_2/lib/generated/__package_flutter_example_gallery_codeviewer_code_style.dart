// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter_example_gallery/codeviewer/code_style.dart';
import 'package:flutter/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter_example_gallery/codeviewer/code_style.dart',
  {
    'CodeStyle.': _CodeStyle__$,
    'CodeStyle.of': _CodeStyle_of$,
  },
  {},
  {
    'CodeStyle': m.ClassMirror(
      'CodeStyle',
      {
        'baseStyle': _CodeStyle_baseStyle$,
        'numberStyle': _CodeStyle_numberStyle$,
        'commentStyle': _CodeStyle_commentStyle$,
        'keywordStyle': _CodeStyle_keywordStyle$,
        'stringStyle': _CodeStyle_stringStyle$,
        'punctuationStyle': _CodeStyle_punctuationStyle$,
        'classStyle': _CodeStyle_classStyle$,
        'constantStyle': _CodeStyle_constantStyle$,
      },
      {},
    )
  },
);
Function _CodeStyle_baseStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.baseStyle;
    };
Function _CodeStyle_numberStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.numberStyle;
    };
Function _CodeStyle_commentStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.commentStyle;
    };
Function _CodeStyle_keywordStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.keywordStyle;
    };
Function _CodeStyle_stringStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.stringStyle;
    };
Function _CodeStyle_punctuationStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.punctuationStyle;
    };
Function _CodeStyle_classStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.classStyle;
    };
Function _CodeStyle_constantStyle$(
  m.Scope scope$,
  CodeStyle target$,
) =>
    () {
      return target$.constantStyle;
    };
Function _CodeStyle__$(m.Scope scope$) => ({
      Key? key,
      TextStyle? baseStyle,
      TextStyle? numberStyle,
      TextStyle? commentStyle,
      TextStyle? keywordStyle,
      TextStyle? stringStyle,
      TextStyle? punctuationStyle,
      TextStyle? classStyle,
      TextStyle? constantStyle,
      required Widget child,
    }) {
      return CodeStyle(
        baseStyle: baseStyle,
        child: child,
        classStyle: classStyle,
        commentStyle: commentStyle,
        constantStyle: constantStyle,
        key: key,
        keywordStyle: keywordStyle,
        numberStyle: numberStyle,
        punctuationStyle: punctuationStyle,
        stringStyle: stringStyle,
      );
    };
Function _CodeStyle_of$(m.Scope scope$) => CodeStyle.of;
