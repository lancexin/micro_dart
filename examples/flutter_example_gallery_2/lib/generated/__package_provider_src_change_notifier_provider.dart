// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:provider/src/change_notifier_provider.dart';
import 'package:flutter/widgets.dart';
import 'package:provider/src/listenable_provider.dart';
import 'package:provider/src/provider.dart';
import 'package:provider/src/proxy_provider.dart';

const libraryMirror = m.LibraryMirror(
  'package:provider/src/change_notifier_provider.dart',
  {'ChangeNotifierProvider.value': _ChangeNotifierProvider_value_$},
  {},
  {},
);
Function _ChangeNotifierProvider_value_$(m.Scope scope$) =>
    <T extends ChangeNotifier?>({
      Key? key,
      required dynamic value,
      m.FunctionPointer? builder,
      Widget? child,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        Widget? builder_child$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder!,
            [
              builder_context$,
              builder_child$,
            ],
            {},
          );
      return ChangeNotifierProvider<T>.value(
        builder: builder == null ? null : builderProxy,
        child: child,
        key: key,
        value: value,
      );
    };
