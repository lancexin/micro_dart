// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/text_style.dart';
import 'dart:ui'
    show
        FontFeature,
        FontVariation,
        ParagraphStyle,
        Shadow,
        StrutStyle,
        TextHeightBehavior,
        TextLeadingDistribution,
        TextStyle,
        lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/colors.dart';
import 'package:flutter/src/painting/strut_style.dart';
import 'package:flutter/src/painting/text_painter.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/text_style.dart',
  {'TextStyle.': _TextStyle__$},
  {},
  {},
);
Function _TextStyle__$(m.Scope scope$) => ({
      bool? inherit,
      Color? color,
      Color? backgroundColor,
      double? fontSize,
      FontWeight? fontWeight,
      FontStyle? fontStyle,
      double? letterSpacing,
      double? wordSpacing,
      TextBaseline? textBaseline,
      double? height,
      TextLeadingDistribution? leadingDistribution,
      Locale? locale,
      Paint? foreground,
      Paint? background,
      List? shadows,
      List? fontFeatures,
      List? fontVariations,
      TextDecoration? decoration,
      Color? decorationColor,
      TextDecorationStyle? decorationStyle,
      double? decorationThickness,
      String? debugLabel,
      String? fontFamily,
      List? fontFamilyFallback,
      String? package,
      TextOverflow? overflow,
    }) {
      return TextStyle(
        background: background,
        backgroundColor: backgroundColor,
        color: color,
        debugLabel: debugLabel,
        decoration: decoration,
        decorationColor: decorationColor,
        decorationStyle: decorationStyle,
        decorationThickness: decorationThickness,
        fontFamily: fontFamily,
        fontFamilyFallback:
            fontFamilyFallback == null ? null : List.from(fontFamilyFallback),
        fontFeatures: fontFeatures == null ? null : List.from(fontFeatures),
        fontSize: fontSize,
        fontStyle: fontStyle,
        fontVariations:
            fontVariations == null ? null : List.from(fontVariations),
        fontWeight: fontWeight,
        foreground: foreground,
        height: height,
        inherit: inherit ?? true,
        leadingDistribution: leadingDistribution,
        letterSpacing: letterSpacing,
        locale: locale,
        overflow: overflow,
        package: package,
        shadows: shadows == null ? null : List.from(shadows),
        textBaseline: textBaseline,
        wordSpacing: wordSpacing,
      );
    };
