// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/scroll_delegate.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/widgets/automatic_keep_alive.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/selection_container.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/scroll_delegate.dart',
  {'SliverChildBuilderDelegate.': _SliverChildBuilderDelegate__$},
  {},
  {},
);
Function _SliverChildBuilderDelegate__$(m.Scope scope$) => (
      m.FunctionPointer builder, {
      m.FunctionPointer? findChildIndexCallback,
      int? childCount,
      bool? addAutomaticKeepAlives,
      bool? addRepaintBoundaries,
      bool? addSemanticIndexes,
      m.FunctionPointer? semanticIndexCallback,
      int? semanticIndexOffset,
    }) {
      Widget? builderProxy(
        BuildContext builder_context$,
        int builder_index$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder,
            [
              builder_context$,
              builder_index$,
            ],
            {},
          );
      int? findChildIndexCallbackProxy(Key findChildIndexCallback_key$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            findChildIndexCallback!,
            [findChildIndexCallback_key$],
            {},
          );
      int? semanticIndexCallbackProxy(
        Widget semanticIndexCallback_widget$,
        int semanticIndexCallback_localIndex$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            semanticIndexCallback!,
            [
              semanticIndexCallback_widget$,
              semanticIndexCallback_localIndex$,
            ],
            {},
          );
      return SliverChildBuilderDelegate(
        builderProxy,
        addAutomaticKeepAlives: addAutomaticKeepAlives ?? true,
        addRepaintBoundaries: addRepaintBoundaries ?? true,
        addSemanticIndexes: addSemanticIndexes ?? true,
        childCount: childCount,
        findChildIndexCallback:
            findChildIndexCallback == null ? null : findChildIndexCallbackProxy,
        semanticIndexCallback: semanticIndexCallback == null
            ? (Widget _, int localIndex) => localIndex
            : semanticIndexCallbackProxy,
        semanticIndexOffset: semanticIndexOffset ?? 0,
      );
    };
