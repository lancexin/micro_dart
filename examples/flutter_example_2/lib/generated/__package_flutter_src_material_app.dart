// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/app.dart';
import 'dart:ui';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/material/arc.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/floating_action_button.dart';
import 'package:flutter/src/material/icons.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/page.dart';
import 'package:flutter/src/material/scaffold.dart'
    show ScaffoldMessenger, ScaffoldMessengerState;
import 'package:flutter/src/material/scrollbar.dart';
import 'package:flutter/src/material/theme.dart';
import 'package:flutter/src/material/tooltip.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/app.dart',
  {'MaterialApp.': _MaterialApp__$},
  {},
  {},
);
Function _MaterialApp__$(m.Scope scope$) => ({
      Key? key,
      GlobalKey<NavigatorState>? navigatorKey,
      GlobalKey<ScaffoldMessengerState>? scaffoldMessengerKey,
      Widget? home,
      Map? routes,
      String? initialRoute,
      m.FunctionPointer? onGenerateRoute,
      m.FunctionPointer? onGenerateInitialRoutes,
      m.FunctionPointer? onUnknownRoute,
      List? navigatorObservers,
      m.FunctionPointer? builder,
      String? title,
      m.FunctionPointer? onGenerateTitle,
      Color? color,
      ThemeData? theme,
      ThemeData? darkTheme,
      ThemeData? highContrastTheme,
      ThemeData? highContrastDarkTheme,
      ThemeMode? themeMode,
      Duration? themeAnimationDuration,
      Curve? themeAnimationCurve,
      Locale? locale,
      Iterable? localizationsDelegates,
      m.FunctionPointer? localeListResolutionCallback,
      m.FunctionPointer? localeResolutionCallback,
      Iterable? supportedLocales,
      bool? debugShowMaterialGrid,
      bool? showPerformanceOverlay,
      bool? checkerboardRasterCacheImages,
      bool? checkerboardOffscreenLayers,
      bool? showSemanticsDebugger,
      bool? debugShowCheckedModeBanner,
      Map? shortcuts,
      Map? actions,
      String? restorationScopeId,
      ScrollBehavior? scrollBehavior,
      bool? useInheritedMediaQuery,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        Widget? builder_child$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder!,
            [
              builder_context$,
              builder_child$,
            ],
            {},
          );
      Locale? localeListResolutionCallbackProxy(
        List? localeListResolutionCallback_locales$,
        Iterable localeListResolutionCallback_supportedLocales$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            localeListResolutionCallback!,
            [
              localeListResolutionCallback_locales$,
              localeListResolutionCallback_supportedLocales$,
            ],
            {},
          );
      Locale? localeResolutionCallbackProxy(
        Locale? localeResolutionCallback_locale$,
        Iterable localeResolutionCallback_supportedLocales$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            localeResolutionCallback!,
            [
              localeResolutionCallback_locale$,
              localeResolutionCallback_supportedLocales$,
            ],
            {},
          );
      List<Route<dynamic>> onGenerateInitialRoutesProxy(
              String onGenerateInitialRoutes_initialRoute$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onGenerateInitialRoutes!,
            [onGenerateInitialRoutes_initialRoute$],
            {},
          );
      Route<dynamic>? onGenerateRouteProxy(
              RouteSettings onGenerateRoute_settings$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onGenerateRoute!,
            [onGenerateRoute_settings$],
            {},
          );
      String onGenerateTitleProxy(BuildContext onGenerateTitle_context$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onGenerateTitle!,
            [onGenerateTitle_context$],
            {},
          );
      Route<dynamic>? onUnknownRouteProxy(
              RouteSettings onUnknownRoute_settings$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onUnknownRoute!,
            [onUnknownRoute_settings$],
            {},
          );
      return MaterialApp(
        actions: actions == null ? null : Map.from(actions),
        builder: builder == null ? null : builderProxy,
        checkerboardOffscreenLayers: checkerboardOffscreenLayers ?? false,
        checkerboardRasterCacheImages: checkerboardRasterCacheImages ?? false,
        color: color,
        darkTheme: darkTheme,
        debugShowCheckedModeBanner: debugShowCheckedModeBanner ?? true,
        debugShowMaterialGrid: debugShowMaterialGrid ?? false,
        highContrastDarkTheme: highContrastDarkTheme,
        highContrastTheme: highContrastTheme,
        home: home,
        initialRoute: initialRoute,
        key: key,
        locale: locale,
        localeListResolutionCallback: localeListResolutionCallback == null
            ? null
            : localeListResolutionCallbackProxy,
        localeResolutionCallback: localeResolutionCallback == null
            ? null
            : localeResolutionCallbackProxy,
        localizationsDelegates: localizationsDelegates == null
            ? null
            : Iterable.castFrom(localizationsDelegates),
        navigatorKey: navigatorKey,
        navigatorObservers: navigatorObservers == null
            ? const <NavigatorObserver>[]
            : List.from(navigatorObservers),
        onGenerateInitialRoutes: onGenerateInitialRoutes == null
            ? null
            : onGenerateInitialRoutesProxy,
        onGenerateRoute: onGenerateRoute == null ? null : onGenerateRouteProxy,
        onGenerateTitle: onGenerateTitle == null ? null : onGenerateTitleProxy,
        onUnknownRoute: onUnknownRoute == null ? null : onUnknownRouteProxy,
        restorationScopeId: restorationScopeId,
        routes:
            routes == null ? const <String, WidgetBuilder>{} : Map.from(routes),
        scaffoldMessengerKey: scaffoldMessengerKey,
        scrollBehavior: scrollBehavior,
        shortcuts: shortcuts == null ? null : Map.from(shortcuts),
        showPerformanceOverlay: showPerformanceOverlay ?? false,
        showSemanticsDebugger: showSemanticsDebugger ?? false,
        supportedLocales: supportedLocales == null
            ? const <Locale>[Locale('en', 'US')]
            : Iterable.castFrom(supportedLocales),
        theme: theme,
        themeAnimationCurve: themeAnimationCurve ?? Curves.linear,
        themeAnimationDuration:
            themeAnimationDuration ?? kThemeAnimationDuration,
        themeMode: themeMode ?? ThemeMode.system,
        title: title ?? '',
        useInheritedMediaQuery: useInheritedMediaQuery ?? false,
      );
    };
