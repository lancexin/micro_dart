main = main::main;
library from "test:///main.dart" as main {

  class A extends dart.core::Object /*hasConstConstructor*/  {
    final field dart.core::int p1;
    final field dart.core::int p2;
    const constructor •(dart.core::int p1, dart.core::int p2) → main::A
      : main::A::p1 = p1, main::A::p2 = p2, super dart.core::Object::•()
      ;
    const constructor a(dart.core::int a, dart.core::int b) → main::A
      : main::A::p1 = a, main::A::p2 = b, super dart.core::Object::•()
      ;
    const constructor b({dart.core::int c = 0, dart.core::int d = 0}) → main::A
      : main::A::p1 = c, main::A::p2 = d, super dart.core::Object::•()
      ;
    method fun1() → dart.core::String {
      return "${this.{main::A::p1}{dart.core::int}} ${this.{main::A::p2}{dart.core::int}} ${main::a} ${main::b}";
    }
  }
  class B extends main::A /*hasConstConstructor*/  {
    final field dart.core::int p3;
    const constructor b(dart.core::int p3) → main::B
      : main::B::p3 = p3, super main::A::a(0, 1)
      ;
    const constructor c(dart.core::int p3) → main::B
      : main::B::p3 = p3, super main::A::b(c: 0)
      ;
    method fun1() → dart.core::String {
      return "${super.{main::A::fun1}()}  ${this.{main::B::p3}{dart.core::int}} ";
    }
  }
  static const field dart.core::int a = 1;
  static const field dart.core::String b = "constb";
  static method main() → dart.core::String {
    main::B b = const main::B::b(1);
    dart.core::String s = b.{main::B::fun1}(){() → dart.core::String};
    dart.core::print(s);
    return s;
  }
}
