main = main::main;
library from "test:///main.dart" as main {

  class C extends dart.core::Object {
    field dart.core::int p1;
    field dart.core::int _p2;
    field dart.core::int p3 = 1;
    constructor •(dart.core::int p1, dart.core::int _p2) → main::C
      : main::C::p1 = p1, main::C::_p2 = _p2, super dart.core::Object::•() {
      this.{main::C::p1} = 0;
    }
    constructor c1(dart.core::int p1, dart.core::int p2) → main::C
      : main::C::p1 = p1, main::C::_p2 = p2, super dart.core::Object::•()
      ;
    static factory c2(dart.core::int a, dart.core::int b) → main::C /* redirection-target: main::C::_ */
      return main::C::_(a, b);
    static factory _(dart.core::int a, dart.core::int b) → main::C
      return new main::C::c1(a, b);
    get p2() → dart.core::int {
      return this.{main::C::p1}{dart.core::int}.{dart.core::num::+}(this.{main::C::_p2}{dart.core::int}){(dart.core::num) → dart.core::int};
    }
    method add(dart.core::int p) → dart.core::int {
      return this.{main::C::p2}{dart.core::int}.{dart.core::num::+}(p){(dart.core::num) → dart.core::int}.{dart.core::num::+}(this.{main::C::p3}{dart.core::int}){(dart.core::num) → dart.core::int};
    }
    method p3pp() → void {
      this.{main::C::p3} = this.{main::C::p3}{dart.core::int}.{dart.core::num::+}(1){(dart.core::num) → dart.core::int};
    }
  }
  static method main() → dart.core::int {
    main::C c1 = let final main::C #t1 = new main::C::•(1, 2) in block {
      #t1.{main::C::p3pp}(){() → void};
    } =>#t1;
    dart.core::int i = c1.{main::C::add}(7){(dart.core::int) → dart.core::int}.{dart.core::num::+}(main::C::_(4, 5).{main::C::p3}{dart.core::int}){(dart.core::num) → dart.core::int};
    dart.core::print(i);
    return i;
  }
}
