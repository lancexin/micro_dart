{xtype: Component, libraries: [{xtype: Library, name: null, languageVersion.major: 3, languageVersion.minor: 1, importUri: test:///main.dart, isSynthetic: false, nonNullableByDefaultCompiledMode: Strong, isNonNullableByDefault: true, isUnsupported: false, problemsAsJson: null, annotations: [], dependencies: [], parts: [], typedefs: [], classes: [], extensions: [], procedures: [{xtype: Procedure, isAbstract: false, isAccessor: false, isConst: false, isExternal: false, isFactory: false, isExtensionMember: false, isForwardingSemiStub: false, isForwardingStub: false, isGetter: false, isSetter: false, isStatic: true, isInstanceMember: false, isInternalImplementation: false, isMemberSignature: false, isNoSuchMethodForwarder: false, isSynthetic: false, isNonNullableByDefault: true, isRedirectingFactory: false, isSyntheticForwarder: false, name: {xtype: Name, text: main, libraryName: null, isPrivate: false}, kind: Method, stubKind: Regular, function: {xtype: FunctionNode, typeParameters: [], positionalParameters: [], namedParameters: [], requiredParameterCount: 0, returnType: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: String}, typeArguments: []}, asyncMarker: Sync, dartAsyncMarker: Sync, futureValueType: null, body: {xtype: Block, statements: [{xtype: VariableDeclaration, name: isOk1, initializer: {xtype: StaticInvocation, isConst: false, name: {xtype: Name, text: isOk, libraryName: null, isPrivate: false}, target: {xtype: ProcedureReference, libraryUri: test:///main.dart, libraryName: null, className: null, name: {xtype: Name, text: isOk, libraryName: null, isPrivate: false}, isExtensionMember: false, isStatic: true, isGetter: false, isSetter: false, positionalParameters: [], namedParameters: []}, arguments: {xtype: Arguments, types: [], positional: [], named: []}}, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: bool}, typeArguments: []}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: true, annotations: []}, {xtype: VariableDeclaration, name: isOK2, initializer: {xtype: ConditionalExpression, condition: {xtype: VariableGet, variableName: isOk1, promotedType: null}, then: {xtype: BoolLiteral, value: false}, otherwise: {xtype: BoolLiteral, value: true}, staticType: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: bool}, typeArguments: []}}, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: bool}, typeArguments: []}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: true, annotations: []}, {xtype: VariableDeclaration, name: a, initializer: {xtype: BlockExpression, body: {xtype: Block, statements: [{xtype: VariableDeclaration, name: null, initializer: {xtype: ListLiteral, isConst: false, typeArgument: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}, expressions: []}, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: List}, typeArguments: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}]}, isFinal: true, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: true, annotations: []}, {xtype: IfStatement, condition: {xtype: VariableGet, variableName: isOk1, promotedType: null}, then: {xtype: ExpressionStatement, expression: {xtype: InstanceInvocation, name: {xtype: Name, text: addAll, libraryName: null, isPrivate: false}, kind: Instance, receiver: {xtype: VariableGet, variableName: null, promotedType: null}, interfaceTarget: {xtype: ProcedureReference, libraryUri: dart:core, libraryName: dart.core, className: List, name: {xtype: Name, text: addAll, libraryName: null, isPrivate: false}, isExtensionMember: false, isStatic: false, isGetter: false, isSetter: false, positionalParameters: [{xtype: VariableDeclaration, name: iterable, initializer: null, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Iterable}, typeArguments: [{xtype: TypeParameterType, declaredNullability: undetermined, parameter: {xtype: TypeParameter, annotations: [], type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Object}, typeArguments: []}, defaultType: {xtype: DynamicType}}}]}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: false, annotations: []}], namedParameters: []}, arguments: {xtype: Arguments, types: [], positional: [{xtype: ListLiteral, isConst: false, typeArgument: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}, expressions: [{xtype: IntLiteral, value: 0}, {xtype: IntLiteral, value: 1}, {xtype: IntLiteral, value: 2}, {xtype: IntLiteral, value: 3}]}], named: []}, functionType: {xtype: FunctionType, typeParameters: [], positionalParameters: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Iterable}, typeArguments: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}]}], namedParameters: []}}}, otherwise: null}, {xtype: IfStatement, condition: {xtype: VariableGet, variableName: isOK2, promotedType: null}, then: {xtype: ExpressionStatement, expression: {xtype: InstanceInvocation, name: {xtype: Name, text: addAll, libraryName: null, isPrivate: false}, kind: Instance, receiver: {xtype: VariableGet, variableName: null, promotedType: null}, interfaceTarget: {xtype: ProcedureReference, libraryUri: dart:core, libraryName: dart.core, className: List, name: {xtype: Name, text: addAll, libraryName: null, isPrivate: false}, isExtensionMember: false, isStatic: false, isGetter: false, isSetter: false, positionalParameters: [{xtype: VariableDeclaration, name: iterable, initializer: null, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Iterable}, typeArguments: [{xtype: TypeParameterType, declaredNullability: undetermined, parameter: {xtype: TypeParameter, annotations: [], type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Object}, typeArguments: []}, defaultType: {xtype: DynamicType}}}]}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: false, annotations: []}], namedParameters: []}, arguments: {xtype: Arguments, types: [], positional: [{xtype: ListLiteral, isConst: false, typeArgument: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}, expressions: [{xtype: IntLiteral, value: 3}, {xtype: IntLiteral, value: 2}, {xtype: IntLiteral, value: 1}, {xtype: IntLiteral, value: 0}]}], named: []}, functionType: {xtype: FunctionType, typeParameters: [], positionalParameters: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Iterable}, typeArguments: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}]}], namedParameters: []}}}, otherwise: null}]}, value: {xtype: VariableGet, variableName: null, promotedType: null}}, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: List}, typeArguments: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: int}, typeArguments: []}]}, isFinal: true, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: true, annotations: []}, {xtype: VariableDeclaration, name: b, initializer: {xtype: InstanceInvocation, name: {xtype: Name, text: join, libraryName: null, isPrivate: false}, kind: Instance, receiver: {xtype: VariableGet, variableName: a, promotedType: null}, interfaceTarget: {xtype: ProcedureReference, libraryUri: dart:core, libraryName: dart.core, className: Iterable, name: {xtype: Name, text: join, libraryName: null, isPrivate: false}, isExtensionMember: false, isStatic: false, isGetter: false, isSetter: false, positionalParameters: [{xtype: VariableDeclaration, name: separator, initializer: {xtype: ConstantExpression, constant: {xtype: StringConstantReference, value: }, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: String}, typeArguments: []}}, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: String}, typeArguments: []}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: true, annotations: []}], namedParameters: []}, arguments: {xtype: Arguments, types: [], positional: [], named: []}, functionType: {xtype: FunctionType, typeParameters: [], positionalParameters: [{xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: String}, typeArguments: []}], namedParameters: []}}, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: String}, typeArguments: []}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: true, annotations: []}, {xtype: ExpressionStatement, expression: {xtype: StaticInvocation, isConst: false, name: {xtype: Name, text: print, libraryName: null, isPrivate: false}, target: {xtype: ProcedureReference, libraryUri: dart:core, libraryName: dart.core, className: null, name: {xtype: Name, text: print, libraryName: null, isPrivate: false}, isExtensionMember: false, isStatic: true, isGetter: false, isSetter: false, positionalParameters: [{xtype: VariableDeclaration, name: object, initializer: null, type: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: Object}, typeArguments: []}, isFinal: false, isConst: false, isInitializingFormal: false, isCovariantByDeclaration: false, isLate: false, isRequired: false, isLowered: false, hasDeclaredInitializer: false, annotations: []}], namedParameters: []}, arguments: {xtype: Arguments, types: [], positional: [{xtype: VariableGet, variableName: b, promotedType: null}], named: []}}}, {xtype: ReturnStatement, expression: {xtype: VariableGet, variableName: b, promotedType: null}}]}}}, {xtype: Procedure, isAbstract: false, isAccessor: false, isConst: false, isExternal: false, isFactory: false, isExtensionMember: false, isForwardingSemiStub: false, isForwardingStub: false, isGetter: false, isSetter: false, isStatic: true, isInstanceMember: false, isInternalImplementation: false, isMemberSignature: false, isNoSuchMethodForwarder: false, isSynthetic: false, isNonNullableByDefault: true, isRedirectingFactory: false, isSyntheticForwarder: false, name: {xtype: Name, text: isOk, libraryName: null, isPrivate: false}, kind: Method, stubKind: Regular, function: {xtype: FunctionNode, typeParameters: [], positionalParameters: [], namedParameters: [], requiredParameterCount: 0, returnType: {xtype: InterfaceType, classNode: {xtype: ClassReference, importUri: dart:core, name: bool}, typeArguments: []}, asyncMarker: Sync, dartAsyncMarker: Sync, futureValueType: null, body: {xtype: Block, statements: [{xtype: ReturnStatement, expression: {xtype: BoolLiteral, value: true}}]}}}], fields: []}]}