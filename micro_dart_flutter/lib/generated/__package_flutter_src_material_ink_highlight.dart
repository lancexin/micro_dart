// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/ink_highlight.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/ink_well.dart' show InteractiveInkFeature;
import 'package:flutter/src/material/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/ink_highlight.dart',
  {},
  {},
  {
    'InkHighlight': m.ClassMirror(
      'InkHighlight',
      {
        '#as': InkHighlight_as$,
        '#is': InkHighlight_is$,
        'active': _InkHighlight_active$,
        'activate': _InkHighlight_activate$,
        'deactivate': _InkHighlight_deactivate$,
        'dispose': _InkHighlight_dispose$,
        'paintFeature': _InkHighlight_paintFeature$,
      },
      {},
    )
  },
);
Function InkHighlight_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as InkHighlight;
Function InkHighlight_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is InkHighlight;
bool _InkHighlight_active$(InkHighlight target) {
  return target.active;
}

Function _InkHighlight_activate$(
  m.Scope scope,
  InkHighlight target,
) =>
    target.activate;
Function _InkHighlight_deactivate$(
  m.Scope scope,
  InkHighlight target,
) =>
    target.deactivate;
Function _InkHighlight_dispose$(
  m.Scope scope,
  InkHighlight target,
) =>
    target.dispose;
Function _InkHighlight_paintFeature$(
  m.Scope scope,
  InkHighlight target,
) =>
    target.paintFeature;
