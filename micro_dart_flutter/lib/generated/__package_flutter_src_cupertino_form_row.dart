// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/form_row.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/form_row.dart',
  {},
  {},
  {
    'CupertinoFormRow': m.ClassMirror(
      'CupertinoFormRow',
      {
        '#as': CupertinoFormRow_as$,
        '#is': CupertinoFormRow_is$,
        'prefix': _CupertinoFormRow_prefix$,
        'padding': _CupertinoFormRow_padding$,
        'helper': _CupertinoFormRow_helper$,
        'error': _CupertinoFormRow_error$,
        'child': _CupertinoFormRow_child$,
        'build': _CupertinoFormRow_build$,
      },
      {},
    )
  },
);
Function CupertinoFormRow_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as CupertinoFormRow;
Function CupertinoFormRow_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is CupertinoFormRow;
Widget? _CupertinoFormRow_prefix$(CupertinoFormRow target) {
  return target.prefix;
}

EdgeInsetsGeometry? _CupertinoFormRow_padding$(CupertinoFormRow target) {
  return target.padding;
}

Widget? _CupertinoFormRow_helper$(CupertinoFormRow target) {
  return target.helper;
}

Widget? _CupertinoFormRow_error$(CupertinoFormRow target) {
  return target.error;
}

Widget _CupertinoFormRow_child$(CupertinoFormRow target) {
  return target.child;
}

Function _CupertinoFormRow_build$(
  m.Scope scope,
  CupertinoFormRow target,
) =>
    target.build;
