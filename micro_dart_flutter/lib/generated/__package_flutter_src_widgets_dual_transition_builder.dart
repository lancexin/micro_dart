// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/dual_transition_builder.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/dual_transition_builder.dart',
  {},
  {},
  {
    'DualTransitionBuilder': m.ClassMirror(
      'DualTransitionBuilder',
      {
        '#as': DualTransitionBuilder_as$,
        '#is': DualTransitionBuilder_is$,
        'animation': _DualTransitionBuilder_animation$,
        'forwardBuilder': _DualTransitionBuilder_forwardBuilder$,
        'reverseBuilder': _DualTransitionBuilder_reverseBuilder$,
        'child': _DualTransitionBuilder_child$,
        'createState': _DualTransitionBuilder_createState$,
      },
      {},
    )
  },
);
Function DualTransitionBuilder_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as DualTransitionBuilder;
Function DualTransitionBuilder_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is DualTransitionBuilder;
Animation<double> _DualTransitionBuilder_animation$(
    DualTransitionBuilder target) {
  return target.animation;
}

Widget Function(BuildContext, Animation<double>, Widget?)
    _DualTransitionBuilder_forwardBuilder$(DualTransitionBuilder target) {
  return target.forwardBuilder;
}

Widget Function(BuildContext, Animation<double>, Widget?)
    _DualTransitionBuilder_reverseBuilder$(DualTransitionBuilder target) {
  return target.reverseBuilder;
}

Widget? _DualTransitionBuilder_child$(DualTransitionBuilder target) {
  return target.child;
}

Function _DualTransitionBuilder_createState$(
  m.Scope scope,
  DualTransitionBuilder target,
) =>
    target.createState;
