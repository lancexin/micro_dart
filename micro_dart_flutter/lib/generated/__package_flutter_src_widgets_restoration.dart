// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/restoration.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/restoration.dart',
  {
    'RestorationScope.': _RestorationScope__$,
    'RestorationScope.maybeOf': _RestorationScope_maybeOf$,
    'RestorationScope.of': _RestorationScope_of$,
    'UnmanagedRestorationScope.': _UnmanagedRestorationScope__$,
    'RootRestorationScope.': _RootRestorationScope__$,
  },
  {},
  {
    'RestorationScope': m.ClassMirror(
      'RestorationScope',
      {
        '#as': RestorationScope_as$,
        '#is': RestorationScope_is$,
        'child': _RestorationScope_child$,
        'restorationId': _RestorationScope_restorationId$,
        'createState': _RestorationScope_createState$,
      },
      {},
    ),
    'UnmanagedRestorationScope': m.ClassMirror(
      'UnmanagedRestorationScope',
      {
        '#as': UnmanagedRestorationScope_as$,
        '#is': UnmanagedRestorationScope_is$,
        'bucket': _UnmanagedRestorationScope_bucket$,
        'updateShouldNotify': _UnmanagedRestorationScope_updateShouldNotify$,
      },
      {},
    ),
    'RootRestorationScope': m.ClassMirror(
      'RootRestorationScope',
      {
        '#as': RootRestorationScope_as$,
        '#is': RootRestorationScope_is$,
        'child': _RootRestorationScope_child$,
        'restorationId': _RootRestorationScope_restorationId$,
        'createState': _RootRestorationScope_createState$,
      },
      {},
    ),
    'RestorableProperty': m.ClassMirror(
      'RestorableProperty',
      {
        '#as': RestorableProperty_as$,
        '#is': RestorableProperty_is$,
        'enabled': _RestorableProperty_enabled$,
        'state': _RestorableProperty_state$,
        'isRegistered': _RestorableProperty_isRegistered$,
        'createDefaultValue': _RestorableProperty_createDefaultValue$,
        'fromPrimitives': _RestorableProperty_fromPrimitives$,
        'initWithValue': _RestorableProperty_initWithValue$,
        'toPrimitives': _RestorableProperty_toPrimitives$,
        'dispose': _RestorableProperty_dispose$,
      },
      {},
    ),
  },
);
Function RestorationScope_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RestorationScope;
Function RestorationScope_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RestorationScope;
Function _RestorationScope_child$(
  m.Scope scope$,
  RestorationScope target$,
) =>
    () {
      return target$.child;
    };
Function _RestorationScope_restorationId$(
  m.Scope scope$,
  RestorationScope target$,
) =>
    () {
      return target$.restorationId;
    };
Function _RestorationScope__$(m.Scope scope$) => ({
      Key? key,
      required String? restorationId,
      required Widget child,
    }) {
      return RestorationScope(
        child: child,
        key: key,
        restorationId: restorationId,
      );
    };
Function _RestorationScope_maybeOf$(m.Scope scope$) => RestorationScope.maybeOf;
Function _RestorationScope_of$(m.Scope scope$) => RestorationScope.of;
Function _RestorationScope_createState$(
  m.Scope scope$,
  RestorationScope target$,
) =>
    target$.createState;
Function UnmanagedRestorationScope_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmanagedRestorationScope;
Function UnmanagedRestorationScope_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmanagedRestorationScope;
Function _UnmanagedRestorationScope_bucket$(
  m.Scope scope$,
  UnmanagedRestorationScope target$,
) =>
    () {
      return target$.bucket;
    };
Function _UnmanagedRestorationScope__$(m.Scope scope$) => ({
      Key? key,
      RestorationBucket? bucket,
      required Widget child,
    }) {
      return UnmanagedRestorationScope(
        bucket: bucket,
        child: child,
        key: key,
      );
    };
Function _UnmanagedRestorationScope_updateShouldNotify$(
  m.Scope scope$,
  UnmanagedRestorationScope target$,
) =>
    target$.updateShouldNotify;
Function RootRestorationScope_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RootRestorationScope;
Function RootRestorationScope_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RootRestorationScope;
Function _RootRestorationScope_child$(
  m.Scope scope$,
  RootRestorationScope target$,
) =>
    () {
      return target$.child;
    };
Function _RootRestorationScope_restorationId$(
  m.Scope scope$,
  RootRestorationScope target$,
) =>
    () {
      return target$.restorationId;
    };
Function _RootRestorationScope__$(m.Scope scope$) => ({
      Key? key,
      required String? restorationId,
      required Widget child,
    }) {
      return RootRestorationScope(
        child: child,
        key: key,
        restorationId: restorationId,
      );
    };
Function _RootRestorationScope_createState$(
  m.Scope scope$,
  RootRestorationScope target$,
) =>
    target$.createState;
Function RestorableProperty_as$<T>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RestorableProperty<T>;
Function RestorableProperty_is$<T>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RestorableProperty<T>;
Function _RestorableProperty_enabled$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    () {
      return target$.enabled;
    };
Function _RestorableProperty_state$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    () {
      return target$.state;
    };
Function _RestorableProperty_isRegistered$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    () {
      return target$.isRegistered;
    };
Function _RestorableProperty_createDefaultValue$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    target$.createDefaultValue;
Function _RestorableProperty_fromPrimitives$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    target$.fromPrimitives;
Function _RestorableProperty_initWithValue$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    target$.initWithValue;
Function _RestorableProperty_toPrimitives$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    target$.toPrimitives;
Function _RestorableProperty_dispose$<T>(
  m.Scope scope$,
  RestorableProperty<T> target$,
) =>
    target$.dispose;
