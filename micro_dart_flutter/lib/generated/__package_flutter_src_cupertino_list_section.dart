// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/list_section.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/list_section.dart',
  {
    'CupertinoListSection.': _CupertinoListSection__$,
    'CupertinoListSection.insetGrouped': _CupertinoListSection_insetGrouped_$,
    'CupertinoListSectionType.base': _CupertinoListSectionType_base$,
    'CupertinoListSectionType.insetGrouped':
        _CupertinoListSectionType_insetGrouped$,
    'CupertinoListSectionType.values': _CupertinoListSectionType_values$,
  },
  {},
  {
    'CupertinoListSection': m.ClassMirror(
      'CupertinoListSection',
      {
        '#as': CupertinoListSection_as$,
        '#is': CupertinoListSection_is$,
        'type': _CupertinoListSection_type$,
        'header': _CupertinoListSection_header$,
        'footer': _CupertinoListSection_footer$,
        'margin': _CupertinoListSection_margin$,
        'children': _CupertinoListSection_children$,
        'decoration': _CupertinoListSection_decoration$,
        'backgroundColor': _CupertinoListSection_backgroundColor$,
        'clipBehavior': _CupertinoListSection_clipBehavior$,
        'dividerMargin': _CupertinoListSection_dividerMargin$,
        'additionalDividerMargin':
            _CupertinoListSection_additionalDividerMargin$,
        'topMargin': _CupertinoListSection_topMargin$,
        'build': _CupertinoListSection_build$,
      },
      {},
    ),
    'CupertinoListSectionType': m.ClassMirror(
      'CupertinoListSectionType',
      {},
      {},
    ),
  },
);
Function CupertinoListSection_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoListSection;
Function CupertinoListSection_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoListSection;
Function _CupertinoListSection_type$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.type;
    };
Function _CupertinoListSection_header$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.header;
    };
Function _CupertinoListSection_footer$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.footer;
    };
Function _CupertinoListSection_margin$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.margin;
    };
Function _CupertinoListSection_children$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.children;
    };
Function _CupertinoListSection_decoration$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.decoration;
    };
Function _CupertinoListSection_backgroundColor$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.backgroundColor;
    };
Function _CupertinoListSection_clipBehavior$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.clipBehavior;
    };
Function _CupertinoListSection_dividerMargin$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.dividerMargin;
    };
Function _CupertinoListSection_additionalDividerMargin$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.additionalDividerMargin;
    };
Function _CupertinoListSection_topMargin$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    () {
      return target$.topMargin;
    };
Function _CupertinoListSection__$(m.Scope scope$) => ({
      Key? key,
      List? children,
      Widget? header,
      Widget? footer,
      EdgeInsetsGeometry? margin,
      Color? backgroundColor,
      BoxDecoration? decoration,
      Clip? clipBehavior,
      double? dividerMargin,
      double? additionalDividerMargin,
      double? topMargin,
      bool? hasLeading,
    }) {
      return CupertinoListSection(
        additionalDividerMargin: additionalDividerMargin,
        backgroundColor:
            backgroundColor ?? CupertinoColors.systemGroupedBackground,
        children: children == null ? null : List.from(children),
        clipBehavior: clipBehavior ?? Clip.none,
        decoration: decoration,
        dividerMargin: dividerMargin ?? 20.0,
        footer: footer,
        hasLeading: hasLeading ?? true,
        header: header,
        key: key,
        margin: margin ?? EdgeInsets.only(bottom: 8.0),
        topMargin: topMargin ?? 22.0,
      );
    };
Function _CupertinoListSection_insetGrouped_$(m.Scope scope$) =>
    CupertinoListSection.insetGrouped;
Function _CupertinoListSection_build$(
  m.Scope scope$,
  CupertinoListSection target$,
) =>
    target$.build;
CupertinoListSectionType _CupertinoListSectionType_base$() {
  return CupertinoListSectionType.base;
}

CupertinoListSectionType _CupertinoListSectionType_insetGrouped$() {
  return CupertinoListSectionType.insetGrouped;
}

List<CupertinoListSectionType> _CupertinoListSectionType_values$() {
  return CupertinoListSectionType.values;
}
