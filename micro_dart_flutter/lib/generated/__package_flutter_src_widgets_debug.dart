// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/debug.dart';
import 'dart:collection';
import 'dart:developer' show Timeline;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/localizations.dart';
import 'package:flutter/src/widgets/lookup_boundary.dart';
import 'package:flutter/src/widgets/media_query.dart';
import 'package:flutter/src/widgets/overlay.dart';
import 'package:flutter/src/widgets/table.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/debug.dart',
  {
    'debugPrintRebuildDirtyWidgets': _debugPrintRebuildDirtyWidgets$,
    'debugOnRebuildDirtyWidget': _debugOnRebuildDirtyWidget$,
    'debugPrintBuildScope': _debugPrintBuildScope$,
    'debugPrintScheduleBuildForStacks': _debugPrintScheduleBuildForStacks$,
    'debugPrintGlobalKeyedWidgetLifecycle':
        _debugPrintGlobalKeyedWidgetLifecycle$,
    'debugProfileBuildsEnabled': _debugProfileBuildsEnabled$,
    'debugProfileBuildsEnabledUserWidgets':
        _debugProfileBuildsEnabledUserWidgets$,
    'debugEnhanceBuildTimelineArguments': _debugEnhanceBuildTimelineArguments$,
    'debugHighlightDeprecatedWidgets': _debugHighlightDeprecatedWidgets$,
    'debugChildrenHaveDuplicateKeys': _debugChildrenHaveDuplicateKeys$,
    'debugItemsHaveDuplicateKeys': _debugItemsHaveDuplicateKeys$,
    'debugCheckHasTable': _debugCheckHasTable$,
    'debugCheckHasMediaQuery': _debugCheckHasMediaQuery$,
    'debugCheckHasDirectionality': _debugCheckHasDirectionality$,
    'debugWidgetBuilderValue': _debugWidgetBuilderValue$,
    'debugCheckHasWidgetsLocalizations': _debugCheckHasWidgetsLocalizations$,
    'debugCheckHasOverlay': _debugCheckHasOverlay$,
    'debugAssertAllWidgetVarsUnset': _debugAssertAllWidgetVarsUnset$,
  },
  {
    'debugPrintRebuildDirtyWidgets': _debugPrintRebuildDirtyWidgets_set$,
    'debugOnRebuildDirtyWidget': _debugOnRebuildDirtyWidget_set$,
    'debugPrintBuildScope': _debugPrintBuildScope_set$,
    'debugPrintScheduleBuildForStacks': _debugPrintScheduleBuildForStacks_set$,
    'debugPrintGlobalKeyedWidgetLifecycle':
        _debugPrintGlobalKeyedWidgetLifecycle_set$,
    'debugProfileBuildsEnabled': _debugProfileBuildsEnabled_set$,
    'debugProfileBuildsEnabledUserWidgets':
        _debugProfileBuildsEnabledUserWidgets_set$,
    'debugEnhanceBuildTimelineArguments':
        _debugEnhanceBuildTimelineArguments_set$,
    'debugHighlightDeprecatedWidgets': _debugHighlightDeprecatedWidgets_set$,
  },
  {},
);
bool _debugPrintRebuildDirtyWidgets$() {
  return debugPrintRebuildDirtyWidgets;
}

void _debugPrintRebuildDirtyWidgets_set$(bool other$) {
  debugPrintRebuildDirtyWidgets = other$;
}

void Function(Element, bool)? _debugOnRebuildDirtyWidget$() {
  return debugOnRebuildDirtyWidget;
}

Function _debugOnRebuildDirtyWidget_set$(m.Scope scope$) =>
    (m.FunctionPointer? _debugOnRebuildDirtyWidget) {
      void _debugOnRebuildDirtyWidgetProxy(
        Element _debugOnRebuildDirtyWidget_e$,
        bool _debugOnRebuildDirtyWidget_builtOnce$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _debugOnRebuildDirtyWidget!,
            [
              _debugOnRebuildDirtyWidget_e$,
              _debugOnRebuildDirtyWidget_builtOnce$,
            ],
            {},
          );
      debugOnRebuildDirtyWidget = (_debugOnRebuildDirtyWidget == null
          ? null
          : _debugOnRebuildDirtyWidgetProxy);
    };
bool _debugPrintBuildScope$() {
  return debugPrintBuildScope;
}

void _debugPrintBuildScope_set$(bool other$) {
  debugPrintBuildScope = other$;
}

bool _debugPrintScheduleBuildForStacks$() {
  return debugPrintScheduleBuildForStacks;
}

void _debugPrintScheduleBuildForStacks_set$(bool other$) {
  debugPrintScheduleBuildForStacks = other$;
}

bool _debugPrintGlobalKeyedWidgetLifecycle$() {
  return debugPrintGlobalKeyedWidgetLifecycle;
}

void _debugPrintGlobalKeyedWidgetLifecycle_set$(bool other$) {
  debugPrintGlobalKeyedWidgetLifecycle = other$;
}

bool _debugProfileBuildsEnabled$() {
  return debugProfileBuildsEnabled;
}

void _debugProfileBuildsEnabled_set$(bool other$) {
  debugProfileBuildsEnabled = other$;
}

bool _debugProfileBuildsEnabledUserWidgets$() {
  return debugProfileBuildsEnabledUserWidgets;
}

void _debugProfileBuildsEnabledUserWidgets_set$(bool other$) {
  debugProfileBuildsEnabledUserWidgets = other$;
}

bool _debugEnhanceBuildTimelineArguments$() {
  return debugEnhanceBuildTimelineArguments;
}

void _debugEnhanceBuildTimelineArguments_set$(bool other$) {
  debugEnhanceBuildTimelineArguments = other$;
}

bool _debugHighlightDeprecatedWidgets$() {
  return debugHighlightDeprecatedWidgets;
}

void _debugHighlightDeprecatedWidgets_set$(bool other$) {
  debugHighlightDeprecatedWidgets = other$;
}

Function _debugChildrenHaveDuplicateKeys$(m.Scope scope$) =>
    debugChildrenHaveDuplicateKeys;
Function _debugItemsHaveDuplicateKeys$(m.Scope scope$) =>
    debugItemsHaveDuplicateKeys;
Function _debugCheckHasTable$(m.Scope scope$) => debugCheckHasTable;
Function _debugCheckHasMediaQuery$(m.Scope scope$) => debugCheckHasMediaQuery;
Function _debugCheckHasDirectionality$(m.Scope scope$) =>
    debugCheckHasDirectionality;
Function _debugWidgetBuilderValue$(m.Scope scope$) => debugWidgetBuilderValue;
Function _debugCheckHasWidgetsLocalizations$(m.Scope scope$) =>
    debugCheckHasWidgetsLocalizations;
Function _debugCheckHasOverlay$(m.Scope scope$) => debugCheckHasOverlay;
Function _debugAssertAllWidgetVarsUnset$(m.Scope scope$) =>
    debugAssertAllWidgetVarsUnset;
