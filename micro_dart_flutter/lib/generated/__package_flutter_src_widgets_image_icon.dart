// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/image_icon.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/icon.dart';
import 'package:flutter/src/widgets/icon_theme.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';
import 'package:flutter/src/widgets/image.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/image_icon.dart',
  {},
  {},
  {
    'ImageIcon': m.ClassMirror(
      'ImageIcon',
      {
        '#as': ImageIcon_as$,
        '#is': ImageIcon_is$,
        'image': _ImageIcon_image$,
        'size': _ImageIcon_size$,
        'color': _ImageIcon_color$,
        'semanticLabel': _ImageIcon_semanticLabel$,
        'build': _ImageIcon_build$,
        'debugFillProperties': _ImageIcon_debugFillProperties$,
      },
      {},
    )
  },
);
Function ImageIcon_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as ImageIcon;
Function ImageIcon_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is ImageIcon;
ImageProvider<Object>? _ImageIcon_image$(ImageIcon target) {
  return target.image;
}

double? _ImageIcon_size$(ImageIcon target) {
  return target.size;
}

Color? _ImageIcon_color$(ImageIcon target) {
  return target.color;
}

String? _ImageIcon_semanticLabel$(ImageIcon target) {
  return target.semanticLabel;
}

Function _ImageIcon_build$(
  m.Scope scope,
  ImageIcon target,
) =>
    target.build;
Function _ImageIcon_debugFillProperties$(
  m.Scope scope,
  ImageIcon target,
) =>
    target.debugFillProperties;
