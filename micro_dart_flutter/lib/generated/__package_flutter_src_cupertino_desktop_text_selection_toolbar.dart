// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/desktop_text_selection_toolbar.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/desktop_text_selection_toolbar.dart',
  {
    'CupertinoDesktopTextSelectionToolbar.':
        _CupertinoDesktopTextSelectionToolbar__$
  },
  {},
  {
    'CupertinoDesktopTextSelectionToolbar': m.ClassMirror(
      'CupertinoDesktopTextSelectionToolbar',
      {
        '#as': CupertinoDesktopTextSelectionToolbar_as$,
        '#is': CupertinoDesktopTextSelectionToolbar_is$,
        'anchor': _CupertinoDesktopTextSelectionToolbar_anchor$,
        'children': _CupertinoDesktopTextSelectionToolbar_children$,
        'build': _CupertinoDesktopTextSelectionToolbar_build$,
      },
      {},
    )
  },
);
Function CupertinoDesktopTextSelectionToolbar_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoDesktopTextSelectionToolbar;
Function CupertinoDesktopTextSelectionToolbar_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoDesktopTextSelectionToolbar;
Function _CupertinoDesktopTextSelectionToolbar_anchor$(
  m.Scope scope$,
  CupertinoDesktopTextSelectionToolbar target$,
) =>
    () {
      return target$.anchor;
    };
Function _CupertinoDesktopTextSelectionToolbar_children$(
  m.Scope scope$,
  CupertinoDesktopTextSelectionToolbar target$,
) =>
    () {
      return target$.children;
    };
Function _CupertinoDesktopTextSelectionToolbar__$(m.Scope scope$) => ({
      Key? key,
      required Offset anchor,
      required List children,
    }) {
      return CupertinoDesktopTextSelectionToolbar(
        anchor: anchor,
        children: List.from(children),
        key: key,
      );
    };
Function _CupertinoDesktopTextSelectionToolbar_build$(
  m.Scope scope$,
  CupertinoDesktopTextSelectionToolbar target$,
) =>
    target$.build;
