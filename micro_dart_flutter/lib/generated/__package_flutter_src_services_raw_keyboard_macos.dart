// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/raw_keyboard_macos.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/keyboard_maps.g.dart';
import 'package:flutter/src/services/raw_keyboard.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/raw_keyboard_macos.dart',
  {
    'RawKeyEventDataMacOs.modifierCapsLock':
        _RawKeyEventDataMacOs_modifierCapsLock$,
    'RawKeyEventDataMacOs.modifierShift': _RawKeyEventDataMacOs_modifierShift$,
    'RawKeyEventDataMacOs.modifierLeftShift':
        _RawKeyEventDataMacOs_modifierLeftShift$,
    'RawKeyEventDataMacOs.modifierRightShift':
        _RawKeyEventDataMacOs_modifierRightShift$,
    'RawKeyEventDataMacOs.modifierControl':
        _RawKeyEventDataMacOs_modifierControl$,
    'RawKeyEventDataMacOs.modifierLeftControl':
        _RawKeyEventDataMacOs_modifierLeftControl$,
    'RawKeyEventDataMacOs.modifierRightControl':
        _RawKeyEventDataMacOs_modifierRightControl$,
    'RawKeyEventDataMacOs.modifierOption':
        _RawKeyEventDataMacOs_modifierOption$,
    'RawKeyEventDataMacOs.modifierLeftOption':
        _RawKeyEventDataMacOs_modifierLeftOption$,
    'RawKeyEventDataMacOs.modifierRightOption':
        _RawKeyEventDataMacOs_modifierRightOption$,
    'RawKeyEventDataMacOs.modifierCommand':
        _RawKeyEventDataMacOs_modifierCommand$,
    'RawKeyEventDataMacOs.modifierLeftCommand':
        _RawKeyEventDataMacOs_modifierLeftCommand$,
    'RawKeyEventDataMacOs.modifierRightCommand':
        _RawKeyEventDataMacOs_modifierRightCommand$,
    'RawKeyEventDataMacOs.modifierNumericPad':
        _RawKeyEventDataMacOs_modifierNumericPad$,
    'RawKeyEventDataMacOs.modifierHelp': _RawKeyEventDataMacOs_modifierHelp$,
    'RawKeyEventDataMacOs.modifierFunction':
        _RawKeyEventDataMacOs_modifierFunction$,
    'RawKeyEventDataMacOs.deviceIndependentMask':
        _RawKeyEventDataMacOs_deviceIndependentMask$,
    'runeToLowerCase': _runeToLowerCase$,
  },
  {},
  {
    'RawKeyEventDataMacOs': m.ClassMirror(
      'RawKeyEventDataMacOs',
      {
        '#as': RawKeyEventDataMacOs_as$,
        '#is': RawKeyEventDataMacOs_is$,
        'characters': _RawKeyEventDataMacOs_characters$,
        'charactersIgnoringModifiers':
            _RawKeyEventDataMacOs_charactersIgnoringModifiers$,
        'keyCode': _RawKeyEventDataMacOs_keyCode$,
        'modifiers': _RawKeyEventDataMacOs_modifiers$,
        'specifiedLogicalKey': _RawKeyEventDataMacOs_specifiedLogicalKey$,
        'keyLabel': _RawKeyEventDataMacOs_keyLabel$,
        'physicalKey': _RawKeyEventDataMacOs_physicalKey$,
        'logicalKey': _RawKeyEventDataMacOs_logicalKey$,
        'hashCode': _RawKeyEventDataMacOs_hashCode$,
        'isModifierPressed': _RawKeyEventDataMacOs_isModifierPressed$,
        'getModifierSide': _RawKeyEventDataMacOs_getModifierSide$,
        'shouldDispatchEvent': _RawKeyEventDataMacOs_shouldDispatchEvent$,
        'debugFillProperties': _RawKeyEventDataMacOs_debugFillProperties$,
        '==': _RawKeyEventDataMacOs_eq$$,
      },
      {},
    )
  },
);
Function RawKeyEventDataMacOs_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RawKeyEventDataMacOs;
Function RawKeyEventDataMacOs_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RawKeyEventDataMacOs;
String _RawKeyEventDataMacOs_characters$(RawKeyEventDataMacOs target) {
  return target.characters;
}

String _RawKeyEventDataMacOs_charactersIgnoringModifiers$(
    RawKeyEventDataMacOs target) {
  return target.charactersIgnoringModifiers;
}

int _RawKeyEventDataMacOs_keyCode$(RawKeyEventDataMacOs target) {
  return target.keyCode;
}

int _RawKeyEventDataMacOs_modifiers$(RawKeyEventDataMacOs target) {
  return target.modifiers;
}

int? _RawKeyEventDataMacOs_specifiedLogicalKey$(RawKeyEventDataMacOs target) {
  return target.specifiedLogicalKey;
}

int _RawKeyEventDataMacOs_modifierCapsLock$() {
  return RawKeyEventDataMacOs.modifierCapsLock;
}

int _RawKeyEventDataMacOs_modifierShift$() {
  return RawKeyEventDataMacOs.modifierShift;
}

int _RawKeyEventDataMacOs_modifierLeftShift$() {
  return RawKeyEventDataMacOs.modifierLeftShift;
}

int _RawKeyEventDataMacOs_modifierRightShift$() {
  return RawKeyEventDataMacOs.modifierRightShift;
}

int _RawKeyEventDataMacOs_modifierControl$() {
  return RawKeyEventDataMacOs.modifierControl;
}

int _RawKeyEventDataMacOs_modifierLeftControl$() {
  return RawKeyEventDataMacOs.modifierLeftControl;
}

int _RawKeyEventDataMacOs_modifierRightControl$() {
  return RawKeyEventDataMacOs.modifierRightControl;
}

int _RawKeyEventDataMacOs_modifierOption$() {
  return RawKeyEventDataMacOs.modifierOption;
}

int _RawKeyEventDataMacOs_modifierLeftOption$() {
  return RawKeyEventDataMacOs.modifierLeftOption;
}

int _RawKeyEventDataMacOs_modifierRightOption$() {
  return RawKeyEventDataMacOs.modifierRightOption;
}

int _RawKeyEventDataMacOs_modifierCommand$() {
  return RawKeyEventDataMacOs.modifierCommand;
}

int _RawKeyEventDataMacOs_modifierLeftCommand$() {
  return RawKeyEventDataMacOs.modifierLeftCommand;
}

int _RawKeyEventDataMacOs_modifierRightCommand$() {
  return RawKeyEventDataMacOs.modifierRightCommand;
}

int _RawKeyEventDataMacOs_modifierNumericPad$() {
  return RawKeyEventDataMacOs.modifierNumericPad;
}

int _RawKeyEventDataMacOs_modifierHelp$() {
  return RawKeyEventDataMacOs.modifierHelp;
}

int _RawKeyEventDataMacOs_modifierFunction$() {
  return RawKeyEventDataMacOs.modifierFunction;
}

int _RawKeyEventDataMacOs_deviceIndependentMask$() {
  return RawKeyEventDataMacOs.deviceIndependentMask;
}

String _RawKeyEventDataMacOs_keyLabel$(RawKeyEventDataMacOs target) {
  return target.keyLabel;
}

PhysicalKeyboardKey _RawKeyEventDataMacOs_physicalKey$(
    RawKeyEventDataMacOs target) {
  return target.physicalKey;
}

LogicalKeyboardKey _RawKeyEventDataMacOs_logicalKey$(
    RawKeyEventDataMacOs target) {
  return target.logicalKey;
}

int _RawKeyEventDataMacOs_hashCode$(RawKeyEventDataMacOs target) {
  return target.hashCode;
}

Function _RawKeyEventDataMacOs_isModifierPressed$(
  m.Scope scope,
  RawKeyEventDataMacOs target,
) =>
    target.isModifierPressed;
Function _RawKeyEventDataMacOs_getModifierSide$(
  m.Scope scope,
  RawKeyEventDataMacOs target,
) =>
    target.getModifierSide;
Function _RawKeyEventDataMacOs_shouldDispatchEvent$(
  m.Scope scope,
  RawKeyEventDataMacOs target,
) =>
    target.shouldDispatchEvent;
Function _RawKeyEventDataMacOs_debugFillProperties$(
  m.Scope scope,
  RawKeyEventDataMacOs target,
) =>
    target.debugFillProperties;
Function _RawKeyEventDataMacOs_eq$$(
  m.Scope scope,
  RawKeyEventDataMacOs target,
) =>
    (Object other) => target == other;
Function _runeToLowerCase$(m.Scope scope) => runeToLowerCase;
