// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/constants.dart';
import 'package:flutter/painting.dart';
import 'package:flutter/src/material/colors.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/constants.dart',
  {
    'kMinInteractiveDimension': _kMinInteractiveDimension$,
    'kToolbarHeight': _kToolbarHeight$,
    'kBottomNavigationBarHeight': _kBottomNavigationBarHeight$,
    'kTextTabBarHeight': _kTextTabBarHeight$,
    'kThemeChangeDuration': _kThemeChangeDuration$,
    'kRadialReactionRadius': _kRadialReactionRadius$,
    'kRadialReactionDuration': _kRadialReactionDuration$,
    'kRadialReactionAlpha': _kRadialReactionAlpha$,
    'kTabScrollDuration': _kTabScrollDuration$,
    'kTabLabelPadding': _kTabLabelPadding$,
    'kMaterialListPadding': _kMaterialListPadding$,
    'kDefaultIconLightColor': _kDefaultIconLightColor$,
    'kDefaultIconDarkColor': _kDefaultIconDarkColor$,
  },
  {},
  {},
);
Function _kMinInteractiveDimension$(m.Scope scope$) =>
    () => kMinInteractiveDimension;
Function _kToolbarHeight$(m.Scope scope$) => () => kToolbarHeight;
Function _kBottomNavigationBarHeight$(m.Scope scope$) =>
    () => kBottomNavigationBarHeight;
Function _kTextTabBarHeight$(m.Scope scope$) => () => kTextTabBarHeight;
Function _kThemeChangeDuration$(m.Scope scope$) => () => kThemeChangeDuration;
Function _kRadialReactionRadius$(m.Scope scope$) => () => kRadialReactionRadius;
Function _kRadialReactionDuration$(m.Scope scope$) =>
    () => kRadialReactionDuration;
Function _kRadialReactionAlpha$(m.Scope scope$) => () => kRadialReactionAlpha;
Function _kTabScrollDuration$(m.Scope scope$) => () => kTabScrollDuration;
Function _kTabLabelPadding$(m.Scope scope$) => () => kTabLabelPadding;
Function _kMaterialListPadding$(m.Scope scope$) => () => kMaterialListPadding;
Function _kDefaultIconLightColor$(m.Scope scope$) =>
    () => kDefaultIconLightColor;
Function _kDefaultIconDarkColor$(m.Scope scope$) => () => kDefaultIconDarkColor;
