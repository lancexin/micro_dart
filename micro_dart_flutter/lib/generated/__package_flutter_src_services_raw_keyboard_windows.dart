// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/raw_keyboard_windows.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/keyboard_maps.g.dart';
import 'package:flutter/src/services/raw_keyboard.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/raw_keyboard_windows.dart',
  {
    'RawKeyEventDataWindows.modifierShift':
        _RawKeyEventDataWindows_modifierShift$,
    'RawKeyEventDataWindows.modifierLeftShift':
        _RawKeyEventDataWindows_modifierLeftShift$,
    'RawKeyEventDataWindows.modifierRightShift':
        _RawKeyEventDataWindows_modifierRightShift$,
    'RawKeyEventDataWindows.modifierControl':
        _RawKeyEventDataWindows_modifierControl$,
    'RawKeyEventDataWindows.modifierLeftControl':
        _RawKeyEventDataWindows_modifierLeftControl$,
    'RawKeyEventDataWindows.modifierRightControl':
        _RawKeyEventDataWindows_modifierRightControl$,
    'RawKeyEventDataWindows.modifierAlt': _RawKeyEventDataWindows_modifierAlt$,
    'RawKeyEventDataWindows.modifierLeftAlt':
        _RawKeyEventDataWindows_modifierLeftAlt$,
    'RawKeyEventDataWindows.modifierRightAlt':
        _RawKeyEventDataWindows_modifierRightAlt$,
    'RawKeyEventDataWindows.modifierLeftMeta':
        _RawKeyEventDataWindows_modifierLeftMeta$,
    'RawKeyEventDataWindows.modifierRightMeta':
        _RawKeyEventDataWindows_modifierRightMeta$,
    'RawKeyEventDataWindows.modifierCaps':
        _RawKeyEventDataWindows_modifierCaps$,
    'RawKeyEventDataWindows.modifierNumLock':
        _RawKeyEventDataWindows_modifierNumLock$,
    'RawKeyEventDataWindows.modifierScrollLock':
        _RawKeyEventDataWindows_modifierScrollLock$,
    'RawKeyEventDataWindows.': _RawKeyEventDataWindows__$,
  },
  {},
  {
    'RawKeyEventDataWindows': m.ClassMirror(
      'RawKeyEventDataWindows',
      {
        '#as': RawKeyEventDataWindows_as$,
        '#is': RawKeyEventDataWindows_is$,
        'keyCode': _RawKeyEventDataWindows_keyCode$,
        'scanCode': _RawKeyEventDataWindows_scanCode$,
        'characterCodePoint': _RawKeyEventDataWindows_characterCodePoint$,
        'modifiers': _RawKeyEventDataWindows_modifiers$,
        'keyLabel': _RawKeyEventDataWindows_keyLabel$,
        'physicalKey': _RawKeyEventDataWindows_physicalKey$,
        'logicalKey': _RawKeyEventDataWindows_logicalKey$,
        'hashCode': _RawKeyEventDataWindows_hashCode$,
        'isModifierPressed': _RawKeyEventDataWindows_isModifierPressed$,
        'getModifierSide': _RawKeyEventDataWindows_getModifierSide$,
        'shouldDispatchEvent': _RawKeyEventDataWindows_shouldDispatchEvent$,
        'debugFillProperties': _RawKeyEventDataWindows_debugFillProperties$,
        '==': _RawKeyEventDataWindows_eq$$,
      },
      {},
    )
  },
);
Function RawKeyEventDataWindows_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RawKeyEventDataWindows;
Function RawKeyEventDataWindows_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RawKeyEventDataWindows;
Function _RawKeyEventDataWindows_keyCode$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.keyCode;
    };
Function _RawKeyEventDataWindows_scanCode$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.scanCode;
    };
Function _RawKeyEventDataWindows_characterCodePoint$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.characterCodePoint;
    };
Function _RawKeyEventDataWindows_modifiers$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.modifiers;
    };
int _RawKeyEventDataWindows_modifierShift$() {
  return RawKeyEventDataWindows.modifierShift;
}

int _RawKeyEventDataWindows_modifierLeftShift$() {
  return RawKeyEventDataWindows.modifierLeftShift;
}

int _RawKeyEventDataWindows_modifierRightShift$() {
  return RawKeyEventDataWindows.modifierRightShift;
}

int _RawKeyEventDataWindows_modifierControl$() {
  return RawKeyEventDataWindows.modifierControl;
}

int _RawKeyEventDataWindows_modifierLeftControl$() {
  return RawKeyEventDataWindows.modifierLeftControl;
}

int _RawKeyEventDataWindows_modifierRightControl$() {
  return RawKeyEventDataWindows.modifierRightControl;
}

int _RawKeyEventDataWindows_modifierAlt$() {
  return RawKeyEventDataWindows.modifierAlt;
}

int _RawKeyEventDataWindows_modifierLeftAlt$() {
  return RawKeyEventDataWindows.modifierLeftAlt;
}

int _RawKeyEventDataWindows_modifierRightAlt$() {
  return RawKeyEventDataWindows.modifierRightAlt;
}

int _RawKeyEventDataWindows_modifierLeftMeta$() {
  return RawKeyEventDataWindows.modifierLeftMeta;
}

int _RawKeyEventDataWindows_modifierRightMeta$() {
  return RawKeyEventDataWindows.modifierRightMeta;
}

int _RawKeyEventDataWindows_modifierCaps$() {
  return RawKeyEventDataWindows.modifierCaps;
}

int _RawKeyEventDataWindows_modifierNumLock$() {
  return RawKeyEventDataWindows.modifierNumLock;
}

int _RawKeyEventDataWindows_modifierScrollLock$() {
  return RawKeyEventDataWindows.modifierScrollLock;
}

Function _RawKeyEventDataWindows_keyLabel$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.keyLabel;
    };
Function _RawKeyEventDataWindows_physicalKey$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.physicalKey;
    };
Function _RawKeyEventDataWindows_logicalKey$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.logicalKey;
    };
Function _RawKeyEventDataWindows_hashCode$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    () {
      return target$.hashCode;
    };
Function _RawKeyEventDataWindows__$(m.Scope scope$) => ({
      int? keyCode,
      int? scanCode,
      int? characterCodePoint,
      int? modifiers,
    }) {
      return RawKeyEventDataWindows(
        characterCodePoint: characterCodePoint ?? 0,
        keyCode: keyCode ?? 0,
        modifiers: modifiers ?? 0,
        scanCode: scanCode ?? 0,
      );
    };
Function _RawKeyEventDataWindows_isModifierPressed$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    target$.isModifierPressed;
Function _RawKeyEventDataWindows_getModifierSide$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    target$.getModifierSide;
Function _RawKeyEventDataWindows_shouldDispatchEvent$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    target$.shouldDispatchEvent;
Function _RawKeyEventDataWindows_debugFillProperties$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    target$.debugFillProperties;
Function _RawKeyEventDataWindows_eq$$(
  m.Scope scope$,
  RawKeyEventDataWindows target$,
) =>
    (Object other$) => target$ == other$;
