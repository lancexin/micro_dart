// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/box_shadow.dart';
import 'dart:math';
import 'dart:ui' show Shadow, lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/debug.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/box_shadow.dart',
  {
    'BoxShadow.': _BoxShadow__$,
    'BoxShadow.lerp': _BoxShadow_lerp$,
    'BoxShadow.lerpList': _BoxShadow_lerpList$,
  },
  {},
  {
    'BoxShadow': m.ClassMirror(
      'BoxShadow',
      {
        '#as': BoxShadow_as$,
        '#is': BoxShadow_is$,
        'spreadRadius': _BoxShadow_spreadRadius$,
        'blurStyle': _BoxShadow_blurStyle$,
        'hashCode': _BoxShadow_hashCode$,
        'toPaint': _BoxShadow_toPaint$,
        'scale': _BoxShadow_scale$,
        '==': _BoxShadow_eq$$,
        'toString': _BoxShadow_toString$,
      },
      {},
    )
  },
);
Function BoxShadow_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as BoxShadow;
Function BoxShadow_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is BoxShadow;
Function _BoxShadow_spreadRadius$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    () {
      return target$.spreadRadius;
    };
Function _BoxShadow_blurStyle$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    () {
      return target$.blurStyle;
    };
Function _BoxShadow_hashCode$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    () {
      return target$.hashCode;
    };
Function _BoxShadow__$(m.Scope scope$) => ({
      Color? color,
      Offset? offset,
      double? blurRadius,
      double? spreadRadius,
      BlurStyle? blurStyle,
    }) {
      return BoxShadow(
        blurRadius: blurRadius ?? 0.0,
        blurStyle: blurStyle ?? BlurStyle.normal,
        color: color ?? const Color(0xFF000000),
        offset: offset ?? Offset.zero,
        spreadRadius: spreadRadius ?? 0.0,
      );
    };
Function _BoxShadow_toPaint$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    target$.toPaint;
Function _BoxShadow_scale$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    target$.scale;
Function _BoxShadow_lerp$(m.Scope scope$) => BoxShadow.lerp;
Function _BoxShadow_lerpList$(m.Scope scope$) => BoxShadow.lerpList;
Function _BoxShadow_eq$$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    (Object other$) => target$ == other$;
Function _BoxShadow_toString$(
  m.Scope scope$,
  BoxShadow target$,
) =>
    target$.toString;
