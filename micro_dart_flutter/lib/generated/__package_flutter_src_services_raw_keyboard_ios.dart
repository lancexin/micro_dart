// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/raw_keyboard_ios.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/keyboard_maps.g.dart';
import 'package:flutter/src/services/raw_keyboard.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/raw_keyboard_ios.dart',
  {
    'RawKeyEventDataIos.modifierCapsLock':
        _RawKeyEventDataIos_modifierCapsLock$,
    'RawKeyEventDataIos.modifierShift': _RawKeyEventDataIos_modifierShift$,
    'RawKeyEventDataIos.modifierLeftShift':
        _RawKeyEventDataIos_modifierLeftShift$,
    'RawKeyEventDataIos.modifierRightShift':
        _RawKeyEventDataIos_modifierRightShift$,
    'RawKeyEventDataIos.modifierControl': _RawKeyEventDataIos_modifierControl$,
    'RawKeyEventDataIos.modifierLeftControl':
        _RawKeyEventDataIos_modifierLeftControl$,
    'RawKeyEventDataIos.modifierRightControl':
        _RawKeyEventDataIos_modifierRightControl$,
    'RawKeyEventDataIos.modifierOption': _RawKeyEventDataIos_modifierOption$,
    'RawKeyEventDataIos.modifierLeftOption':
        _RawKeyEventDataIos_modifierLeftOption$,
    'RawKeyEventDataIos.modifierRightOption':
        _RawKeyEventDataIos_modifierRightOption$,
    'RawKeyEventDataIos.modifierCommand': _RawKeyEventDataIos_modifierCommand$,
    'RawKeyEventDataIos.modifierLeftCommand':
        _RawKeyEventDataIos_modifierLeftCommand$,
    'RawKeyEventDataIos.modifierRightCommand':
        _RawKeyEventDataIos_modifierRightCommand$,
    'RawKeyEventDataIos.modifierNumericPad':
        _RawKeyEventDataIos_modifierNumericPad$,
    'RawKeyEventDataIos.modifierHelp': _RawKeyEventDataIos_modifierHelp$,
    'RawKeyEventDataIos.modifierFunction':
        _RawKeyEventDataIos_modifierFunction$,
    'RawKeyEventDataIos.deviceIndependentMask':
        _RawKeyEventDataIos_deviceIndependentMask$,
    'RawKeyEventDataIos.': _RawKeyEventDataIos__$,
  },
  {},
  {
    'RawKeyEventDataIos': m.ClassMirror(
      'RawKeyEventDataIos',
      {
        '#as': RawKeyEventDataIos_as$,
        '#is': RawKeyEventDataIos_is$,
        'characters': _RawKeyEventDataIos_characters$,
        'charactersIgnoringModifiers':
            _RawKeyEventDataIos_charactersIgnoringModifiers$,
        'keyCode': _RawKeyEventDataIos_keyCode$,
        'modifiers': _RawKeyEventDataIos_modifiers$,
        'keyLabel': _RawKeyEventDataIos_keyLabel$,
        'physicalKey': _RawKeyEventDataIos_physicalKey$,
        'logicalKey': _RawKeyEventDataIos_logicalKey$,
        'hashCode': _RawKeyEventDataIos_hashCode$,
        'isModifierPressed': _RawKeyEventDataIos_isModifierPressed$,
        'getModifierSide': _RawKeyEventDataIos_getModifierSide$,
        'debugFillProperties': _RawKeyEventDataIos_debugFillProperties$,
        '==': _RawKeyEventDataIos_eq$$,
      },
      {},
    )
  },
);
Function RawKeyEventDataIos_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RawKeyEventDataIos;
Function RawKeyEventDataIos_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RawKeyEventDataIos;
Function _RawKeyEventDataIos_characters$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.characters;
    };
Function _RawKeyEventDataIos_charactersIgnoringModifiers$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.charactersIgnoringModifiers;
    };
Function _RawKeyEventDataIos_keyCode$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.keyCode;
    };
Function _RawKeyEventDataIos_modifiers$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.modifiers;
    };
Function _RawKeyEventDataIos_modifierCapsLock$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierCapsLock;
Function _RawKeyEventDataIos_modifierShift$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierShift;
Function _RawKeyEventDataIos_modifierLeftShift$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierLeftShift;
Function _RawKeyEventDataIos_modifierRightShift$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierRightShift;
Function _RawKeyEventDataIos_modifierControl$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierControl;
Function _RawKeyEventDataIos_modifierLeftControl$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierLeftControl;
Function _RawKeyEventDataIos_modifierRightControl$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierRightControl;
Function _RawKeyEventDataIos_modifierOption$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierOption;
Function _RawKeyEventDataIos_modifierLeftOption$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierLeftOption;
Function _RawKeyEventDataIos_modifierRightOption$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierRightOption;
Function _RawKeyEventDataIos_modifierCommand$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierCommand;
Function _RawKeyEventDataIos_modifierLeftCommand$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierLeftCommand;
Function _RawKeyEventDataIos_modifierRightCommand$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierRightCommand;
Function _RawKeyEventDataIos_modifierNumericPad$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierNumericPad;
Function _RawKeyEventDataIos_modifierHelp$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierHelp;
Function _RawKeyEventDataIos_modifierFunction$(m.Scope scope$) =>
    () => RawKeyEventDataIos.modifierFunction;
Function _RawKeyEventDataIos_deviceIndependentMask$(m.Scope scope$) =>
    () => RawKeyEventDataIos.deviceIndependentMask;
Function _RawKeyEventDataIos_keyLabel$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.keyLabel;
    };
Function _RawKeyEventDataIos_physicalKey$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.physicalKey;
    };
Function _RawKeyEventDataIos_logicalKey$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.logicalKey;
    };
Function _RawKeyEventDataIos_hashCode$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    () {
      return target$.hashCode;
    };
Function _RawKeyEventDataIos__$(m.Scope scope$) => ({
      String? characters,
      String? charactersIgnoringModifiers,
      int? keyCode,
      int? modifiers,
    }) {
      return RawKeyEventDataIos(
        characters: characters ?? '',
        charactersIgnoringModifiers: charactersIgnoringModifiers ?? '',
        keyCode: keyCode ?? 0,
        modifiers: modifiers ?? 0,
      );
    };
Function _RawKeyEventDataIos_isModifierPressed$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    target$.isModifierPressed;
Function _RawKeyEventDataIos_getModifierSide$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    target$.getModifierSide;
Function _RawKeyEventDataIos_debugFillProperties$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    target$.debugFillProperties;
Function _RawKeyEventDataIos_eq$$(
  m.Scope scope$,
  RawKeyEventDataIos target$,
) =>
    (Object other$) => target$ == other$;
