// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/title.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/title.dart',
  {'Title.': _Title__$},
  {},
  {
    'Title': m.ClassMirror(
      'Title',
      {
        '#as': Title_as$,
        '#is': Title_is$,
        'title': _Title_title$,
        'color': _Title_color$,
        'child': _Title_child$,
        'build': _Title_build$,
        'debugFillProperties': _Title_debugFillProperties$,
      },
      {},
    )
  },
);
Function Title_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Title;
Function Title_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Title;
Function _Title_title$(
  m.Scope scope$,
  Title target$,
) =>
    () {
      return target$.title;
    };
Function _Title_color$(
  m.Scope scope$,
  Title target$,
) =>
    () {
      return target$.color;
    };
Function _Title_child$(
  m.Scope scope$,
  Title target$,
) =>
    () {
      return target$.child;
    };
Function _Title__$(m.Scope scope$) => ({
      Key? key,
      String? title,
      required Color color,
      required Widget child,
    }) {
      return Title(
        child: child,
        color: color,
        key: key,
        title: title ?? '',
      );
    };
Function _Title_build$(
  m.Scope scope$,
  Title target$,
) =>
    target$.build;
Function _Title_debugFillProperties$(
  m.Scope scope$,
  Title target$,
) =>
    target$.debugFillProperties;
