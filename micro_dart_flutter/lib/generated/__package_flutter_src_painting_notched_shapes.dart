// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/notched_shapes.dart';
import 'dart:math';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/borders.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/notched_shapes.dart',
  {},
  {},
  {
    'NotchedShape': m.ClassMirror(
      'NotchedShape',
      {'getOuterPath': _NotchedShape_getOuterPath$},
      {},
    ),
    'CircularNotchedRectangle': m.ClassMirror(
      'CircularNotchedRectangle',
      {'getOuterPath': _CircularNotchedRectangle_getOuterPath$},
      {},
    ),
    'AutomaticNotchedShape': m.ClassMirror(
      'AutomaticNotchedShape',
      {
        'host': _AutomaticNotchedShape_host$,
        'guest': _AutomaticNotchedShape_guest$,
        'getOuterPath': _AutomaticNotchedShape_getOuterPath$,
      },
      {},
    ),
  },
);
Function _NotchedShape_getOuterPath$(
  m.Scope scope,
  NotchedShape target,
) =>
    target.getOuterPath;
Function _CircularNotchedRectangle_getOuterPath$(
  m.Scope scope,
  CircularNotchedRectangle target,
) =>
    target.getOuterPath;
ShapeBorder _AutomaticNotchedShape_host$(AutomaticNotchedShape target) {
  return target.host;
}

ShapeBorder? _AutomaticNotchedShape_guest$(AutomaticNotchedShape target) {
  return target.guest;
}

Function _AutomaticNotchedShape_getOuterPath$(
  m.Scope scope,
  AutomaticNotchedShape target,
) =>
    target.getOuterPath;
