// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/switch.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/theme.dart';
import 'package:flutter/src/cupertino/thumb_painter.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/switch.dart',
  {},
  {},
  {
    'CupertinoSwitch': m.ClassMirror(
      'CupertinoSwitch',
      {
        'value': _CupertinoSwitch_value$,
        'onChanged': _CupertinoSwitch_onChanged$,
        'activeColor': _CupertinoSwitch_activeColor$,
        'trackColor': _CupertinoSwitch_trackColor$,
        'thumbColor': _CupertinoSwitch_thumbColor$,
        'focusColor': _CupertinoSwitch_focusColor$,
        'applyTheme': _CupertinoSwitch_applyTheme$,
        'dragStartBehavior': _CupertinoSwitch_dragStartBehavior$,
        'createState': _CupertinoSwitch_createState$,
        'debugFillProperties': _CupertinoSwitch_debugFillProperties$,
      },
      {},
    )
  },
);
bool _CupertinoSwitch_value$(CupertinoSwitch target) {
  return target.value;
}

void Function(bool)? _CupertinoSwitch_onChanged$(CupertinoSwitch target) {
  return target.onChanged;
}

Color? _CupertinoSwitch_activeColor$(CupertinoSwitch target) {
  return target.activeColor;
}

Color? _CupertinoSwitch_trackColor$(CupertinoSwitch target) {
  return target.trackColor;
}

Color? _CupertinoSwitch_thumbColor$(CupertinoSwitch target) {
  return target.thumbColor;
}

Color? _CupertinoSwitch_focusColor$(CupertinoSwitch target) {
  return target.focusColor;
}

bool? _CupertinoSwitch_applyTheme$(CupertinoSwitch target) {
  return target.applyTheme;
}

DragStartBehavior _CupertinoSwitch_dragStartBehavior$(CupertinoSwitch target) {
  return target.dragStartBehavior;
}

Function _CupertinoSwitch_createState$(
  m.Scope scope,
  CupertinoSwitch target,
) =>
    target.createState;
Function _CupertinoSwitch_debugFillProperties$(
  m.Scope scope,
  CupertinoSwitch target,
) =>
    target.debugFillProperties;
