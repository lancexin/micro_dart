// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/gestures/team.dart';
import 'package:flutter/src/gestures/arena.dart';
import 'package:flutter/src/gestures/binding.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/gestures/team.dart',
  {'GestureArenaTeam.': _GestureArenaTeam__$},
  {},
  {
    'GestureArenaTeam': m.ClassMirror(
      'GestureArenaTeam',
      {
        '#as': GestureArenaTeam_as$,
        '#is': GestureArenaTeam_is$,
        'captain': _GestureArenaTeam_captain$,
        'add': _GestureArenaTeam_add$,
      },
      {'captain': _GestureArenaTeam_captain_set$},
    )
  },
);
Function GestureArenaTeam_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as GestureArenaTeam;
Function GestureArenaTeam_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is GestureArenaTeam;
Function _GestureArenaTeam_captain$(
  m.Scope scope$,
  GestureArenaTeam target$,
) =>
    () {
      return target$.captain;
    };
void _GestureArenaTeam_captain_set$(
  m.Scope scope$,
  GestureArenaTeam target$,
) =>
    (dynamic other$) {
      target$.captain = other$;
    };
Function _GestureArenaTeam__$(m.Scope scope$) => () {
      return GestureArenaTeam();
    };
Function _GestureArenaTeam_add$(
  m.Scope scope$,
  GestureArenaTeam target$,
) =>
    target$.add;
