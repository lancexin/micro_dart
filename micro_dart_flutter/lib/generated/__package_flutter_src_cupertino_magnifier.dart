// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/magnifier.dart';
import 'dart:math';
import 'package:flutter/widgets.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/magnifier.dart',
  {
    'CupertinoMagnifier.kMagnifierAboveFocalPoint':
        _CupertinoMagnifier_kMagnifierAboveFocalPoint$,
    'CupertinoMagnifier.kDefaultSize': _CupertinoMagnifier_kDefaultSize$,
  },
  {},
  {
    'CupertinoTextMagnifier': m.ClassMirror(
      'CupertinoTextMagnifier',
      {
        'animationCurve': _CupertinoTextMagnifier_animationCurve$,
        'controller': _CupertinoTextMagnifier_controller$,
        'dragResistance': _CupertinoTextMagnifier_dragResistance$,
        'hideBelowThreshold': _CupertinoTextMagnifier_hideBelowThreshold$,
        'horizontalScreenEdgePadding':
            _CupertinoTextMagnifier_horizontalScreenEdgePadding$,
        'magnifierInfo': _CupertinoTextMagnifier_magnifierInfo$,
        'createState': _CupertinoTextMagnifier_createState$,
      },
      {},
    ),
    'CupertinoMagnifier': m.ClassMirror(
      'CupertinoMagnifier',
      {
        'shadows': _CupertinoMagnifier_shadows$,
        'borderSide': _CupertinoMagnifier_borderSide$,
        'size': _CupertinoMagnifier_size$,
        'borderRadius': _CupertinoMagnifier_borderRadius$,
        'inOutAnimation': _CupertinoMagnifier_inOutAnimation$,
        'additionalFocalPointOffset':
            _CupertinoMagnifier_additionalFocalPointOffset$,
        'build': _CupertinoMagnifier_build$,
      },
      {},
    ),
  },
);
Curve _CupertinoTextMagnifier_animationCurve$(CupertinoTextMagnifier target) {
  return target.animationCurve;
}

MagnifierController _CupertinoTextMagnifier_controller$(
    CupertinoTextMagnifier target) {
  return target.controller;
}

double _CupertinoTextMagnifier_dragResistance$(CupertinoTextMagnifier target) {
  return target.dragResistance;
}

double _CupertinoTextMagnifier_hideBelowThreshold$(
    CupertinoTextMagnifier target) {
  return target.hideBelowThreshold;
}

double _CupertinoTextMagnifier_horizontalScreenEdgePadding$(
    CupertinoTextMagnifier target) {
  return target.horizontalScreenEdgePadding;
}

ValueNotifier<MagnifierInfo> _CupertinoTextMagnifier_magnifierInfo$(
    CupertinoTextMagnifier target) {
  return target.magnifierInfo;
}

Function _CupertinoTextMagnifier_createState$(
  m.Scope scope,
  CupertinoTextMagnifier target,
) =>
    target.createState;
List<BoxShadow> _CupertinoMagnifier_shadows$(CupertinoMagnifier target) {
  return target.shadows;
}

BorderSide _CupertinoMagnifier_borderSide$(CupertinoMagnifier target) {
  return target.borderSide;
}

double _CupertinoMagnifier_kMagnifierAboveFocalPoint$() {
  return CupertinoMagnifier.kMagnifierAboveFocalPoint;
}

Size _CupertinoMagnifier_kDefaultSize$() {
  return CupertinoMagnifier.kDefaultSize;
}

Size _CupertinoMagnifier_size$(CupertinoMagnifier target) {
  return target.size;
}

BorderRadius _CupertinoMagnifier_borderRadius$(CupertinoMagnifier target) {
  return target.borderRadius;
}

Animation<double>? _CupertinoMagnifier_inOutAnimation$(
    CupertinoMagnifier target) {
  return target.inOutAnimation;
}

Offset _CupertinoMagnifier_additionalFocalPointOffset$(
    CupertinoMagnifier target) {
  return target.additionalFocalPointOffset;
}

Function _CupertinoMagnifier_build$(
  m.Scope scope,
  CupertinoMagnifier target,
) =>
    target.build;
