// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/display_feature_sub_screen.dart';
import 'dart:math';
import 'dart:ui' show DisplayFeature, DisplayFeatureState;
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/debug.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/media_query.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/display_feature_sub_screen.dart',
  {
    'DisplayFeatureSubScreen.avoidBounds':
        _DisplayFeatureSubScreen_avoidBounds$,
    'DisplayFeatureSubScreen.subScreensInBounds':
        _DisplayFeatureSubScreen_subScreensInBounds$,
  },
  {},
  {
    'DisplayFeatureSubScreen': m.ClassMirror(
      'DisplayFeatureSubScreen',
      {
        '#as': DisplayFeatureSubScreen_as$,
        '#is': DisplayFeatureSubScreen_is$,
        'anchorPoint': _DisplayFeatureSubScreen_anchorPoint$,
        'child': _DisplayFeatureSubScreen_child$,
        'build': _DisplayFeatureSubScreen_build$,
      },
      {},
    )
  },
);
Function DisplayFeatureSubScreen_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as DisplayFeatureSubScreen;
Function DisplayFeatureSubScreen_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is DisplayFeatureSubScreen;
Offset? _DisplayFeatureSubScreen_anchorPoint$(DisplayFeatureSubScreen target) {
  return target.anchorPoint;
}

Widget _DisplayFeatureSubScreen_child$(DisplayFeatureSubScreen target) {
  return target.child;
}

Function _DisplayFeatureSubScreen_build$(
  m.Scope scope,
  DisplayFeatureSubScreen target,
) =>
    target.build;
Function _DisplayFeatureSubScreen_avoidBounds$(m.Scope scope) =>
    DisplayFeatureSubScreen.avoidBounds;
Function _DisplayFeatureSubScreen_subScreensInBounds$(m.Scope scope) =>
    DisplayFeatureSubScreen.subScreensInBounds;
