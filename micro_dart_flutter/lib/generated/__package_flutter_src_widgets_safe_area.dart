// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/safe_area.dart';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/debug.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/media_query.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/safe_area.dart',
  {},
  {},
  {
    'SafeArea': m.ClassMirror(
      'SafeArea',
      {
        '#as': SafeArea_as$,
        '#is': SafeArea_is$,
        'left': _SafeArea_left$,
        'top': _SafeArea_top$,
        'right': _SafeArea_right$,
        'bottom': _SafeArea_bottom$,
        'minimum': _SafeArea_minimum$,
        'maintainBottomViewPadding': _SafeArea_maintainBottomViewPadding$,
        'child': _SafeArea_child$,
        'build': _SafeArea_build$,
        'debugFillProperties': _SafeArea_debugFillProperties$,
      },
      {},
    ),
    'SliverSafeArea': m.ClassMirror(
      'SliverSafeArea',
      {
        '#as': SliverSafeArea_as$,
        '#is': SliverSafeArea_is$,
        'left': _SliverSafeArea_left$,
        'top': _SliverSafeArea_top$,
        'right': _SliverSafeArea_right$,
        'bottom': _SliverSafeArea_bottom$,
        'minimum': _SliverSafeArea_minimum$,
        'sliver': _SliverSafeArea_sliver$,
        'build': _SliverSafeArea_build$,
        'debugFillProperties': _SliverSafeArea_debugFillProperties$,
      },
      {},
    ),
  },
);
Function SafeArea_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as SafeArea;
Function SafeArea_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is SafeArea;
bool _SafeArea_left$(SafeArea target) {
  return target.left;
}

bool _SafeArea_top$(SafeArea target) {
  return target.top;
}

bool _SafeArea_right$(SafeArea target) {
  return target.right;
}

bool _SafeArea_bottom$(SafeArea target) {
  return target.bottom;
}

EdgeInsets _SafeArea_minimum$(SafeArea target) {
  return target.minimum;
}

bool _SafeArea_maintainBottomViewPadding$(SafeArea target) {
  return target.maintainBottomViewPadding;
}

Widget _SafeArea_child$(SafeArea target) {
  return target.child;
}

Function _SafeArea_build$(
  m.Scope scope,
  SafeArea target,
) =>
    target.build;
Function _SafeArea_debugFillProperties$(
  m.Scope scope,
  SafeArea target,
) =>
    target.debugFillProperties;
Function SliverSafeArea_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as SliverSafeArea;
Function SliverSafeArea_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is SliverSafeArea;
bool _SliverSafeArea_left$(SliverSafeArea target) {
  return target.left;
}

bool _SliverSafeArea_top$(SliverSafeArea target) {
  return target.top;
}

bool _SliverSafeArea_right$(SliverSafeArea target) {
  return target.right;
}

bool _SliverSafeArea_bottom$(SliverSafeArea target) {
  return target.bottom;
}

EdgeInsets _SliverSafeArea_minimum$(SliverSafeArea target) {
  return target.minimum;
}

Widget _SliverSafeArea_sliver$(SliverSafeArea target) {
  return target.sliver;
}

Function _SliverSafeArea_build$(
  m.Scope scope,
  SliverSafeArea target,
) =>
    target.build;
Function _SliverSafeArea_debugFillProperties$(
  m.Scope scope,
  SliverSafeArea target,
) =>
    target.debugFillProperties;
