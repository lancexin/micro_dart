// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/date_picker_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/text_theme.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/date_picker_theme.dart',
  {
    'DatePickerThemeData.lerp': _DatePickerThemeData_lerp$,
    'DatePickerTheme.of': _DatePickerTheme_of$,
    'DatePickerTheme.maybeOf': _DatePickerTheme_maybeOf$,
    'DatePickerTheme.defaults': _DatePickerTheme_defaults$,
  },
  {},
  {
    'DatePickerThemeData': m.ClassMirror(
      'DatePickerThemeData',
      {
        'backgroundColor': _DatePickerThemeData_backgroundColor$,
        'elevation': _DatePickerThemeData_elevation$,
        'shadowColor': _DatePickerThemeData_shadowColor$,
        'surfaceTintColor': _DatePickerThemeData_surfaceTintColor$,
        'shape': _DatePickerThemeData_shape$,
        'headerBackgroundColor': _DatePickerThemeData_headerBackgroundColor$,
        'headerForegroundColor': _DatePickerThemeData_headerForegroundColor$,
        'headerHeadlineStyle': _DatePickerThemeData_headerHeadlineStyle$,
        'headerHelpStyle': _DatePickerThemeData_headerHelpStyle$,
        'weekdayStyle': _DatePickerThemeData_weekdayStyle$,
        'dayStyle': _DatePickerThemeData_dayStyle$,
        'dayForegroundColor': _DatePickerThemeData_dayForegroundColor$,
        'dayBackgroundColor': _DatePickerThemeData_dayBackgroundColor$,
        'dayOverlayColor': _DatePickerThemeData_dayOverlayColor$,
        'todayForegroundColor': _DatePickerThemeData_todayForegroundColor$,
        'todayBackgroundColor': _DatePickerThemeData_todayBackgroundColor$,
        'todayBorder': _DatePickerThemeData_todayBorder$,
        'yearStyle': _DatePickerThemeData_yearStyle$,
        'yearForegroundColor': _DatePickerThemeData_yearForegroundColor$,
        'yearBackgroundColor': _DatePickerThemeData_yearBackgroundColor$,
        'yearOverlayColor': _DatePickerThemeData_yearOverlayColor$,
        'rangePickerBackgroundColor':
            _DatePickerThemeData_rangePickerBackgroundColor$,
        'rangePickerElevation': _DatePickerThemeData_rangePickerElevation$,
        'rangePickerShadowColor': _DatePickerThemeData_rangePickerShadowColor$,
        'rangePickerSurfaceTintColor':
            _DatePickerThemeData_rangePickerSurfaceTintColor$,
        'rangePickerShape': _DatePickerThemeData_rangePickerShape$,
        'rangePickerHeaderBackgroundColor':
            _DatePickerThemeData_rangePickerHeaderBackgroundColor$,
        'rangePickerHeaderForegroundColor':
            _DatePickerThemeData_rangePickerHeaderForegroundColor$,
        'rangePickerHeaderHeadlineStyle':
            _DatePickerThemeData_rangePickerHeaderHeadlineStyle$,
        'rangePickerHeaderHelpStyle':
            _DatePickerThemeData_rangePickerHeaderHelpStyle$,
        'rangeSelectionBackgroundColor':
            _DatePickerThemeData_rangeSelectionBackgroundColor$,
        'rangeSelectionOverlayColor':
            _DatePickerThemeData_rangeSelectionOverlayColor$,
        'hashCode': _DatePickerThemeData_hashCode$,
        'copyWith': _DatePickerThemeData_copyWith$,
        'debugFillProperties': _DatePickerThemeData_debugFillProperties$,
      },
      {},
    ),
    'DatePickerTheme': m.ClassMirror(
      'DatePickerTheme',
      {
        'data': _DatePickerTheme_data$,
        'wrap': _DatePickerTheme_wrap$,
        'updateShouldNotify': _DatePickerTheme_updateShouldNotify$,
      },
      {},
    ),
  },
);
Color? _DatePickerThemeData_backgroundColor$(DatePickerThemeData target) {
  return target.backgroundColor;
}

double? _DatePickerThemeData_elevation$(DatePickerThemeData target) {
  return target.elevation;
}

Color? _DatePickerThemeData_shadowColor$(DatePickerThemeData target) {
  return target.shadowColor;
}

Color? _DatePickerThemeData_surfaceTintColor$(DatePickerThemeData target) {
  return target.surfaceTintColor;
}

ShapeBorder? _DatePickerThemeData_shape$(DatePickerThemeData target) {
  return target.shape;
}

Color? _DatePickerThemeData_headerBackgroundColor$(DatePickerThemeData target) {
  return target.headerBackgroundColor;
}

Color? _DatePickerThemeData_headerForegroundColor$(DatePickerThemeData target) {
  return target.headerForegroundColor;
}

TextStyle? _DatePickerThemeData_headerHeadlineStyle$(
    DatePickerThemeData target) {
  return target.headerHeadlineStyle;
}

TextStyle? _DatePickerThemeData_headerHelpStyle$(DatePickerThemeData target) {
  return target.headerHelpStyle;
}

TextStyle? _DatePickerThemeData_weekdayStyle$(DatePickerThemeData target) {
  return target.weekdayStyle;
}

TextStyle? _DatePickerThemeData_dayStyle$(DatePickerThemeData target) {
  return target.dayStyle;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_dayForegroundColor$(
    DatePickerThemeData target) {
  return target.dayForegroundColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_dayBackgroundColor$(
    DatePickerThemeData target) {
  return target.dayBackgroundColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_dayOverlayColor$(
    DatePickerThemeData target) {
  return target.dayOverlayColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_todayForegroundColor$(
    DatePickerThemeData target) {
  return target.todayForegroundColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_todayBackgroundColor$(
    DatePickerThemeData target) {
  return target.todayBackgroundColor;
}

BorderSide? _DatePickerThemeData_todayBorder$(DatePickerThemeData target) {
  return target.todayBorder;
}

TextStyle? _DatePickerThemeData_yearStyle$(DatePickerThemeData target) {
  return target.yearStyle;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_yearForegroundColor$(
    DatePickerThemeData target) {
  return target.yearForegroundColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_yearBackgroundColor$(
    DatePickerThemeData target) {
  return target.yearBackgroundColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_yearOverlayColor$(
    DatePickerThemeData target) {
  return target.yearOverlayColor;
}

Color? _DatePickerThemeData_rangePickerBackgroundColor$(
    DatePickerThemeData target) {
  return target.rangePickerBackgroundColor;
}

double? _DatePickerThemeData_rangePickerElevation$(DatePickerThemeData target) {
  return target.rangePickerElevation;
}

Color? _DatePickerThemeData_rangePickerShadowColor$(
    DatePickerThemeData target) {
  return target.rangePickerShadowColor;
}

Color? _DatePickerThemeData_rangePickerSurfaceTintColor$(
    DatePickerThemeData target) {
  return target.rangePickerSurfaceTintColor;
}

ShapeBorder? _DatePickerThemeData_rangePickerShape$(
    DatePickerThemeData target) {
  return target.rangePickerShape;
}

Color? _DatePickerThemeData_rangePickerHeaderBackgroundColor$(
    DatePickerThemeData target) {
  return target.rangePickerHeaderBackgroundColor;
}

Color? _DatePickerThemeData_rangePickerHeaderForegroundColor$(
    DatePickerThemeData target) {
  return target.rangePickerHeaderForegroundColor;
}

TextStyle? _DatePickerThemeData_rangePickerHeaderHeadlineStyle$(
    DatePickerThemeData target) {
  return target.rangePickerHeaderHeadlineStyle;
}

TextStyle? _DatePickerThemeData_rangePickerHeaderHelpStyle$(
    DatePickerThemeData target) {
  return target.rangePickerHeaderHelpStyle;
}

Color? _DatePickerThemeData_rangeSelectionBackgroundColor$(
    DatePickerThemeData target) {
  return target.rangeSelectionBackgroundColor;
}

MaterialStateProperty<Color?>? _DatePickerThemeData_rangeSelectionOverlayColor$(
    DatePickerThemeData target) {
  return target.rangeSelectionOverlayColor;
}

int _DatePickerThemeData_hashCode$(DatePickerThemeData target) {
  return target.hashCode;
}

Function _DatePickerThemeData_copyWith$(
  m.Scope scope,
  DatePickerThemeData target,
) =>
    target.copyWith;
Function _DatePickerThemeData_lerp$(m.Scope scope) => DatePickerThemeData.lerp;
Function _DatePickerThemeData_debugFillProperties$(
  m.Scope scope,
  DatePickerThemeData target,
) =>
    target.debugFillProperties;
DatePickerThemeData _DatePickerTheme_data$(DatePickerTheme target) {
  return target.data;
}

Function _DatePickerTheme_of$(m.Scope scope) => DatePickerTheme.of;
Function _DatePickerTheme_maybeOf$(m.Scope scope) => DatePickerTheme.maybeOf;
Function _DatePickerTheme_defaults$(m.Scope scope) => DatePickerTheme.defaults;
Function _DatePickerTheme_wrap$(
  m.Scope scope,
  DatePickerTheme target,
) =>
    target.wrap;
Function _DatePickerTheme_updateShouldNotify$(
  m.Scope scope,
  DatePickerTheme target,
) =>
    target.updateShouldNotify;
