// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/text_button_theme.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/text_button_theme.dart',
  {
    'TextButtonThemeData.lerp': _TextButtonThemeData_lerp$,
    'TextButtonTheme.of': _TextButtonTheme_of$,
  },
  {},
  {
    'TextButtonThemeData': m.ClassMirror(
      'TextButtonThemeData',
      {
        'style': _TextButtonThemeData_style$,
        'hashCode': _TextButtonThemeData_hashCode$,
        'debugFillProperties': _TextButtonThemeData_debugFillProperties$,
      },
      {},
    ),
    'TextButtonTheme': m.ClassMirror(
      'TextButtonTheme',
      {
        'data': _TextButtonTheme_data$,
        'wrap': _TextButtonTheme_wrap$,
        'updateShouldNotify': _TextButtonTheme_updateShouldNotify$,
      },
      {},
    ),
  },
);
ButtonStyle? _TextButtonThemeData_style$(TextButtonThemeData target) {
  return target.style;
}

int _TextButtonThemeData_hashCode$(TextButtonThemeData target) {
  return target.hashCode;
}

Function _TextButtonThemeData_lerp$(m.Scope scope) => TextButtonThemeData.lerp;
Function _TextButtonThemeData_debugFillProperties$(
  m.Scope scope,
  TextButtonThemeData target,
) =>
    target.debugFillProperties;
TextButtonThemeData _TextButtonTheme_data$(TextButtonTheme target) {
  return target.data;
}

Function _TextButtonTheme_of$(m.Scope scope) => TextButtonTheme.of;
Function _TextButtonTheme_wrap$(
  m.Scope scope,
  TextButtonTheme target,
) =>
    target.wrap;
Function _TextButtonTheme_updateShouldNotify$(
  m.Scope scope,
  TextButtonTheme target,
) =>
    target.updateShouldNotify;
