// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/custom_layout.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/object.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/custom_layout.dart',
  {},
  {},
  {
    'MultiChildLayoutParentData': m.ClassMirror(
      'MultiChildLayoutParentData',
      {
        '#as': MultiChildLayoutParentData_as$,
        '#is': MultiChildLayoutParentData_is$,
        'id': _MultiChildLayoutParentData_id$,
        'toString': _MultiChildLayoutParentData_toString$,
      },
      {'id': _MultiChildLayoutParentData_id_set$},
    ),
    'MultiChildLayoutDelegate': m.ClassMirror(
      'MultiChildLayoutDelegate',
      {
        '#as': MultiChildLayoutDelegate_as$,
        '#is': MultiChildLayoutDelegate_is$,
        'hasChild': _MultiChildLayoutDelegate_hasChild$,
        'layoutChild': _MultiChildLayoutDelegate_layoutChild$,
        'positionChild': _MultiChildLayoutDelegate_positionChild$,
        'getSize': _MultiChildLayoutDelegate_getSize$,
        'performLayout': _MultiChildLayoutDelegate_performLayout$,
        'shouldRelayout': _MultiChildLayoutDelegate_shouldRelayout$,
        'toString': _MultiChildLayoutDelegate_toString$,
      },
      {},
    ),
    'RenderCustomMultiChildLayoutBox': m.ClassMirror(
      'RenderCustomMultiChildLayoutBox',
      {
        '#as': RenderCustomMultiChildLayoutBox_as$,
        '#is': RenderCustomMultiChildLayoutBox_is$,
        'delegate': _RenderCustomMultiChildLayoutBox_delegate$,
        'setupParentData': _RenderCustomMultiChildLayoutBox_setupParentData$,
        'attach': _RenderCustomMultiChildLayoutBox_attach$,
        'detach': _RenderCustomMultiChildLayoutBox_detach$,
        'computeMinIntrinsicWidth':
            _RenderCustomMultiChildLayoutBox_computeMinIntrinsicWidth$,
        'computeMaxIntrinsicWidth':
            _RenderCustomMultiChildLayoutBox_computeMaxIntrinsicWidth$,
        'computeMinIntrinsicHeight':
            _RenderCustomMultiChildLayoutBox_computeMinIntrinsicHeight$,
        'computeMaxIntrinsicHeight':
            _RenderCustomMultiChildLayoutBox_computeMaxIntrinsicHeight$,
        'computeDryLayout': _RenderCustomMultiChildLayoutBox_computeDryLayout$,
        'performLayout': _RenderCustomMultiChildLayoutBox_performLayout$,
        'paint': _RenderCustomMultiChildLayoutBox_paint$,
        'hitTestChildren': _RenderCustomMultiChildLayoutBox_hitTestChildren$,
      },
      {'delegate': _RenderCustomMultiChildLayoutBox_delegate_set$},
    ),
  },
);
Function MultiChildLayoutParentData_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as MultiChildLayoutParentData;
Function MultiChildLayoutParentData_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is MultiChildLayoutParentData;
Object? _MultiChildLayoutParentData_id$(MultiChildLayoutParentData target) {
  return target.id;
}

void _MultiChildLayoutParentData_id_set$(
  MultiChildLayoutParentData target,
  Object? other,
) {
  target.id = other;
}

Function _MultiChildLayoutParentData_toString$(
  m.Scope scope,
  MultiChildLayoutParentData target,
) =>
    target.toString;
Function MultiChildLayoutDelegate_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as MultiChildLayoutDelegate;
Function MultiChildLayoutDelegate_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is MultiChildLayoutDelegate;
Function _MultiChildLayoutDelegate_hasChild$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.hasChild;
Function _MultiChildLayoutDelegate_layoutChild$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.layoutChild;
Function _MultiChildLayoutDelegate_positionChild$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.positionChild;
Function _MultiChildLayoutDelegate_getSize$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.getSize;
Function _MultiChildLayoutDelegate_performLayout$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.performLayout;
Function _MultiChildLayoutDelegate_shouldRelayout$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.shouldRelayout;
Function _MultiChildLayoutDelegate_toString$(
  m.Scope scope,
  MultiChildLayoutDelegate target,
) =>
    target.toString;
Function RenderCustomMultiChildLayoutBox_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderCustomMultiChildLayoutBox;
Function RenderCustomMultiChildLayoutBox_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderCustomMultiChildLayoutBox;
MultiChildLayoutDelegate _RenderCustomMultiChildLayoutBox_delegate$(
    RenderCustomMultiChildLayoutBox target) {
  return target.delegate;
}

void _RenderCustomMultiChildLayoutBox_delegate_set$(
  RenderCustomMultiChildLayoutBox target,
  MultiChildLayoutDelegate other,
) {
  target.delegate = other;
}

Function _RenderCustomMultiChildLayoutBox_setupParentData$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.setupParentData;
Function _RenderCustomMultiChildLayoutBox_attach$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.attach;
Function _RenderCustomMultiChildLayoutBox_detach$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.detach;
Function _RenderCustomMultiChildLayoutBox_computeMinIntrinsicWidth$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.computeMinIntrinsicWidth;
Function _RenderCustomMultiChildLayoutBox_computeMaxIntrinsicWidth$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.computeMaxIntrinsicWidth;
Function _RenderCustomMultiChildLayoutBox_computeMinIntrinsicHeight$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.computeMinIntrinsicHeight;
Function _RenderCustomMultiChildLayoutBox_computeMaxIntrinsicHeight$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.computeMaxIntrinsicHeight;
Function _RenderCustomMultiChildLayoutBox_computeDryLayout$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.computeDryLayout;
Function _RenderCustomMultiChildLayoutBox_performLayout$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.performLayout;
Function _RenderCustomMultiChildLayoutBox_paint$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.paint;
Function _RenderCustomMultiChildLayoutBox_hitTestChildren$(
  m.Scope scope,
  RenderCustomMultiChildLayoutBox target,
) =>
    target.hitTestChildren;
