// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/foundation/service_extensions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/foundation/service_extensions.dart',
  {
    'FoundationServiceExtensions.reassemble':
        _FoundationServiceExtensions_reassemble$,
    'FoundationServiceExtensions.exit': _FoundationServiceExtensions_exit$,
    'FoundationServiceExtensions.connectedVmServiceUri':
        _FoundationServiceExtensions_connectedVmServiceUri$,
    'FoundationServiceExtensions.activeDevToolsServerAddress':
        _FoundationServiceExtensions_activeDevToolsServerAddress$,
    'FoundationServiceExtensions.platformOverride':
        _FoundationServiceExtensions_platformOverride$,
    'FoundationServiceExtensions.brightnessOverride':
        _FoundationServiceExtensions_brightnessOverride$,
    'FoundationServiceExtensions.values': _FoundationServiceExtensions_values$,
  },
  {},
  {
    'FoundationServiceExtensions': m.ClassMirror(
      'FoundationServiceExtensions',
      {},
      {},
    )
  },
);
Function _FoundationServiceExtensions_reassemble$(m.Scope scope$) =>
    () => FoundationServiceExtensions.reassemble;
Function _FoundationServiceExtensions_exit$(m.Scope scope$) =>
    () => FoundationServiceExtensions.exit;
Function _FoundationServiceExtensions_connectedVmServiceUri$(m.Scope scope$) =>
    () => FoundationServiceExtensions.connectedVmServiceUri;
Function _FoundationServiceExtensions_activeDevToolsServerAddress$(
        m.Scope scope$) =>
    () => FoundationServiceExtensions.activeDevToolsServerAddress;
Function _FoundationServiceExtensions_platformOverride$(m.Scope scope$) =>
    () => FoundationServiceExtensions.platformOverride;
Function _FoundationServiceExtensions_brightnessOverride$(m.Scope scope$) =>
    () => FoundationServiceExtensions.brightnessOverride;
Function _FoundationServiceExtensions_values$(m.Scope scope$) =>
    () => FoundationServiceExtensions.values;
