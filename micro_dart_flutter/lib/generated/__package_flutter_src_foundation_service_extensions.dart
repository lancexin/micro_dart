// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/foundation/service_extensions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/foundation/service_extensions.dart',
  {
    'FoundationServiceExtensions.reassemble':
        _FoundationServiceExtensions_reassemble$,
    'FoundationServiceExtensions.exit': _FoundationServiceExtensions_exit$,
    'FoundationServiceExtensions.connectedVmServiceUri':
        _FoundationServiceExtensions_connectedVmServiceUri$,
    'FoundationServiceExtensions.activeDevToolsServerAddress':
        _FoundationServiceExtensions_activeDevToolsServerAddress$,
    'FoundationServiceExtensions.platformOverride':
        _FoundationServiceExtensions_platformOverride$,
    'FoundationServiceExtensions.brightnessOverride':
        _FoundationServiceExtensions_brightnessOverride$,
    'FoundationServiceExtensions.values': _FoundationServiceExtensions_values$,
  },
  {},
  {
    'FoundationServiceExtensions': m.ClassMirror(
      'FoundationServiceExtensions',
      {},
      {},
    )
  },
);
FoundationServiceExtensions _FoundationServiceExtensions_reassemble$() {
  return FoundationServiceExtensions.reassemble;
}

FoundationServiceExtensions _FoundationServiceExtensions_exit$() {
  return FoundationServiceExtensions.exit;
}

FoundationServiceExtensions
    _FoundationServiceExtensions_connectedVmServiceUri$() {
  return FoundationServiceExtensions.connectedVmServiceUri;
}

FoundationServiceExtensions
    _FoundationServiceExtensions_activeDevToolsServerAddress$() {
  return FoundationServiceExtensions.activeDevToolsServerAddress;
}

FoundationServiceExtensions _FoundationServiceExtensions_platformOverride$() {
  return FoundationServiceExtensions.platformOverride;
}

FoundationServiceExtensions _FoundationServiceExtensions_brightnessOverride$() {
  return FoundationServiceExtensions.brightnessOverride;
}

List<FoundationServiceExtensions> _FoundationServiceExtensions_values$() {
  return FoundationServiceExtensions.values;
}
