// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/tab_view.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/app.dart' show CupertinoApp;
import 'package:flutter/src/cupertino/route.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/tab_view.dart',
  {},
  {},
  {
    'CupertinoTabView': m.ClassMirror(
      'CupertinoTabView',
      {
        'builder': _CupertinoTabView_builder$,
        'navigatorKey': _CupertinoTabView_navigatorKey$,
        'defaultTitle': _CupertinoTabView_defaultTitle$,
        'routes': _CupertinoTabView_routes$,
        'onGenerateRoute': _CupertinoTabView_onGenerateRoute$,
        'onUnknownRoute': _CupertinoTabView_onUnknownRoute$,
        'navigatorObservers': _CupertinoTabView_navigatorObservers$,
        'restorationScopeId': _CupertinoTabView_restorationScopeId$,
        'createState': _CupertinoTabView_createState$,
      },
      {},
    )
  },
);
Widget Function(BuildContext)? _CupertinoTabView_builder$(
    CupertinoTabView target) {
  return target.builder;
}

GlobalKey<NavigatorState>? _CupertinoTabView_navigatorKey$(
    CupertinoTabView target) {
  return target.navigatorKey;
}

String? _CupertinoTabView_defaultTitle$(CupertinoTabView target) {
  return target.defaultTitle;
}

Map<String, Widget Function(BuildContext)>? _CupertinoTabView_routes$(
    CupertinoTabView target) {
  return target.routes;
}

Route<dynamic>? Function(RouteSettings)? _CupertinoTabView_onGenerateRoute$(
    CupertinoTabView target) {
  return target.onGenerateRoute;
}

Route<dynamic>? Function(RouteSettings)? _CupertinoTabView_onUnknownRoute$(
    CupertinoTabView target) {
  return target.onUnknownRoute;
}

List<NavigatorObserver> _CupertinoTabView_navigatorObservers$(
    CupertinoTabView target) {
  return target.navigatorObservers;
}

String? _CupertinoTabView_restorationScopeId$(CupertinoTabView target) {
  return target.restorationScopeId;
}

Function _CupertinoTabView_createState$(
  m.Scope scope,
  CupertinoTabView target,
) =>
    target.createState;
