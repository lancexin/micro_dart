// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/debug.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/hardware_keyboard.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/debug.dart',
  {
    'debugKeyEventSimulatorTransitModeOverride':
        _debugKeyEventSimulatorTransitModeOverride$,
    'debugProfilePlatformChannels': _debugProfilePlatformChannels$,
    'debugAssertAllServicesVarsUnset': _debugAssertAllServicesVarsUnset$,
  },
  {
    'debugKeyEventSimulatorTransitModeOverride':
        _debugKeyEventSimulatorTransitModeOverride_set$,
    'debugProfilePlatformChannels': _debugProfilePlatformChannels_set$,
  },
  {},
);
KeyDataTransitMode? _debugKeyEventSimulatorTransitModeOverride$() {
  return debugKeyEventSimulatorTransitModeOverride;
}

void _debugKeyEventSimulatorTransitModeOverride_set$(
    KeyDataTransitMode? other) {
  debugKeyEventSimulatorTransitModeOverride = other;
}

bool _debugProfilePlatformChannels$() {
  return debugProfilePlatformChannels;
}

void _debugProfilePlatformChannels_set$(bool other) {
  debugProfilePlatformChannels = other;
}

Function _debugAssertAllServicesVarsUnset$(m.Scope scope) =>
    debugAssertAllServicesVarsUnset;
