// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/orientation_builder.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/layout_builder.dart';
import 'package:flutter/src/widgets/media_query.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/orientation_builder.dart',
  {'OrientationBuilder.': _OrientationBuilder__$},
  {},
  {
    'OrientationBuilder': m.ClassMirror(
      'OrientationBuilder',
      {
        '#as': OrientationBuilder_as$,
        '#is': OrientationBuilder_is$,
        'builder': _OrientationBuilder_builder$,
        'build': _OrientationBuilder_build$,
      },
      {},
    )
  },
);
Function OrientationBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as OrientationBuilder;
Function OrientationBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is OrientationBuilder;
Function _OrientationBuilder_builder$(
  m.Scope scope$,
  OrientationBuilder target$,
) =>
    () {
      return target$.builder;
    };
Function _OrientationBuilder__$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer builder,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        Orientation builder_orientation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder,
            [
              builder_context$,
              builder_orientation$,
            ],
            {},
          );
      return OrientationBuilder(
        builder: builderProxy,
        key: key,
      );
    };
Function _OrientationBuilder_build$(
  m.Scope scope$,
  OrientationBuilder target$,
) =>
    target$.build;
