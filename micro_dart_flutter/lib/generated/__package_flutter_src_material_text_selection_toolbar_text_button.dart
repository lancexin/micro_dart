// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/text_selection_toolbar_text_button.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/constants.dart';
import 'package:flutter/src/material/text_button.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/text_selection_toolbar_text_button.dart',
  {
    'TextSelectionToolbarTextButton.getPadding':
        _TextSelectionToolbarTextButton_getPadding$,
    'TextSelectionToolbarTextButton.copyWith':
        _TextSelectionToolbarTextButton_copyWith$,
  },
  {},
  {
    'TextSelectionToolbarTextButton': m.ClassMirror(
      'TextSelectionToolbarTextButton',
      {
        '#as': TextSelectionToolbarTextButton_as$,
        '#is': TextSelectionToolbarTextButton_is$,
        'child': _TextSelectionToolbarTextButton_child$,
        'onPressed': _TextSelectionToolbarTextButton_onPressed$,
        'padding': _TextSelectionToolbarTextButton_padding$,
        'alignment': _TextSelectionToolbarTextButton_alignment$,
        'build': _TextSelectionToolbarTextButton_build$,
      },
      {},
    )
  },
);
Function TextSelectionToolbarTextButton_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as TextSelectionToolbarTextButton;
Function TextSelectionToolbarTextButton_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is TextSelectionToolbarTextButton;
Widget _TextSelectionToolbarTextButton_child$(
    TextSelectionToolbarTextButton target) {
  return target.child;
}

void Function()? _TextSelectionToolbarTextButton_onPressed$(
    TextSelectionToolbarTextButton target) {
  return target.onPressed;
}

EdgeInsets _TextSelectionToolbarTextButton_padding$(
    TextSelectionToolbarTextButton target) {
  return target.padding;
}

AlignmentGeometry? _TextSelectionToolbarTextButton_alignment$(
    TextSelectionToolbarTextButton target) {
  return target.alignment;
}

Function _TextSelectionToolbarTextButton_getPadding$(m.Scope scope) =>
    TextSelectionToolbarTextButton.getPadding;
Function _TextSelectionToolbarTextButton_copyWith$(
  m.Scope scope,
  TextSelectionToolbarTextButton target,
) =>
    ({
      AlignmentGeometry? alignment,
      Widget? child,
      m.FunctionPointer? onPressed,
      EdgeInsets? padding,
    }) {
      void onPressedProxy() => scope.engine.callFunctionPointer(
            scope,
            onPressed!,
            [],
            {},
          );
      return target.copyWith(
        alignment: alignment,
        child: child,
        onPressed: onPressed == null ? null : onPressedProxy,
        padding: padding,
      );
    };
Function _TextSelectionToolbarTextButton_build$(
  m.Scope scope,
  TextSelectionToolbarTextButton target,
) =>
    target.build;
