// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/grid_tile.dart';
import 'package:flutter/widgets.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/grid_tile.dart',
  {'GridTile.': _GridTile__$},
  {},
  {
    'GridTile': m.ClassMirror(
      'GridTile',
      {
        '#as': GridTile_as$,
        '#is': GridTile_is$,
        'header': _GridTile_header$,
        'footer': _GridTile_footer$,
        'child': _GridTile_child$,
        'build': _GridTile_build$,
      },
      {},
    )
  },
);
Function GridTile_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as GridTile;
Function GridTile_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is GridTile;
Function _GridTile_header$(
  m.Scope scope$,
  GridTile target$,
) =>
    () {
      return target$.header;
    };
Function _GridTile_footer$(
  m.Scope scope$,
  GridTile target$,
) =>
    () {
      return target$.footer;
    };
Function _GridTile_child$(
  m.Scope scope$,
  GridTile target$,
) =>
    () {
      return target$.child;
    };
Function _GridTile__$(m.Scope scope$) => ({
      Key? key,
      Widget? header,
      Widget? footer,
      required Widget child,
    }) {
      return GridTile(
        child: child,
        footer: footer,
        header: header,
        key: key,
      );
    };
Function _GridTile_build$(
  m.Scope scope$,
  GridTile target$,
) =>
    target$.build;
