// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_app_bar.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/bottom_app_bar_theme.dart';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/elevation_overlay.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/scaffold.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_app_bar.dart',
  {},
  {},
  {
    'BottomAppBar': m.ClassMirror(
      'BottomAppBar',
      {
        '#as': BottomAppBar_as$,
        '#is': BottomAppBar_is$,
        'child': _BottomAppBar_child$,
        'padding': _BottomAppBar_padding$,
        'color': _BottomAppBar_color$,
        'elevation': _BottomAppBar_elevation$,
        'shape': _BottomAppBar_shape$,
        'clipBehavior': _BottomAppBar_clipBehavior$,
        'notchMargin': _BottomAppBar_notchMargin$,
        'surfaceTintColor': _BottomAppBar_surfaceTintColor$,
        'shadowColor': _BottomAppBar_shadowColor$,
        'height': _BottomAppBar_height$,
        'createState': _BottomAppBar_createState$,
      },
      {},
    )
  },
);
Function BottomAppBar_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as BottomAppBar;
Function BottomAppBar_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is BottomAppBar;
Widget? _BottomAppBar_child$(BottomAppBar target) {
  return target.child;
}

EdgeInsetsGeometry? _BottomAppBar_padding$(BottomAppBar target) {
  return target.padding;
}

Color? _BottomAppBar_color$(BottomAppBar target) {
  return target.color;
}

double? _BottomAppBar_elevation$(BottomAppBar target) {
  return target.elevation;
}

NotchedShape? _BottomAppBar_shape$(BottomAppBar target) {
  return target.shape;
}

Clip _BottomAppBar_clipBehavior$(BottomAppBar target) {
  return target.clipBehavior;
}

double _BottomAppBar_notchMargin$(BottomAppBar target) {
  return target.notchMargin;
}

Color? _BottomAppBar_surfaceTintColor$(BottomAppBar target) {
  return target.surfaceTintColor;
}

Color? _BottomAppBar_shadowColor$(BottomAppBar target) {
  return target.shadowColor;
}

double? _BottomAppBar_height$(BottomAppBar target) {
  return target.height;
}

Function _BottomAppBar_createState$(
  m.Scope scope,
  BottomAppBar target,
) =>
    target.createState;
