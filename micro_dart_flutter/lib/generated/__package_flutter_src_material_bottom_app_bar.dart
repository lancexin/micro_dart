// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_app_bar.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/bottom_app_bar_theme.dart';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/elevation_overlay.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/scaffold.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_app_bar.dart',
  {'BottomAppBar.': _BottomAppBar__$},
  {},
  {
    'BottomAppBar': m.ClassMirror(
      'BottomAppBar',
      {
        '#as': BottomAppBar_as$,
        '#is': BottomAppBar_is$,
        'child': _BottomAppBar_child$,
        'padding': _BottomAppBar_padding$,
        'color': _BottomAppBar_color$,
        'elevation': _BottomAppBar_elevation$,
        'shape': _BottomAppBar_shape$,
        'clipBehavior': _BottomAppBar_clipBehavior$,
        'notchMargin': _BottomAppBar_notchMargin$,
        'surfaceTintColor': _BottomAppBar_surfaceTintColor$,
        'shadowColor': _BottomAppBar_shadowColor$,
        'height': _BottomAppBar_height$,
        'createState': _BottomAppBar_createState$,
      },
      {},
    )
  },
);
Function BottomAppBar_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as BottomAppBar;
Function BottomAppBar_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is BottomAppBar;
Function _BottomAppBar_child$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.child;
    };
Function _BottomAppBar_padding$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.padding;
    };
Function _BottomAppBar_color$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.color;
    };
Function _BottomAppBar_elevation$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.elevation;
    };
Function _BottomAppBar_shape$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.shape;
    };
Function _BottomAppBar_clipBehavior$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.clipBehavior;
    };
Function _BottomAppBar_notchMargin$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.notchMargin;
    };
Function _BottomAppBar_surfaceTintColor$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.surfaceTintColor;
    };
Function _BottomAppBar_shadowColor$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.shadowColor;
    };
Function _BottomAppBar_height$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    () {
      return target$.height;
    };
Function _BottomAppBar__$(m.Scope scope$) => ({
      Key? key,
      Color? color,
      double? elevation,
      NotchedShape? shape,
      Clip? clipBehavior,
      double? notchMargin,
      Widget? child,
      EdgeInsetsGeometry? padding,
      Color? surfaceTintColor,
      Color? shadowColor,
      double? height,
    }) {
      return BottomAppBar(
        child: child,
        clipBehavior: clipBehavior ?? Clip.none,
        color: color,
        elevation: elevation,
        height: height,
        key: key,
        notchMargin: notchMargin ?? 4.0,
        padding: padding,
        shadowColor: shadowColor,
        shape: shape,
        surfaceTintColor: surfaceTintColor,
      );
    };
Function _BottomAppBar_createState$(
  m.Scope scope$,
  BottomAppBar target$,
) =>
    target$.createState;
