// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/drawer_header.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/divider.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/drawer_header.dart',
  {},
  {},
  {
    'DrawerHeader': m.ClassMirror(
      'DrawerHeader',
      {
        'decoration': _DrawerHeader_decoration$,
        'padding': _DrawerHeader_padding$,
        'margin': _DrawerHeader_margin$,
        'duration': _DrawerHeader_duration$,
        'curve': _DrawerHeader_curve$,
        'child': _DrawerHeader_child$,
        'build': _DrawerHeader_build$,
      },
      {},
    )
  },
);
Decoration? _DrawerHeader_decoration$(DrawerHeader target) {
  return target.decoration;
}

EdgeInsetsGeometry _DrawerHeader_padding$(DrawerHeader target) {
  return target.padding;
}

EdgeInsetsGeometry? _DrawerHeader_margin$(DrawerHeader target) {
  return target.margin;
}

Duration _DrawerHeader_duration$(DrawerHeader target) {
  return target.duration;
}

Curve _DrawerHeader_curve$(DrawerHeader target) {
  return target.curve;
}

Widget? _DrawerHeader_child$(DrawerHeader target) {
  return target.child;
}

Function _DrawerHeader_build$(
  m.Scope scope,
  DrawerHeader target,
) =>
    target.build;
