// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/placeholder.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/placeholder.dart',
  {},
  {},
  {
    'Placeholder': m.ClassMirror(
      'Placeholder',
      {
        '#as': Placeholder_as$,
        '#is': Placeholder_is$,
        'color': _Placeholder_color$,
        'strokeWidth': _Placeholder_strokeWidth$,
        'fallbackWidth': _Placeholder_fallbackWidth$,
        'fallbackHeight': _Placeholder_fallbackHeight$,
        'child': _Placeholder_child$,
        'build': _Placeholder_build$,
        'debugFillProperties': _Placeholder_debugFillProperties$,
      },
      {},
    )
  },
);
Function Placeholder_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as Placeholder;
Function Placeholder_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is Placeholder;
Color _Placeholder_color$(Placeholder target) {
  return target.color;
}

double _Placeholder_strokeWidth$(Placeholder target) {
  return target.strokeWidth;
}

double _Placeholder_fallbackWidth$(Placeholder target) {
  return target.fallbackWidth;
}

double _Placeholder_fallbackHeight$(Placeholder target) {
  return target.fallbackHeight;
}

Widget? _Placeholder_child$(Placeholder target) {
  return target.child;
}

Function _Placeholder_build$(
  m.Scope scope,
  Placeholder target,
) =>
    target.build;
Function _Placeholder_debugFillProperties$(
  m.Scope scope,
  Placeholder target,
) =>
    target.debugFillProperties;
