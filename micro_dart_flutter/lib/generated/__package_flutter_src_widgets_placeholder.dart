// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/placeholder.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/placeholder.dart',
  {'Placeholder.': _Placeholder__$},
  {},
  {
    'Placeholder': m.ClassMirror(
      'Placeholder',
      {
        '#as': Placeholder_as$,
        '#is': Placeholder_is$,
        'color': _Placeholder_color$,
        'strokeWidth': _Placeholder_strokeWidth$,
        'fallbackWidth': _Placeholder_fallbackWidth$,
        'fallbackHeight': _Placeholder_fallbackHeight$,
        'child': _Placeholder_child$,
        'build': _Placeholder_build$,
        'debugFillProperties': _Placeholder_debugFillProperties$,
      },
      {},
    )
  },
);
Function Placeholder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Placeholder;
Function Placeholder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Placeholder;
Function _Placeholder_color$(
  m.Scope scope$,
  Placeholder target$,
) =>
    () {
      return target$.color;
    };
Function _Placeholder_strokeWidth$(
  m.Scope scope$,
  Placeholder target$,
) =>
    () {
      return target$.strokeWidth;
    };
Function _Placeholder_fallbackWidth$(
  m.Scope scope$,
  Placeholder target$,
) =>
    () {
      return target$.fallbackWidth;
    };
Function _Placeholder_fallbackHeight$(
  m.Scope scope$,
  Placeholder target$,
) =>
    () {
      return target$.fallbackHeight;
    };
Function _Placeholder_child$(
  m.Scope scope$,
  Placeholder target$,
) =>
    () {
      return target$.child;
    };
Function _Placeholder__$(m.Scope scope$) => ({
      Key? key,
      Color? color,
      double? strokeWidth,
      double? fallbackWidth,
      double? fallbackHeight,
      Widget? child,
    }) {
      return Placeholder(
        child: child,
        color: color ?? const Color(0xFF455A64),
        fallbackHeight: fallbackHeight ?? 400.0,
        fallbackWidth: fallbackWidth ?? 400.0,
        key: key,
        strokeWidth: strokeWidth ?? 2.0,
      );
    };
Function _Placeholder_build$(
  m.Scope scope$,
  Placeholder target$,
) =>
    target$.build;
Function _Placeholder_debugFillProperties$(
  m.Scope scope$,
  Placeholder target$,
) =>
    target$.debugFillProperties;
