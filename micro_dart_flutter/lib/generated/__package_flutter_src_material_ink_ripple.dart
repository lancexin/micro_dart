// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/ink_ripple.dart';
import 'dart:math';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:flutter/src/material/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/ink_ripple.dart',
  {'InkRipple.splashFactory': _InkRipple_splashFactory$},
  {},
  {
    'InkRipple': m.ClassMirror(
      'InkRipple',
      {
        '#as': InkRipple_as$,
        '#is': InkRipple_is$,
        'confirm': _InkRipple_confirm$,
        'cancel': _InkRipple_cancel$,
        'dispose': _InkRipple_dispose$,
        'paintFeature': _InkRipple_paintFeature$,
      },
      {},
    )
  },
);
Function InkRipple_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as InkRipple;
Function InkRipple_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is InkRipple;
InteractiveInkFeatureFactory _InkRipple_splashFactory$() {
  return InkRipple.splashFactory;
}

Function _InkRipple_confirm$(
  m.Scope scope,
  InkRipple target,
) =>
    target.confirm;
Function _InkRipple_cancel$(
  m.Scope scope,
  InkRipple target,
) =>
    target.cancel;
Function _InkRipple_dispose$(
  m.Scope scope,
  InkRipple target,
) =>
    target.dispose;
Function _InkRipple_paintFeature$(
  m.Scope scope,
  InkRipple target,
) =>
    target.paintFeature;
