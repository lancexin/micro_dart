// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/reorderable_list.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/gestures.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/icons.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/reorderable_list.dart',
  {
    'ReorderableListView.': _ReorderableListView__$,
    'ReorderableListView.builder': _ReorderableListView_builder_$,
  },
  {},
  {
    'ReorderableListView': m.ClassMirror(
      'ReorderableListView',
      {
        '#as': ReorderableListView_as$,
        '#is': ReorderableListView_is$,
        'itemBuilder': _ReorderableListView_itemBuilder$,
        'itemCount': _ReorderableListView_itemCount$,
        'onReorder': _ReorderableListView_onReorder$,
        'onReorderStart': _ReorderableListView_onReorderStart$,
        'onReorderEnd': _ReorderableListView_onReorderEnd$,
        'proxyDecorator': _ReorderableListView_proxyDecorator$,
        'buildDefaultDragHandles':
            _ReorderableListView_buildDefaultDragHandles$,
        'padding': _ReorderableListView_padding$,
        'header': _ReorderableListView_header$,
        'footer': _ReorderableListView_footer$,
        'scrollDirection': _ReorderableListView_scrollDirection$,
        'reverse': _ReorderableListView_reverse$,
        'scrollController': _ReorderableListView_scrollController$,
        'primary': _ReorderableListView_primary$,
        'physics': _ReorderableListView_physics$,
        'shrinkWrap': _ReorderableListView_shrinkWrap$,
        'anchor': _ReorderableListView_anchor$,
        'cacheExtent': _ReorderableListView_cacheExtent$,
        'dragStartBehavior': _ReorderableListView_dragStartBehavior$,
        'keyboardDismissBehavior':
            _ReorderableListView_keyboardDismissBehavior$,
        'restorationId': _ReorderableListView_restorationId$,
        'clipBehavior': _ReorderableListView_clipBehavior$,
        'itemExtent': _ReorderableListView_itemExtent$,
        'prototypeItem': _ReorderableListView_prototypeItem$,
        'createState': _ReorderableListView_createState$,
      },
      {},
    )
  },
);
Function ReorderableListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as ReorderableListView;
Function ReorderableListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is ReorderableListView;
Function _ReorderableListView_itemBuilder$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.itemBuilder;
    };
Function _ReorderableListView_itemCount$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.itemCount;
    };
Function _ReorderableListView_onReorder$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.onReorder;
    };
Function _ReorderableListView_onReorderStart$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.onReorderStart;
    };
Function _ReorderableListView_onReorderEnd$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.onReorderEnd;
    };
Function _ReorderableListView_proxyDecorator$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.proxyDecorator;
    };
Function _ReorderableListView_buildDefaultDragHandles$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.buildDefaultDragHandles;
    };
Function _ReorderableListView_padding$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.padding;
    };
Function _ReorderableListView_header$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.header;
    };
Function _ReorderableListView_footer$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.footer;
    };
Function _ReorderableListView_scrollDirection$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.scrollDirection;
    };
Function _ReorderableListView_reverse$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.reverse;
    };
Function _ReorderableListView_scrollController$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.scrollController;
    };
Function _ReorderableListView_primary$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.primary;
    };
Function _ReorderableListView_physics$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.physics;
    };
Function _ReorderableListView_shrinkWrap$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.shrinkWrap;
    };
Function _ReorderableListView_anchor$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.anchor;
    };
Function _ReorderableListView_cacheExtent$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.cacheExtent;
    };
Function _ReorderableListView_dragStartBehavior$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.dragStartBehavior;
    };
Function _ReorderableListView_keyboardDismissBehavior$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.keyboardDismissBehavior;
    };
Function _ReorderableListView_restorationId$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.restorationId;
    };
Function _ReorderableListView_clipBehavior$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.clipBehavior;
    };
Function _ReorderableListView_itemExtent$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.itemExtent;
    };
Function _ReorderableListView_prototypeItem$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    () {
      return target$.prototypeItem;
    };
Function _ReorderableListView__$(m.Scope scope$) => ({
      Key? key,
      required List children,
      required m.FunctionPointer onReorder,
      m.FunctionPointer? onReorderStart,
      m.FunctionPointer? onReorderEnd,
      double? itemExtent,
      Widget? prototypeItem,
      m.FunctionPointer? proxyDecorator,
      bool? buildDefaultDragHandles,
      EdgeInsets? padding,
      Widget? header,
      Widget? footer,
      Axis? scrollDirection,
      bool? reverse,
      ScrollController? scrollController,
      bool? primary,
      ScrollPhysics? physics,
      bool? shrinkWrap,
      double? anchor,
      double? cacheExtent,
      DragStartBehavior? dragStartBehavior,
      ScrollViewKeyboardDismissBehavior? keyboardDismissBehavior,
      String? restorationId,
      Clip? clipBehavior,
    }) {
      void onReorderProxy(
        int onReorder_oldIndex$,
        int onReorder_newIndex$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onReorder,
            [
              onReorder_oldIndex$,
              onReorder_newIndex$,
            ],
            {},
          );
      void onReorderEndProxy(int onReorderEnd_index$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onReorderEnd!,
            [onReorderEnd_index$],
            {},
          );
      void onReorderStartProxy(int onReorderStart_index$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onReorderStart!,
            [onReorderStart_index$],
            {},
          );
      Widget proxyDecoratorProxy(
        Widget proxyDecorator_child$,
        int proxyDecorator_index$,
        Animation<double> proxyDecorator_animation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            proxyDecorator!,
            [
              proxyDecorator_child$,
              proxyDecorator_index$,
              proxyDecorator_animation$,
            ],
            {},
          );
      return ReorderableListView(
        anchor: anchor ?? 0.0,
        buildDefaultDragHandles: buildDefaultDragHandles ?? true,
        cacheExtent: cacheExtent,
        children: List.from(children),
        clipBehavior: clipBehavior ?? Clip.hardEdge,
        dragStartBehavior: dragStartBehavior ?? DragStartBehavior.start,
        footer: footer,
        header: header,
        itemExtent: itemExtent,
        key: key,
        keyboardDismissBehavior:
            keyboardDismissBehavior ?? ScrollViewKeyboardDismissBehavior.manual,
        onReorder: onReorderProxy,
        onReorderEnd: onReorderEnd == null ? null : onReorderEndProxy,
        onReorderStart: onReorderStart == null ? null : onReorderStartProxy,
        padding: padding,
        physics: physics,
        primary: primary,
        prototypeItem: prototypeItem,
        proxyDecorator: proxyDecorator == null ? null : proxyDecoratorProxy,
        restorationId: restorationId,
        reverse: reverse ?? false,
        scrollController: scrollController,
        scrollDirection: scrollDirection ?? Axis.vertical,
        shrinkWrap: shrinkWrap ?? false,
      );
    };
Function _ReorderableListView_builder_$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer itemBuilder,
      required int itemCount,
      required m.FunctionPointer onReorder,
      m.FunctionPointer? onReorderStart,
      m.FunctionPointer? onReorderEnd,
      double? itemExtent,
      Widget? prototypeItem,
      m.FunctionPointer? proxyDecorator,
      bool? buildDefaultDragHandles,
      EdgeInsets? padding,
      Widget? header,
      Widget? footer,
      Axis? scrollDirection,
      bool? reverse,
      ScrollController? scrollController,
      bool? primary,
      ScrollPhysics? physics,
      bool? shrinkWrap,
      double? anchor,
      double? cacheExtent,
      DragStartBehavior? dragStartBehavior,
      ScrollViewKeyboardDismissBehavior? keyboardDismissBehavior,
      String? restorationId,
      Clip? clipBehavior,
    }) {
      Widget itemBuilderProxy(
        BuildContext itemBuilder_context$,
        int itemBuilder_index$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            itemBuilder,
            [
              itemBuilder_context$,
              itemBuilder_index$,
            ],
            {},
          );
      void onReorderProxy(
        int onReorder_oldIndex$,
        int onReorder_newIndex$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onReorder,
            [
              onReorder_oldIndex$,
              onReorder_newIndex$,
            ],
            {},
          );
      void onReorderEndProxy(int onReorderEnd_index$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onReorderEnd!,
            [onReorderEnd_index$],
            {},
          );
      void onReorderStartProxy(int onReorderStart_index$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onReorderStart!,
            [onReorderStart_index$],
            {},
          );
      Widget proxyDecoratorProxy(
        Widget proxyDecorator_child$,
        int proxyDecorator_index$,
        Animation<double> proxyDecorator_animation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            proxyDecorator!,
            [
              proxyDecorator_child$,
              proxyDecorator_index$,
              proxyDecorator_animation$,
            ],
            {},
          );
      return ReorderableListView.builder(
        anchor: anchor ?? 0.0,
        buildDefaultDragHandles: buildDefaultDragHandles ?? true,
        cacheExtent: cacheExtent,
        clipBehavior: clipBehavior ?? Clip.hardEdge,
        dragStartBehavior: dragStartBehavior ?? DragStartBehavior.start,
        footer: footer,
        header: header,
        itemBuilder: itemBuilderProxy,
        itemCount: itemCount,
        itemExtent: itemExtent,
        key: key,
        keyboardDismissBehavior:
            keyboardDismissBehavior ?? ScrollViewKeyboardDismissBehavior.manual,
        onReorder: onReorderProxy,
        onReorderEnd: onReorderEnd == null ? null : onReorderEndProxy,
        onReorderStart: onReorderStart == null ? null : onReorderStartProxy,
        padding: padding,
        physics: physics,
        primary: primary,
        prototypeItem: prototypeItem,
        proxyDecorator: proxyDecorator == null ? null : proxyDecoratorProxy,
        restorationId: restorationId,
        reverse: reverse ?? false,
        scrollController: scrollController,
        scrollDirection: scrollDirection ?? Axis.vertical,
        shrinkWrap: shrinkWrap ?? false,
      );
    };
Function _ReorderableListView_createState$(
  m.Scope scope$,
  ReorderableListView target$,
) =>
    target$.createState;
