// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/material/input_border.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/material_state.dart',
  {
    'MaterialStateMouseCursor.clickable': _MaterialStateMouseCursor_clickable$,
    'MaterialStateMouseCursor.textable': _MaterialStateMouseCursor_textable$,
    'MaterialStateProperty.resolveAs': _MaterialStateProperty_resolveAs$,
    'MaterialStateProperty.all': _MaterialStateProperty_all$,
    'MaterialState.hovered': _MaterialState_hovered$,
    'MaterialState.focused': _MaterialState_focused$,
    'MaterialState.pressed': _MaterialState_pressed$,
    'MaterialState.dragged': _MaterialState_dragged$,
    'MaterialState.selected': _MaterialState_selected$,
    'MaterialState.scrolledUnder': _MaterialState_scrolledUnder$,
    'MaterialState.disabled': _MaterialState_disabled$,
    'MaterialState.error': _MaterialState_error$,
    'MaterialState.values': _MaterialState_values$,
  },
  {},
  {
    'MaterialStateColor': m.ClassMirror(
      'MaterialStateColor',
      {'resolve': _MaterialStateColor_resolve$},
      {},
    ),
    'MaterialStateMouseCursor': m.ClassMirror(
      'MaterialStateMouseCursor',
      {
        'createSession': _MaterialStateMouseCursor_createSession$,
        'resolve': _MaterialStateMouseCursor_resolve$,
      },
      {},
    ),
    'MaterialStateBorderSide': m.ClassMirror(
      'MaterialStateBorderSide',
      {'resolve': _MaterialStateBorderSide_resolve$},
      {},
    ),
    'MaterialStateOutlinedBorder': m.ClassMirror(
      'MaterialStateOutlinedBorder',
      {'resolve': _MaterialStateOutlinedBorder_resolve$},
      {},
    ),
    'MaterialStateTextStyle': m.ClassMirror(
      'MaterialStateTextStyle',
      {'resolve': _MaterialStateTextStyle_resolve$},
      {},
    ),
    'MaterialStateOutlineInputBorder': m.ClassMirror(
      'MaterialStateOutlineInputBorder',
      {'resolve': _MaterialStateOutlineInputBorder_resolve$},
      {},
    ),
    'MaterialStateUnderlineInputBorder': m.ClassMirror(
      'MaterialStateUnderlineInputBorder',
      {'resolve': _MaterialStateUnderlineInputBorder_resolve$},
      {},
    ),
    'MaterialStateProperty': m.ClassMirror(
      'MaterialStateProperty',
      {'resolve': _MaterialStateProperty_resolve$},
      {},
    ),
    'MaterialStatePropertyAll': m.ClassMirror(
      'MaterialStatePropertyAll',
      {
        'value': _MaterialStatePropertyAll_value$,
        'resolve': _MaterialStatePropertyAll_resolve$,
        'toString': _MaterialStatePropertyAll_toString$,
      },
      {},
    ),
    'MaterialStatesController': m.ClassMirror(
      'MaterialStatesController',
      {'update': _MaterialStatesController_update$},
      {},
    ),
    'MaterialState': m.ClassMirror(
      'MaterialState',
      {},
      {},
    ),
  },
);
Function _MaterialStateColor_resolve$(
  m.Scope scope,
  MaterialStateColor target,
) =>
    target.resolve;
MaterialStateMouseCursor _MaterialStateMouseCursor_clickable$() {
  return MaterialStateMouseCursor.clickable;
}

MaterialStateMouseCursor _MaterialStateMouseCursor_textable$() {
  return MaterialStateMouseCursor.textable;
}

Function _MaterialStateMouseCursor_createSession$(
  m.Scope scope,
  MaterialStateMouseCursor target,
) =>
    target.createSession;
Function _MaterialStateMouseCursor_resolve$(
  m.Scope scope,
  MaterialStateMouseCursor target,
) =>
    target.resolve;
Function _MaterialStateBorderSide_resolve$(
  m.Scope scope,
  MaterialStateBorderSide target,
) =>
    target.resolve;
Function _MaterialStateOutlinedBorder_resolve$(
  m.Scope scope,
  MaterialStateOutlinedBorder target,
) =>
    target.resolve;
Function _MaterialStateTextStyle_resolve$(
  m.Scope scope,
  MaterialStateTextStyle target,
) =>
    target.resolve;
Function _MaterialStateOutlineInputBorder_resolve$(
  m.Scope scope,
  MaterialStateOutlineInputBorder target,
) =>
    target.resolve;
Function _MaterialStateUnderlineInputBorder_resolve$(
  m.Scope scope,
  MaterialStateUnderlineInputBorder target,
) =>
    target.resolve;
Function _MaterialStateProperty_resolve$<T>(
  m.Scope scope,
  MaterialStateProperty<T> target,
) =>
    target.resolve;
Function _MaterialStateProperty_resolveAs$<T>(m.Scope scope) =>
    MaterialStateProperty.resolveAs<T>;
Function _MaterialStateProperty_all$<T>(m.Scope scope) =>
    MaterialStateProperty.all<T>;
T _MaterialStatePropertyAll_value$<T>(MaterialStatePropertyAll<T> target) {
  return target.value;
}

Function _MaterialStatePropertyAll_resolve$<T>(
  m.Scope scope,
  MaterialStatePropertyAll<T> target,
) =>
    target.resolve;
Function _MaterialStatePropertyAll_toString$<T>(
  m.Scope scope,
  MaterialStatePropertyAll<T> target,
) =>
    target.toString;
Function _MaterialStatesController_update$(
  m.Scope scope,
  MaterialStatesController target,
) =>
    target.update;
MaterialState _MaterialState_hovered$() {
  return MaterialState.hovered;
}

MaterialState _MaterialState_focused$() {
  return MaterialState.focused;
}

MaterialState _MaterialState_pressed$() {
  return MaterialState.pressed;
}

MaterialState _MaterialState_dragged$() {
  return MaterialState.dragged;
}

MaterialState _MaterialState_selected$() {
  return MaterialState.selected;
}

MaterialState _MaterialState_scrolledUnder$() {
  return MaterialState.scrolledUnder;
}

MaterialState _MaterialState_disabled$() {
  return MaterialState.disabled;
}

MaterialState _MaterialState_error$() {
  return MaterialState.error;
}

List<MaterialState> _MaterialState_values$() {
  return MaterialState.values;
}
