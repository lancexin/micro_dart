// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/no_splash.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:flutter/src/material/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/no_splash.dart',
  {
    'NoSplash.splashFactory': _NoSplash_splashFactory$,
    'NoSplash.': _NoSplash__$,
  },
  {},
  {
    'NoSplash': m.ClassMirror(
      'NoSplash',
      {
        '#as': NoSplash_as$,
        '#is': NoSplash_is$,
        'paintFeature': _NoSplash_paintFeature$,
      },
      {},
    )
  },
);
Function NoSplash_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as NoSplash;
Function NoSplash_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is NoSplash;
InteractiveInkFeatureFactory _NoSplash_splashFactory$() {
  return NoSplash.splashFactory;
}

Function _NoSplash__$(m.Scope scope$) => ({
      required MaterialInkController controller,
      required RenderBox referenceBox,
      required Color color,
      m.FunctionPointer? onRemoved,
    }) {
      void onRemovedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onRemoved!,
            [],
            {},
          );
      return NoSplash(
        color: color,
        controller: controller,
        onRemoved: onRemoved == null ? null : onRemovedProxy,
        referenceBox: referenceBox,
      );
    };
Function _NoSplash_paintFeature$(
  m.Scope scope$,
  NoSplash target$,
) =>
    target$.paintFeature;
