// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/foundation/annotations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/foundation/annotations.dart',
  {
    'Category.': _Category__$,
    'DocumentationIcon.': _DocumentationIcon__$,
    'Summary.': _Summary__$,
  },
  {},
  {
    'Category': m.ClassMirror(
      'Category',
      {
        '#as': Category_as$,
        '#is': Category_is$,
        'sections': _Category_sections$,
      },
      {},
    ),
    'DocumentationIcon': m.ClassMirror(
      'DocumentationIcon',
      {
        '#as': DocumentationIcon_as$,
        '#is': DocumentationIcon_is$,
        'url': _DocumentationIcon_url$,
      },
      {},
    ),
    'Summary': m.ClassMirror(
      'Summary',
      {
        '#as': Summary_as$,
        '#is': Summary_is$,
        'text': _Summary_text$,
      },
      {},
    ),
  },
);
Function Category_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Category;
Function Category_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Category;
Function _Category_sections$(
  m.Scope scope$,
  Category target$,
) =>
    () {
      return target$.sections;
    };
Function _Category__$(m.Scope scope$) => (List sections) {
      return Category(List.from(sections));
    };
Function DocumentationIcon_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DocumentationIcon;
Function DocumentationIcon_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DocumentationIcon;
Function _DocumentationIcon_url$(
  m.Scope scope$,
  DocumentationIcon target$,
) =>
    () {
      return target$.url;
    };
Function _DocumentationIcon__$(m.Scope scope$) => (String url) {
      return DocumentationIcon(url);
    };
Function Summary_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Summary;
Function Summary_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Summary;
Function _Summary_text$(
  m.Scope scope$,
  Summary target$,
) =>
    () {
      return target$.text;
    };
Function _Summary__$(m.Scope scope$) => (String text) {
      return Summary(text);
    };
