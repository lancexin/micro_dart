// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/animated_size.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/animated_size.dart',
  {},
  {},
  {
    'AnimatedSize': m.ClassMirror(
      'AnimatedSize',
      {
        'child': _AnimatedSize_child$,
        'alignment': _AnimatedSize_alignment$,
        'curve': _AnimatedSize_curve$,
        'duration': _AnimatedSize_duration$,
        'reverseDuration': _AnimatedSize_reverseDuration$,
        'clipBehavior': _AnimatedSize_clipBehavior$,
        'createState': _AnimatedSize_createState$,
      },
      {},
    )
  },
);
Widget? _AnimatedSize_child$(AnimatedSize target) {
  return target.child;
}

AlignmentGeometry _AnimatedSize_alignment$(AnimatedSize target) {
  return target.alignment;
}

Curve _AnimatedSize_curve$(AnimatedSize target) {
  return target.curve;
}

Duration _AnimatedSize_duration$(AnimatedSize target) {
  return target.duration;
}

Duration? _AnimatedSize_reverseDuration$(AnimatedSize target) {
  return target.reverseDuration;
}

Clip _AnimatedSize_clipBehavior$(AnimatedSize target) {
  return target.clipBehavior;
}

Function _AnimatedSize_createState$(
  m.Scope scope,
  AnimatedSize target,
) =>
    target.createState;
