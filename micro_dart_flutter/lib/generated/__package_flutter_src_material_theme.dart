// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/theme.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/material/typography.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/theme.dart',
  {
    'kThemeAnimationDuration': _kThemeAnimationDuration$,
    'Theme.of': _Theme_of$,
  },
  {},
  {
    'Theme': m.ClassMirror(
      'Theme',
      {
        'data': _Theme_data$,
        'child': _Theme_child$,
        'build': _Theme_build$,
        'debugFillProperties': _Theme_debugFillProperties$,
      },
      {},
    ),
    'ThemeDataTween': m.ClassMirror(
      'ThemeDataTween',
      {'lerp': _ThemeDataTween_lerp$},
      {},
    ),
    'AnimatedTheme': m.ClassMirror(
      'AnimatedTheme',
      {
        'data': _AnimatedTheme_data$,
        'child': _AnimatedTheme_child$,
        'createState': _AnimatedTheme_createState$,
      },
      {},
    ),
  },
);
Duration _kThemeAnimationDuration$() {
  return kThemeAnimationDuration;
}

ThemeData _Theme_data$(Theme target) {
  return target.data;
}

Widget _Theme_child$(Theme target) {
  return target.child;
}

Function _Theme_of$(m.Scope scope) => Theme.of;
Function _Theme_build$(
  m.Scope scope,
  Theme target,
) =>
    target.build;
Function _Theme_debugFillProperties$(
  m.Scope scope,
  Theme target,
) =>
    target.debugFillProperties;
Function _ThemeDataTween_lerp$(
  m.Scope scope,
  ThemeDataTween target,
) =>
    target.lerp;
ThemeData _AnimatedTheme_data$(AnimatedTheme target) {
  return target.data;
}

Widget _AnimatedTheme_child$(AnimatedTheme target) {
  return target.child;
}

Function _AnimatedTheme_createState$(
  m.Scope scope,
  AnimatedTheme target,
) =>
    target.createState;
