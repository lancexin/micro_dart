// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/sliver_persistent_header.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/scheduler.dart' show TickerProvider;
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/scroll_position.dart';
import 'package:flutter/src/widgets/scrollable.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/sliver_persistent_header.dart',
  {'SliverPersistentHeader.': _SliverPersistentHeader__$},
  {},
  {
    'SliverPersistentHeaderDelegate': m.ClassMirror(
      'SliverPersistentHeaderDelegate',
      {
        '#as': SliverPersistentHeaderDelegate_as$,
        '#is': SliverPersistentHeaderDelegate_is$,
        'minExtent': _SliverPersistentHeaderDelegate_minExtent$,
        'maxExtent': _SliverPersistentHeaderDelegate_maxExtent$,
        'vsync': _SliverPersistentHeaderDelegate_vsync$,
        'snapConfiguration': _SliverPersistentHeaderDelegate_snapConfiguration$,
        'stretchConfiguration':
            _SliverPersistentHeaderDelegate_stretchConfiguration$,
        'showOnScreenConfiguration':
            _SliverPersistentHeaderDelegate_showOnScreenConfiguration$,
        'build': _SliverPersistentHeaderDelegate_build$,
        'shouldRebuild': _SliverPersistentHeaderDelegate_shouldRebuild$,
      },
      {},
    ),
    'SliverPersistentHeader': m.ClassMirror(
      'SliverPersistentHeader',
      {
        '#as': SliverPersistentHeader_as$,
        '#is': SliverPersistentHeader_is$,
        'delegate': _SliverPersistentHeader_delegate$,
        'pinned': _SliverPersistentHeader_pinned$,
        'floating': _SliverPersistentHeader_floating$,
        'build': _SliverPersistentHeader_build$,
        'debugFillProperties': _SliverPersistentHeader_debugFillProperties$,
      },
      {},
    ),
  },
);
Function SliverPersistentHeaderDelegate_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as SliverPersistentHeaderDelegate;
Function SliverPersistentHeaderDelegate_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is SliverPersistentHeaderDelegate;
Function _SliverPersistentHeaderDelegate_minExtent$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    () {
      return target$.minExtent;
    };
Function _SliverPersistentHeaderDelegate_maxExtent$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    () {
      return target$.maxExtent;
    };
Function _SliverPersistentHeaderDelegate_vsync$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    () {
      return target$.vsync;
    };
Function _SliverPersistentHeaderDelegate_snapConfiguration$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    () {
      return target$.snapConfiguration;
    };
Function _SliverPersistentHeaderDelegate_stretchConfiguration$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    () {
      return target$.stretchConfiguration;
    };
Function _SliverPersistentHeaderDelegate_showOnScreenConfiguration$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    () {
      return target$.showOnScreenConfiguration;
    };
Function _SliverPersistentHeaderDelegate_build$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    target$.build;
Function _SliverPersistentHeaderDelegate_shouldRebuild$(
  m.Scope scope$,
  SliverPersistentHeaderDelegate target$,
) =>
    target$.shouldRebuild;
Function SliverPersistentHeader_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as SliverPersistentHeader;
Function SliverPersistentHeader_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is SliverPersistentHeader;
Function _SliverPersistentHeader_delegate$(
  m.Scope scope$,
  SliverPersistentHeader target$,
) =>
    () {
      return target$.delegate;
    };
Function _SliverPersistentHeader_pinned$(
  m.Scope scope$,
  SliverPersistentHeader target$,
) =>
    () {
      return target$.pinned;
    };
Function _SliverPersistentHeader_floating$(
  m.Scope scope$,
  SliverPersistentHeader target$,
) =>
    () {
      return target$.floating;
    };
Function _SliverPersistentHeader__$(m.Scope scope$) => ({
      Key? key,
      required SliverPersistentHeaderDelegate delegate,
      bool? pinned,
      bool? floating,
    }) {
      return SliverPersistentHeader(
        delegate: delegate,
        floating: floating ?? false,
        key: key,
        pinned: pinned ?? false,
      );
    };
Function _SliverPersistentHeader_build$(
  m.Scope scope$,
  SliverPersistentHeader target$,
) =>
    target$.build;
Function _SliverPersistentHeader_debugFillProperties$(
  m.Scope scope$,
  SliverPersistentHeader target$,
) =>
    target$.debugFillProperties;
