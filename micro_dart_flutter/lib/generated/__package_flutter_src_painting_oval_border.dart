// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/oval_border.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/circle_border.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/oval_border.dart',
  {},
  {},
  {
    'OvalBorder': m.ClassMirror(
      'OvalBorder',
      {
        '#as': OvalBorder_as$,
        '#is': OvalBorder_is$,
        'scale': _OvalBorder_scale$,
        'copyWith': _OvalBorder_copyWith$,
        'lerpFrom': _OvalBorder_lerpFrom$,
        'lerpTo': _OvalBorder_lerpTo$,
        'toString': _OvalBorder_toString$,
      },
      {},
    )
  },
);
Function OvalBorder_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as OvalBorder;
Function OvalBorder_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is OvalBorder;
Function _OvalBorder_scale$(
  m.Scope scope,
  OvalBorder target,
) =>
    target.scale;
Function _OvalBorder_copyWith$(
  m.Scope scope,
  OvalBorder target,
) =>
    target.copyWith;
Function _OvalBorder_lerpFrom$(
  m.Scope scope,
  OvalBorder target,
) =>
    target.lerpFrom;
Function _OvalBorder_lerpTo$(
  m.Scope scope,
  OvalBorder target,
) =>
    target.lerpTo;
Function _OvalBorder_toString$(
  m.Scope scope,
  OvalBorder target,
) =>
    target.toString;
