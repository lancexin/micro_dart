// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/text_boundary.dart';
import 'dart:math';
import 'package:characters/characters.dart' show CharacterRange;
import 'package:flutter/src/services/text_layout_metrics.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/text_boundary.dart',
  {},
  {},
  {
    'TextBoundary': m.ClassMirror(
      'TextBoundary',
      {
        'getLeadingTextBoundaryAt': _TextBoundary_getLeadingTextBoundaryAt$,
        'getTrailingTextBoundaryAt': _TextBoundary_getTrailingTextBoundaryAt$,
        'getTextBoundaryAt': _TextBoundary_getTextBoundaryAt$,
      },
      {},
    ),
    'CharacterBoundary': m.ClassMirror(
      'CharacterBoundary',
      {
        'getLeadingTextBoundaryAt':
            _CharacterBoundary_getLeadingTextBoundaryAt$,
        'getTrailingTextBoundaryAt':
            _CharacterBoundary_getTrailingTextBoundaryAt$,
        'getTextBoundaryAt': _CharacterBoundary_getTextBoundaryAt$,
      },
      {},
    ),
    'LineBoundary': m.ClassMirror(
      'LineBoundary',
      {'getTextBoundaryAt': _LineBoundary_getTextBoundaryAt$},
      {},
    ),
    'ParagraphBoundary': m.ClassMirror(
      'ParagraphBoundary',
      {
        'getLeadingTextBoundaryAt':
            _ParagraphBoundary_getLeadingTextBoundaryAt$,
        'getTrailingTextBoundaryAt':
            _ParagraphBoundary_getTrailingTextBoundaryAt$,
      },
      {},
    ),
    'DocumentBoundary': m.ClassMirror(
      'DocumentBoundary',
      {
        'getLeadingTextBoundaryAt': _DocumentBoundary_getLeadingTextBoundaryAt$,
        'getTrailingTextBoundaryAt':
            _DocumentBoundary_getTrailingTextBoundaryAt$,
      },
      {},
    ),
  },
);
Function _TextBoundary_getLeadingTextBoundaryAt$(
  m.Scope scope,
  TextBoundary target,
) =>
    target.getLeadingTextBoundaryAt;
Function _TextBoundary_getTrailingTextBoundaryAt$(
  m.Scope scope,
  TextBoundary target,
) =>
    target.getTrailingTextBoundaryAt;
Function _TextBoundary_getTextBoundaryAt$(
  m.Scope scope,
  TextBoundary target,
) =>
    target.getTextBoundaryAt;
Function _CharacterBoundary_getLeadingTextBoundaryAt$(
  m.Scope scope,
  CharacterBoundary target,
) =>
    target.getLeadingTextBoundaryAt;
Function _CharacterBoundary_getTrailingTextBoundaryAt$(
  m.Scope scope,
  CharacterBoundary target,
) =>
    target.getTrailingTextBoundaryAt;
Function _CharacterBoundary_getTextBoundaryAt$(
  m.Scope scope,
  CharacterBoundary target,
) =>
    target.getTextBoundaryAt;
Function _LineBoundary_getTextBoundaryAt$(
  m.Scope scope,
  LineBoundary target,
) =>
    target.getTextBoundaryAt;
Function _ParagraphBoundary_getLeadingTextBoundaryAt$(
  m.Scope scope,
  ParagraphBoundary target,
) =>
    target.getLeadingTextBoundaryAt;
Function _ParagraphBoundary_getTrailingTextBoundaryAt$(
  m.Scope scope,
  ParagraphBoundary target,
) =>
    target.getTrailingTextBoundaryAt;
Function _DocumentBoundary_getLeadingTextBoundaryAt$(
  m.Scope scope,
  DocumentBoundary target,
) =>
    target.getLeadingTextBoundaryAt;
Function _DocumentBoundary_getTrailingTextBoundaryAt$(
  m.Scope scope,
  DocumentBoundary target,
) =>
    target.getTrailingTextBoundaryAt;
