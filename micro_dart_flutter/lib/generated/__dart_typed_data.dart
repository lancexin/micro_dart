// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'dart:typed_data';

const libraryMirror = m.LibraryMirror(
  'dart:typed_data',
  {
    'Endian.big': _Endian_big$,
    'Endian.little': _Endian_little$,
    'Endian.host': _Endian_host$,
    'ByteData.': _ByteData__$,
    'ByteData.view': _ByteData_view_$,
    'ByteData.sublistView': _ByteData_sublistView_$,
    'Int8List.bytesPerElement': _Int8List_bytesPerElement$,
    'Int8List.': _Int8List__$,
    'Int8List.fromList': _Int8List_fromList_$,
    'Int8List.view': _Int8List_view_$,
    'Int8List.sublistView': _Int8List_sublistView_$,
    'Uint8List.bytesPerElement': _Uint8List_bytesPerElement$,
    'Uint8List.': _Uint8List__$,
    'Uint8List.fromList': _Uint8List_fromList_$,
    'Uint8List.view': _Uint8List_view_$,
    'Uint8List.sublistView': _Uint8List_sublistView_$,
    'Uint8ClampedList.bytesPerElement': _Uint8ClampedList_bytesPerElement$,
    'Uint8ClampedList.': _Uint8ClampedList__$,
    'Uint8ClampedList.fromList': _Uint8ClampedList_fromList_$,
    'Uint8ClampedList.view': _Uint8ClampedList_view_$,
    'Uint8ClampedList.sublistView': _Uint8ClampedList_sublistView_$,
    'Int16List.bytesPerElement': _Int16List_bytesPerElement$,
    'Int16List.': _Int16List__$,
    'Int16List.fromList': _Int16List_fromList_$,
    'Int16List.view': _Int16List_view_$,
    'Int16List.sublistView': _Int16List_sublistView_$,
    'Uint16List.bytesPerElement': _Uint16List_bytesPerElement$,
    'Uint16List.': _Uint16List__$,
    'Uint16List.fromList': _Uint16List_fromList_$,
    'Uint16List.view': _Uint16List_view_$,
    'Uint16List.sublistView': _Uint16List_sublistView_$,
    'Int32List.bytesPerElement': _Int32List_bytesPerElement$,
    'Int32List.': _Int32List__$,
    'Int32List.fromList': _Int32List_fromList_$,
    'Int32List.view': _Int32List_view_$,
    'Int32List.sublistView': _Int32List_sublistView_$,
    'Uint32List.bytesPerElement': _Uint32List_bytesPerElement$,
    'Uint32List.': _Uint32List__$,
    'Uint32List.fromList': _Uint32List_fromList_$,
    'Uint32List.view': _Uint32List_view_$,
    'Uint32List.sublistView': _Uint32List_sublistView_$,
    'Int64List.bytesPerElement': _Int64List_bytesPerElement$,
    'Int64List.': _Int64List__$,
    'Int64List.fromList': _Int64List_fromList_$,
    'Int64List.view': _Int64List_view_$,
    'Int64List.sublistView': _Int64List_sublistView_$,
    'Uint64List.bytesPerElement': _Uint64List_bytesPerElement$,
    'Uint64List.': _Uint64List__$,
    'Uint64List.fromList': _Uint64List_fromList_$,
    'Uint64List.view': _Uint64List_view_$,
    'Uint64List.sublistView': _Uint64List_sublistView_$,
    'Float32List.bytesPerElement': _Float32List_bytesPerElement$,
    'Float32List.': _Float32List__$,
    'Float32List.fromList': _Float32List_fromList_$,
    'Float32List.view': _Float32List_view_$,
    'Float32List.sublistView': _Float32List_sublistView_$,
    'Float64List.bytesPerElement': _Float64List_bytesPerElement$,
    'Float64List.': _Float64List__$,
    'Float64List.fromList': _Float64List_fromList_$,
    'Float64List.view': _Float64List_view_$,
    'Float64List.sublistView': _Float64List_sublistView_$,
    'Float32x4List.bytesPerElement': _Float32x4List_bytesPerElement$,
    'Float32x4List.': _Float32x4List__$,
    'Float32x4List.fromList': _Float32x4List_fromList_$,
    'Float32x4List.view': _Float32x4List_view_$,
    'Float32x4List.sublistView': _Float32x4List_sublistView_$,
    'Int32x4List.bytesPerElement': _Int32x4List_bytesPerElement$,
    'Int32x4List.': _Int32x4List__$,
    'Int32x4List.fromList': _Int32x4List_fromList_$,
    'Int32x4List.view': _Int32x4List_view_$,
    'Int32x4List.sublistView': _Int32x4List_sublistView_$,
    'Float64x2List.bytesPerElement': _Float64x2List_bytesPerElement$,
    'Float64x2List.': _Float64x2List__$,
    'Float64x2List.fromList': _Float64x2List_fromList_$,
    'Float64x2List.view': _Float64x2List_view_$,
    'Float64x2List.sublistView': _Float64x2List_sublistView_$,
    'Float32x4.xxxx': _Float32x4_xxxx$,
    'Float32x4.xxxy': _Float32x4_xxxy$,
    'Float32x4.xxxz': _Float32x4_xxxz$,
    'Float32x4.xxxw': _Float32x4_xxxw$,
    'Float32x4.xxyx': _Float32x4_xxyx$,
    'Float32x4.xxyy': _Float32x4_xxyy$,
    'Float32x4.xxyz': _Float32x4_xxyz$,
    'Float32x4.xxyw': _Float32x4_xxyw$,
    'Float32x4.xxzx': _Float32x4_xxzx$,
    'Float32x4.xxzy': _Float32x4_xxzy$,
    'Float32x4.xxzz': _Float32x4_xxzz$,
    'Float32x4.xxzw': _Float32x4_xxzw$,
    'Float32x4.xxwx': _Float32x4_xxwx$,
    'Float32x4.xxwy': _Float32x4_xxwy$,
    'Float32x4.xxwz': _Float32x4_xxwz$,
    'Float32x4.xxww': _Float32x4_xxww$,
    'Float32x4.xyxx': _Float32x4_xyxx$,
    'Float32x4.xyxy': _Float32x4_xyxy$,
    'Float32x4.xyxz': _Float32x4_xyxz$,
    'Float32x4.xyxw': _Float32x4_xyxw$,
    'Float32x4.xyyx': _Float32x4_xyyx$,
    'Float32x4.xyyy': _Float32x4_xyyy$,
    'Float32x4.xyyz': _Float32x4_xyyz$,
    'Float32x4.xyyw': _Float32x4_xyyw$,
    'Float32x4.xyzx': _Float32x4_xyzx$,
    'Float32x4.xyzy': _Float32x4_xyzy$,
    'Float32x4.xyzz': _Float32x4_xyzz$,
    'Float32x4.xyzw': _Float32x4_xyzw$,
    'Float32x4.xywx': _Float32x4_xywx$,
    'Float32x4.xywy': _Float32x4_xywy$,
    'Float32x4.xywz': _Float32x4_xywz$,
    'Float32x4.xyww': _Float32x4_xyww$,
    'Float32x4.xzxx': _Float32x4_xzxx$,
    'Float32x4.xzxy': _Float32x4_xzxy$,
    'Float32x4.xzxz': _Float32x4_xzxz$,
    'Float32x4.xzxw': _Float32x4_xzxw$,
    'Float32x4.xzyx': _Float32x4_xzyx$,
    'Float32x4.xzyy': _Float32x4_xzyy$,
    'Float32x4.xzyz': _Float32x4_xzyz$,
    'Float32x4.xzyw': _Float32x4_xzyw$,
    'Float32x4.xzzx': _Float32x4_xzzx$,
    'Float32x4.xzzy': _Float32x4_xzzy$,
    'Float32x4.xzzz': _Float32x4_xzzz$,
    'Float32x4.xzzw': _Float32x4_xzzw$,
    'Float32x4.xzwx': _Float32x4_xzwx$,
    'Float32x4.xzwy': _Float32x4_xzwy$,
    'Float32x4.xzwz': _Float32x4_xzwz$,
    'Float32x4.xzww': _Float32x4_xzww$,
    'Float32x4.xwxx': _Float32x4_xwxx$,
    'Float32x4.xwxy': _Float32x4_xwxy$,
    'Float32x4.xwxz': _Float32x4_xwxz$,
    'Float32x4.xwxw': _Float32x4_xwxw$,
    'Float32x4.xwyx': _Float32x4_xwyx$,
    'Float32x4.xwyy': _Float32x4_xwyy$,
    'Float32x4.xwyz': _Float32x4_xwyz$,
    'Float32x4.xwyw': _Float32x4_xwyw$,
    'Float32x4.xwzx': _Float32x4_xwzx$,
    'Float32x4.xwzy': _Float32x4_xwzy$,
    'Float32x4.xwzz': _Float32x4_xwzz$,
    'Float32x4.xwzw': _Float32x4_xwzw$,
    'Float32x4.xwwx': _Float32x4_xwwx$,
    'Float32x4.xwwy': _Float32x4_xwwy$,
    'Float32x4.xwwz': _Float32x4_xwwz$,
    'Float32x4.xwww': _Float32x4_xwww$,
    'Float32x4.yxxx': _Float32x4_yxxx$,
    'Float32x4.yxxy': _Float32x4_yxxy$,
    'Float32x4.yxxz': _Float32x4_yxxz$,
    'Float32x4.yxxw': _Float32x4_yxxw$,
    'Float32x4.yxyx': _Float32x4_yxyx$,
    'Float32x4.yxyy': _Float32x4_yxyy$,
    'Float32x4.yxyz': _Float32x4_yxyz$,
    'Float32x4.yxyw': _Float32x4_yxyw$,
    'Float32x4.yxzx': _Float32x4_yxzx$,
    'Float32x4.yxzy': _Float32x4_yxzy$,
    'Float32x4.yxzz': _Float32x4_yxzz$,
    'Float32x4.yxzw': _Float32x4_yxzw$,
    'Float32x4.yxwx': _Float32x4_yxwx$,
    'Float32x4.yxwy': _Float32x4_yxwy$,
    'Float32x4.yxwz': _Float32x4_yxwz$,
    'Float32x4.yxww': _Float32x4_yxww$,
    'Float32x4.yyxx': _Float32x4_yyxx$,
    'Float32x4.yyxy': _Float32x4_yyxy$,
    'Float32x4.yyxz': _Float32x4_yyxz$,
    'Float32x4.yyxw': _Float32x4_yyxw$,
    'Float32x4.yyyx': _Float32x4_yyyx$,
    'Float32x4.yyyy': _Float32x4_yyyy$,
    'Float32x4.yyyz': _Float32x4_yyyz$,
    'Float32x4.yyyw': _Float32x4_yyyw$,
    'Float32x4.yyzx': _Float32x4_yyzx$,
    'Float32x4.yyzy': _Float32x4_yyzy$,
    'Float32x4.yyzz': _Float32x4_yyzz$,
    'Float32x4.yyzw': _Float32x4_yyzw$,
    'Float32x4.yywx': _Float32x4_yywx$,
    'Float32x4.yywy': _Float32x4_yywy$,
    'Float32x4.yywz': _Float32x4_yywz$,
    'Float32x4.yyww': _Float32x4_yyww$,
    'Float32x4.yzxx': _Float32x4_yzxx$,
    'Float32x4.yzxy': _Float32x4_yzxy$,
    'Float32x4.yzxz': _Float32x4_yzxz$,
    'Float32x4.yzxw': _Float32x4_yzxw$,
    'Float32x4.yzyx': _Float32x4_yzyx$,
    'Float32x4.yzyy': _Float32x4_yzyy$,
    'Float32x4.yzyz': _Float32x4_yzyz$,
    'Float32x4.yzyw': _Float32x4_yzyw$,
    'Float32x4.yzzx': _Float32x4_yzzx$,
    'Float32x4.yzzy': _Float32x4_yzzy$,
    'Float32x4.yzzz': _Float32x4_yzzz$,
    'Float32x4.yzzw': _Float32x4_yzzw$,
    'Float32x4.yzwx': _Float32x4_yzwx$,
    'Float32x4.yzwy': _Float32x4_yzwy$,
    'Float32x4.yzwz': _Float32x4_yzwz$,
    'Float32x4.yzww': _Float32x4_yzww$,
    'Float32x4.ywxx': _Float32x4_ywxx$,
    'Float32x4.ywxy': _Float32x4_ywxy$,
    'Float32x4.ywxz': _Float32x4_ywxz$,
    'Float32x4.ywxw': _Float32x4_ywxw$,
    'Float32x4.ywyx': _Float32x4_ywyx$,
    'Float32x4.ywyy': _Float32x4_ywyy$,
    'Float32x4.ywyz': _Float32x4_ywyz$,
    'Float32x4.ywyw': _Float32x4_ywyw$,
    'Float32x4.ywzx': _Float32x4_ywzx$,
    'Float32x4.ywzy': _Float32x4_ywzy$,
    'Float32x4.ywzz': _Float32x4_ywzz$,
    'Float32x4.ywzw': _Float32x4_ywzw$,
    'Float32x4.ywwx': _Float32x4_ywwx$,
    'Float32x4.ywwy': _Float32x4_ywwy$,
    'Float32x4.ywwz': _Float32x4_ywwz$,
    'Float32x4.ywww': _Float32x4_ywww$,
    'Float32x4.zxxx': _Float32x4_zxxx$,
    'Float32x4.zxxy': _Float32x4_zxxy$,
    'Float32x4.zxxz': _Float32x4_zxxz$,
    'Float32x4.zxxw': _Float32x4_zxxw$,
    'Float32x4.zxyx': _Float32x4_zxyx$,
    'Float32x4.zxyy': _Float32x4_zxyy$,
    'Float32x4.zxyz': _Float32x4_zxyz$,
    'Float32x4.zxyw': _Float32x4_zxyw$,
    'Float32x4.zxzx': _Float32x4_zxzx$,
    'Float32x4.zxzy': _Float32x4_zxzy$,
    'Float32x4.zxzz': _Float32x4_zxzz$,
    'Float32x4.zxzw': _Float32x4_zxzw$,
    'Float32x4.zxwx': _Float32x4_zxwx$,
    'Float32x4.zxwy': _Float32x4_zxwy$,
    'Float32x4.zxwz': _Float32x4_zxwz$,
    'Float32x4.zxww': _Float32x4_zxww$,
    'Float32x4.zyxx': _Float32x4_zyxx$,
    'Float32x4.zyxy': _Float32x4_zyxy$,
    'Float32x4.zyxz': _Float32x4_zyxz$,
    'Float32x4.zyxw': _Float32x4_zyxw$,
    'Float32x4.zyyx': _Float32x4_zyyx$,
    'Float32x4.zyyy': _Float32x4_zyyy$,
    'Float32x4.zyyz': _Float32x4_zyyz$,
    'Float32x4.zyyw': _Float32x4_zyyw$,
    'Float32x4.zyzx': _Float32x4_zyzx$,
    'Float32x4.zyzy': _Float32x4_zyzy$,
    'Float32x4.zyzz': _Float32x4_zyzz$,
    'Float32x4.zyzw': _Float32x4_zyzw$,
    'Float32x4.zywx': _Float32x4_zywx$,
    'Float32x4.zywy': _Float32x4_zywy$,
    'Float32x4.zywz': _Float32x4_zywz$,
    'Float32x4.zyww': _Float32x4_zyww$,
    'Float32x4.zzxx': _Float32x4_zzxx$,
    'Float32x4.zzxy': _Float32x4_zzxy$,
    'Float32x4.zzxz': _Float32x4_zzxz$,
    'Float32x4.zzxw': _Float32x4_zzxw$,
    'Float32x4.zzyx': _Float32x4_zzyx$,
    'Float32x4.zzyy': _Float32x4_zzyy$,
    'Float32x4.zzyz': _Float32x4_zzyz$,
    'Float32x4.zzyw': _Float32x4_zzyw$,
    'Float32x4.zzzx': _Float32x4_zzzx$,
    'Float32x4.zzzy': _Float32x4_zzzy$,
    'Float32x4.zzzz': _Float32x4_zzzz$,
    'Float32x4.zzzw': _Float32x4_zzzw$,
    'Float32x4.zzwx': _Float32x4_zzwx$,
    'Float32x4.zzwy': _Float32x4_zzwy$,
    'Float32x4.zzwz': _Float32x4_zzwz$,
    'Float32x4.zzww': _Float32x4_zzww$,
    'Float32x4.zwxx': _Float32x4_zwxx$,
    'Float32x4.zwxy': _Float32x4_zwxy$,
    'Float32x4.zwxz': _Float32x4_zwxz$,
    'Float32x4.zwxw': _Float32x4_zwxw$,
    'Float32x4.zwyx': _Float32x4_zwyx$,
    'Float32x4.zwyy': _Float32x4_zwyy$,
    'Float32x4.zwyz': _Float32x4_zwyz$,
    'Float32x4.zwyw': _Float32x4_zwyw$,
    'Float32x4.zwzx': _Float32x4_zwzx$,
    'Float32x4.zwzy': _Float32x4_zwzy$,
    'Float32x4.zwzz': _Float32x4_zwzz$,
    'Float32x4.zwzw': _Float32x4_zwzw$,
    'Float32x4.zwwx': _Float32x4_zwwx$,
    'Float32x4.zwwy': _Float32x4_zwwy$,
    'Float32x4.zwwz': _Float32x4_zwwz$,
    'Float32x4.zwww': _Float32x4_zwww$,
    'Float32x4.wxxx': _Float32x4_wxxx$,
    'Float32x4.wxxy': _Float32x4_wxxy$,
    'Float32x4.wxxz': _Float32x4_wxxz$,
    'Float32x4.wxxw': _Float32x4_wxxw$,
    'Float32x4.wxyx': _Float32x4_wxyx$,
    'Float32x4.wxyy': _Float32x4_wxyy$,
    'Float32x4.wxyz': _Float32x4_wxyz$,
    'Float32x4.wxyw': _Float32x4_wxyw$,
    'Float32x4.wxzx': _Float32x4_wxzx$,
    'Float32x4.wxzy': _Float32x4_wxzy$,
    'Float32x4.wxzz': _Float32x4_wxzz$,
    'Float32x4.wxzw': _Float32x4_wxzw$,
    'Float32x4.wxwx': _Float32x4_wxwx$,
    'Float32x4.wxwy': _Float32x4_wxwy$,
    'Float32x4.wxwz': _Float32x4_wxwz$,
    'Float32x4.wxww': _Float32x4_wxww$,
    'Float32x4.wyxx': _Float32x4_wyxx$,
    'Float32x4.wyxy': _Float32x4_wyxy$,
    'Float32x4.wyxz': _Float32x4_wyxz$,
    'Float32x4.wyxw': _Float32x4_wyxw$,
    'Float32x4.wyyx': _Float32x4_wyyx$,
    'Float32x4.wyyy': _Float32x4_wyyy$,
    'Float32x4.wyyz': _Float32x4_wyyz$,
    'Float32x4.wyyw': _Float32x4_wyyw$,
    'Float32x4.wyzx': _Float32x4_wyzx$,
    'Float32x4.wyzy': _Float32x4_wyzy$,
    'Float32x4.wyzz': _Float32x4_wyzz$,
    'Float32x4.wyzw': _Float32x4_wyzw$,
    'Float32x4.wywx': _Float32x4_wywx$,
    'Float32x4.wywy': _Float32x4_wywy$,
    'Float32x4.wywz': _Float32x4_wywz$,
    'Float32x4.wyww': _Float32x4_wyww$,
    'Float32x4.wzxx': _Float32x4_wzxx$,
    'Float32x4.wzxy': _Float32x4_wzxy$,
    'Float32x4.wzxz': _Float32x4_wzxz$,
    'Float32x4.wzxw': _Float32x4_wzxw$,
    'Float32x4.wzyx': _Float32x4_wzyx$,
    'Float32x4.wzyy': _Float32x4_wzyy$,
    'Float32x4.wzyz': _Float32x4_wzyz$,
    'Float32x4.wzyw': _Float32x4_wzyw$,
    'Float32x4.wzzx': _Float32x4_wzzx$,
    'Float32x4.wzzy': _Float32x4_wzzy$,
    'Float32x4.wzzz': _Float32x4_wzzz$,
    'Float32x4.wzzw': _Float32x4_wzzw$,
    'Float32x4.wzwx': _Float32x4_wzwx$,
    'Float32x4.wzwy': _Float32x4_wzwy$,
    'Float32x4.wzwz': _Float32x4_wzwz$,
    'Float32x4.wzww': _Float32x4_wzww$,
    'Float32x4.wwxx': _Float32x4_wwxx$,
    'Float32x4.wwxy': _Float32x4_wwxy$,
    'Float32x4.wwxz': _Float32x4_wwxz$,
    'Float32x4.wwxw': _Float32x4_wwxw$,
    'Float32x4.wwyx': _Float32x4_wwyx$,
    'Float32x4.wwyy': _Float32x4_wwyy$,
    'Float32x4.wwyz': _Float32x4_wwyz$,
    'Float32x4.wwyw': _Float32x4_wwyw$,
    'Float32x4.wwzx': _Float32x4_wwzx$,
    'Float32x4.wwzy': _Float32x4_wwzy$,
    'Float32x4.wwzz': _Float32x4_wwzz$,
    'Float32x4.wwzw': _Float32x4_wwzw$,
    'Float32x4.wwwx': _Float32x4_wwwx$,
    'Float32x4.wwwy': _Float32x4_wwwy$,
    'Float32x4.wwwz': _Float32x4_wwwz$,
    'Float32x4.wwww': _Float32x4_wwww$,
    'Float32x4.': _Float32x4__$,
    'Float32x4.splat': _Float32x4_splat_$,
    'Float32x4.zero': _Float32x4_zero_$,
    'Float32x4.fromInt32x4Bits': _Float32x4_fromInt32x4Bits_$,
    'Float32x4.fromFloat64x2': _Float32x4_fromFloat64x2_$,
    'Int32x4.xxxx': _Int32x4_xxxx$,
    'Int32x4.xxxy': _Int32x4_xxxy$,
    'Int32x4.xxxz': _Int32x4_xxxz$,
    'Int32x4.xxxw': _Int32x4_xxxw$,
    'Int32x4.xxyx': _Int32x4_xxyx$,
    'Int32x4.xxyy': _Int32x4_xxyy$,
    'Int32x4.xxyz': _Int32x4_xxyz$,
    'Int32x4.xxyw': _Int32x4_xxyw$,
    'Int32x4.xxzx': _Int32x4_xxzx$,
    'Int32x4.xxzy': _Int32x4_xxzy$,
    'Int32x4.xxzz': _Int32x4_xxzz$,
    'Int32x4.xxzw': _Int32x4_xxzw$,
    'Int32x4.xxwx': _Int32x4_xxwx$,
    'Int32x4.xxwy': _Int32x4_xxwy$,
    'Int32x4.xxwz': _Int32x4_xxwz$,
    'Int32x4.xxww': _Int32x4_xxww$,
    'Int32x4.xyxx': _Int32x4_xyxx$,
    'Int32x4.xyxy': _Int32x4_xyxy$,
    'Int32x4.xyxz': _Int32x4_xyxz$,
    'Int32x4.xyxw': _Int32x4_xyxw$,
    'Int32x4.xyyx': _Int32x4_xyyx$,
    'Int32x4.xyyy': _Int32x4_xyyy$,
    'Int32x4.xyyz': _Int32x4_xyyz$,
    'Int32x4.xyyw': _Int32x4_xyyw$,
    'Int32x4.xyzx': _Int32x4_xyzx$,
    'Int32x4.xyzy': _Int32x4_xyzy$,
    'Int32x4.xyzz': _Int32x4_xyzz$,
    'Int32x4.xyzw': _Int32x4_xyzw$,
    'Int32x4.xywx': _Int32x4_xywx$,
    'Int32x4.xywy': _Int32x4_xywy$,
    'Int32x4.xywz': _Int32x4_xywz$,
    'Int32x4.xyww': _Int32x4_xyww$,
    'Int32x4.xzxx': _Int32x4_xzxx$,
    'Int32x4.xzxy': _Int32x4_xzxy$,
    'Int32x4.xzxz': _Int32x4_xzxz$,
    'Int32x4.xzxw': _Int32x4_xzxw$,
    'Int32x4.xzyx': _Int32x4_xzyx$,
    'Int32x4.xzyy': _Int32x4_xzyy$,
    'Int32x4.xzyz': _Int32x4_xzyz$,
    'Int32x4.xzyw': _Int32x4_xzyw$,
    'Int32x4.xzzx': _Int32x4_xzzx$,
    'Int32x4.xzzy': _Int32x4_xzzy$,
    'Int32x4.xzzz': _Int32x4_xzzz$,
    'Int32x4.xzzw': _Int32x4_xzzw$,
    'Int32x4.xzwx': _Int32x4_xzwx$,
    'Int32x4.xzwy': _Int32x4_xzwy$,
    'Int32x4.xzwz': _Int32x4_xzwz$,
    'Int32x4.xzww': _Int32x4_xzww$,
    'Int32x4.xwxx': _Int32x4_xwxx$,
    'Int32x4.xwxy': _Int32x4_xwxy$,
    'Int32x4.xwxz': _Int32x4_xwxz$,
    'Int32x4.xwxw': _Int32x4_xwxw$,
    'Int32x4.xwyx': _Int32x4_xwyx$,
    'Int32x4.xwyy': _Int32x4_xwyy$,
    'Int32x4.xwyz': _Int32x4_xwyz$,
    'Int32x4.xwyw': _Int32x4_xwyw$,
    'Int32x4.xwzx': _Int32x4_xwzx$,
    'Int32x4.xwzy': _Int32x4_xwzy$,
    'Int32x4.xwzz': _Int32x4_xwzz$,
    'Int32x4.xwzw': _Int32x4_xwzw$,
    'Int32x4.xwwx': _Int32x4_xwwx$,
    'Int32x4.xwwy': _Int32x4_xwwy$,
    'Int32x4.xwwz': _Int32x4_xwwz$,
    'Int32x4.xwww': _Int32x4_xwww$,
    'Int32x4.yxxx': _Int32x4_yxxx$,
    'Int32x4.yxxy': _Int32x4_yxxy$,
    'Int32x4.yxxz': _Int32x4_yxxz$,
    'Int32x4.yxxw': _Int32x4_yxxw$,
    'Int32x4.yxyx': _Int32x4_yxyx$,
    'Int32x4.yxyy': _Int32x4_yxyy$,
    'Int32x4.yxyz': _Int32x4_yxyz$,
    'Int32x4.yxyw': _Int32x4_yxyw$,
    'Int32x4.yxzx': _Int32x4_yxzx$,
    'Int32x4.yxzy': _Int32x4_yxzy$,
    'Int32x4.yxzz': _Int32x4_yxzz$,
    'Int32x4.yxzw': _Int32x4_yxzw$,
    'Int32x4.yxwx': _Int32x4_yxwx$,
    'Int32x4.yxwy': _Int32x4_yxwy$,
    'Int32x4.yxwz': _Int32x4_yxwz$,
    'Int32x4.yxww': _Int32x4_yxww$,
    'Int32x4.yyxx': _Int32x4_yyxx$,
    'Int32x4.yyxy': _Int32x4_yyxy$,
    'Int32x4.yyxz': _Int32x4_yyxz$,
    'Int32x4.yyxw': _Int32x4_yyxw$,
    'Int32x4.yyyx': _Int32x4_yyyx$,
    'Int32x4.yyyy': _Int32x4_yyyy$,
    'Int32x4.yyyz': _Int32x4_yyyz$,
    'Int32x4.yyyw': _Int32x4_yyyw$,
    'Int32x4.yyzx': _Int32x4_yyzx$,
    'Int32x4.yyzy': _Int32x4_yyzy$,
    'Int32x4.yyzz': _Int32x4_yyzz$,
    'Int32x4.yyzw': _Int32x4_yyzw$,
    'Int32x4.yywx': _Int32x4_yywx$,
    'Int32x4.yywy': _Int32x4_yywy$,
    'Int32x4.yywz': _Int32x4_yywz$,
    'Int32x4.yyww': _Int32x4_yyww$,
    'Int32x4.yzxx': _Int32x4_yzxx$,
    'Int32x4.yzxy': _Int32x4_yzxy$,
    'Int32x4.yzxz': _Int32x4_yzxz$,
    'Int32x4.yzxw': _Int32x4_yzxw$,
    'Int32x4.yzyx': _Int32x4_yzyx$,
    'Int32x4.yzyy': _Int32x4_yzyy$,
    'Int32x4.yzyz': _Int32x4_yzyz$,
    'Int32x4.yzyw': _Int32x4_yzyw$,
    'Int32x4.yzzx': _Int32x4_yzzx$,
    'Int32x4.yzzy': _Int32x4_yzzy$,
    'Int32x4.yzzz': _Int32x4_yzzz$,
    'Int32x4.yzzw': _Int32x4_yzzw$,
    'Int32x4.yzwx': _Int32x4_yzwx$,
    'Int32x4.yzwy': _Int32x4_yzwy$,
    'Int32x4.yzwz': _Int32x4_yzwz$,
    'Int32x4.yzww': _Int32x4_yzww$,
    'Int32x4.ywxx': _Int32x4_ywxx$,
    'Int32x4.ywxy': _Int32x4_ywxy$,
    'Int32x4.ywxz': _Int32x4_ywxz$,
    'Int32x4.ywxw': _Int32x4_ywxw$,
    'Int32x4.ywyx': _Int32x4_ywyx$,
    'Int32x4.ywyy': _Int32x4_ywyy$,
    'Int32x4.ywyz': _Int32x4_ywyz$,
    'Int32x4.ywyw': _Int32x4_ywyw$,
    'Int32x4.ywzx': _Int32x4_ywzx$,
    'Int32x4.ywzy': _Int32x4_ywzy$,
    'Int32x4.ywzz': _Int32x4_ywzz$,
    'Int32x4.ywzw': _Int32x4_ywzw$,
    'Int32x4.ywwx': _Int32x4_ywwx$,
    'Int32x4.ywwy': _Int32x4_ywwy$,
    'Int32x4.ywwz': _Int32x4_ywwz$,
    'Int32x4.ywww': _Int32x4_ywww$,
    'Int32x4.zxxx': _Int32x4_zxxx$,
    'Int32x4.zxxy': _Int32x4_zxxy$,
    'Int32x4.zxxz': _Int32x4_zxxz$,
    'Int32x4.zxxw': _Int32x4_zxxw$,
    'Int32x4.zxyx': _Int32x4_zxyx$,
    'Int32x4.zxyy': _Int32x4_zxyy$,
    'Int32x4.zxyz': _Int32x4_zxyz$,
    'Int32x4.zxyw': _Int32x4_zxyw$,
    'Int32x4.zxzx': _Int32x4_zxzx$,
    'Int32x4.zxzy': _Int32x4_zxzy$,
    'Int32x4.zxzz': _Int32x4_zxzz$,
    'Int32x4.zxzw': _Int32x4_zxzw$,
    'Int32x4.zxwx': _Int32x4_zxwx$,
    'Int32x4.zxwy': _Int32x4_zxwy$,
    'Int32x4.zxwz': _Int32x4_zxwz$,
    'Int32x4.zxww': _Int32x4_zxww$,
    'Int32x4.zyxx': _Int32x4_zyxx$,
    'Int32x4.zyxy': _Int32x4_zyxy$,
    'Int32x4.zyxz': _Int32x4_zyxz$,
    'Int32x4.zyxw': _Int32x4_zyxw$,
    'Int32x4.zyyx': _Int32x4_zyyx$,
    'Int32x4.zyyy': _Int32x4_zyyy$,
    'Int32x4.zyyz': _Int32x4_zyyz$,
    'Int32x4.zyyw': _Int32x4_zyyw$,
    'Int32x4.zyzx': _Int32x4_zyzx$,
    'Int32x4.zyzy': _Int32x4_zyzy$,
    'Int32x4.zyzz': _Int32x4_zyzz$,
    'Int32x4.zyzw': _Int32x4_zyzw$,
    'Int32x4.zywx': _Int32x4_zywx$,
    'Int32x4.zywy': _Int32x4_zywy$,
    'Int32x4.zywz': _Int32x4_zywz$,
    'Int32x4.zyww': _Int32x4_zyww$,
    'Int32x4.zzxx': _Int32x4_zzxx$,
    'Int32x4.zzxy': _Int32x4_zzxy$,
    'Int32x4.zzxz': _Int32x4_zzxz$,
    'Int32x4.zzxw': _Int32x4_zzxw$,
    'Int32x4.zzyx': _Int32x4_zzyx$,
    'Int32x4.zzyy': _Int32x4_zzyy$,
    'Int32x4.zzyz': _Int32x4_zzyz$,
    'Int32x4.zzyw': _Int32x4_zzyw$,
    'Int32x4.zzzx': _Int32x4_zzzx$,
    'Int32x4.zzzy': _Int32x4_zzzy$,
    'Int32x4.zzzz': _Int32x4_zzzz$,
    'Int32x4.zzzw': _Int32x4_zzzw$,
    'Int32x4.zzwx': _Int32x4_zzwx$,
    'Int32x4.zzwy': _Int32x4_zzwy$,
    'Int32x4.zzwz': _Int32x4_zzwz$,
    'Int32x4.zzww': _Int32x4_zzww$,
    'Int32x4.zwxx': _Int32x4_zwxx$,
    'Int32x4.zwxy': _Int32x4_zwxy$,
    'Int32x4.zwxz': _Int32x4_zwxz$,
    'Int32x4.zwxw': _Int32x4_zwxw$,
    'Int32x4.zwyx': _Int32x4_zwyx$,
    'Int32x4.zwyy': _Int32x4_zwyy$,
    'Int32x4.zwyz': _Int32x4_zwyz$,
    'Int32x4.zwyw': _Int32x4_zwyw$,
    'Int32x4.zwzx': _Int32x4_zwzx$,
    'Int32x4.zwzy': _Int32x4_zwzy$,
    'Int32x4.zwzz': _Int32x4_zwzz$,
    'Int32x4.zwzw': _Int32x4_zwzw$,
    'Int32x4.zwwx': _Int32x4_zwwx$,
    'Int32x4.zwwy': _Int32x4_zwwy$,
    'Int32x4.zwwz': _Int32x4_zwwz$,
    'Int32x4.zwww': _Int32x4_zwww$,
    'Int32x4.wxxx': _Int32x4_wxxx$,
    'Int32x4.wxxy': _Int32x4_wxxy$,
    'Int32x4.wxxz': _Int32x4_wxxz$,
    'Int32x4.wxxw': _Int32x4_wxxw$,
    'Int32x4.wxyx': _Int32x4_wxyx$,
    'Int32x4.wxyy': _Int32x4_wxyy$,
    'Int32x4.wxyz': _Int32x4_wxyz$,
    'Int32x4.wxyw': _Int32x4_wxyw$,
    'Int32x4.wxzx': _Int32x4_wxzx$,
    'Int32x4.wxzy': _Int32x4_wxzy$,
    'Int32x4.wxzz': _Int32x4_wxzz$,
    'Int32x4.wxzw': _Int32x4_wxzw$,
    'Int32x4.wxwx': _Int32x4_wxwx$,
    'Int32x4.wxwy': _Int32x4_wxwy$,
    'Int32x4.wxwz': _Int32x4_wxwz$,
    'Int32x4.wxww': _Int32x4_wxww$,
    'Int32x4.wyxx': _Int32x4_wyxx$,
    'Int32x4.wyxy': _Int32x4_wyxy$,
    'Int32x4.wyxz': _Int32x4_wyxz$,
    'Int32x4.wyxw': _Int32x4_wyxw$,
    'Int32x4.wyyx': _Int32x4_wyyx$,
    'Int32x4.wyyy': _Int32x4_wyyy$,
    'Int32x4.wyyz': _Int32x4_wyyz$,
    'Int32x4.wyyw': _Int32x4_wyyw$,
    'Int32x4.wyzx': _Int32x4_wyzx$,
    'Int32x4.wyzy': _Int32x4_wyzy$,
    'Int32x4.wyzz': _Int32x4_wyzz$,
    'Int32x4.wyzw': _Int32x4_wyzw$,
    'Int32x4.wywx': _Int32x4_wywx$,
    'Int32x4.wywy': _Int32x4_wywy$,
    'Int32x4.wywz': _Int32x4_wywz$,
    'Int32x4.wyww': _Int32x4_wyww$,
    'Int32x4.wzxx': _Int32x4_wzxx$,
    'Int32x4.wzxy': _Int32x4_wzxy$,
    'Int32x4.wzxz': _Int32x4_wzxz$,
    'Int32x4.wzxw': _Int32x4_wzxw$,
    'Int32x4.wzyx': _Int32x4_wzyx$,
    'Int32x4.wzyy': _Int32x4_wzyy$,
    'Int32x4.wzyz': _Int32x4_wzyz$,
    'Int32x4.wzyw': _Int32x4_wzyw$,
    'Int32x4.wzzx': _Int32x4_wzzx$,
    'Int32x4.wzzy': _Int32x4_wzzy$,
    'Int32x4.wzzz': _Int32x4_wzzz$,
    'Int32x4.wzzw': _Int32x4_wzzw$,
    'Int32x4.wzwx': _Int32x4_wzwx$,
    'Int32x4.wzwy': _Int32x4_wzwy$,
    'Int32x4.wzwz': _Int32x4_wzwz$,
    'Int32x4.wzww': _Int32x4_wzww$,
    'Int32x4.wwxx': _Int32x4_wwxx$,
    'Int32x4.wwxy': _Int32x4_wwxy$,
    'Int32x4.wwxz': _Int32x4_wwxz$,
    'Int32x4.wwxw': _Int32x4_wwxw$,
    'Int32x4.wwyx': _Int32x4_wwyx$,
    'Int32x4.wwyy': _Int32x4_wwyy$,
    'Int32x4.wwyz': _Int32x4_wwyz$,
    'Int32x4.wwyw': _Int32x4_wwyw$,
    'Int32x4.wwzx': _Int32x4_wwzx$,
    'Int32x4.wwzy': _Int32x4_wwzy$,
    'Int32x4.wwzz': _Int32x4_wwzz$,
    'Int32x4.wwzw': _Int32x4_wwzw$,
    'Int32x4.wwwx': _Int32x4_wwwx$,
    'Int32x4.wwwy': _Int32x4_wwwy$,
    'Int32x4.wwwz': _Int32x4_wwwz$,
    'Int32x4.wwww': _Int32x4_wwww$,
    'Int32x4.': _Int32x4__$,
    'Int32x4.bool': _Int32x4_bool_$,
    'Int32x4.fromFloat32x4Bits': _Int32x4_fromFloat32x4Bits_$,
    'Float64x2.': _Float64x2__$,
    'Float64x2.splat': _Float64x2_splat_$,
    'Float64x2.zero': _Float64x2_zero_$,
    'Float64x2.fromFloat32x4': _Float64x2_fromFloat32x4_$,
    'UnmodifiableByteBufferView.': _UnmodifiableByteBufferView__$,
    'UnmodifiableByteDataView.': _UnmodifiableByteDataView__$,
    'UnmodifiableUint8ListView.': _UnmodifiableUint8ListView__$,
    'UnmodifiableInt8ListView.': _UnmodifiableInt8ListView__$,
    'UnmodifiableUint8ClampedListView.': _UnmodifiableUint8ClampedListView__$,
    'UnmodifiableUint16ListView.': _UnmodifiableUint16ListView__$,
    'UnmodifiableInt16ListView.': _UnmodifiableInt16ListView__$,
    'UnmodifiableUint32ListView.': _UnmodifiableUint32ListView__$,
    'UnmodifiableInt32ListView.': _UnmodifiableInt32ListView__$,
    'UnmodifiableUint64ListView.': _UnmodifiableUint64ListView__$,
    'UnmodifiableInt64ListView.': _UnmodifiableInt64ListView__$,
    'UnmodifiableInt32x4ListView.': _UnmodifiableInt32x4ListView__$,
    'UnmodifiableFloat32x4ListView.': _UnmodifiableFloat32x4ListView__$,
    'UnmodifiableFloat64x2ListView.': _UnmodifiableFloat64x2ListView__$,
    'UnmodifiableFloat32ListView.': _UnmodifiableFloat32ListView__$,
    'UnmodifiableFloat64ListView.': _UnmodifiableFloat64ListView__$,
  },
  {},
  {
    'ByteBuffer': m.ClassMirror(
      'ByteBuffer',
      {
        '#as': ByteBuffer_as$,
        '#is': ByteBuffer_is$,
        'lengthInBytes': _ByteBuffer_lengthInBytes$,
        'asUint8List': _ByteBuffer_asUint8List$,
        'asInt8List': _ByteBuffer_asInt8List$,
        'asUint8ClampedList': _ByteBuffer_asUint8ClampedList$,
        'asUint16List': _ByteBuffer_asUint16List$,
        'asInt16List': _ByteBuffer_asInt16List$,
        'asUint32List': _ByteBuffer_asUint32List$,
        'asInt32List': _ByteBuffer_asInt32List$,
        'asUint64List': _ByteBuffer_asUint64List$,
        'asInt64List': _ByteBuffer_asInt64List$,
        'asInt32x4List': _ByteBuffer_asInt32x4List$,
        'asFloat32List': _ByteBuffer_asFloat32List$,
        'asFloat64List': _ByteBuffer_asFloat64List$,
        'asFloat32x4List': _ByteBuffer_asFloat32x4List$,
        'asFloat64x2List': _ByteBuffer_asFloat64x2List$,
        'asByteData': _ByteBuffer_asByteData$,
      },
      {},
    ),
    'TypedData': m.ClassMirror(
      'TypedData',
      {
        '#as': TypedData_as$,
        '#is': TypedData_is$,
        'elementSizeInBytes': _TypedData_elementSizeInBytes$,
        'offsetInBytes': _TypedData_offsetInBytes$,
        'lengthInBytes': _TypedData_lengthInBytes$,
        'buffer': _TypedData_buffer$,
      },
      {},
    ),
    'Endian': m.ClassMirror(
      'Endian',
      {
        '#as': Endian_as$,
        '#is': Endian_is$,
      },
      {},
    ),
    'ByteData': m.ClassMirror(
      'ByteData',
      {
        '#as': ByteData_as$,
        '#is': ByteData_is$,
        'getInt8': _ByteData_getInt8$,
        'setInt8': _ByteData_setInt8$,
        'getUint8': _ByteData_getUint8$,
        'setUint8': _ByteData_setUint8$,
        'getInt16': _ByteData_getInt16$,
        'setInt16': _ByteData_setInt16$,
        'getUint16': _ByteData_getUint16$,
        'setUint16': _ByteData_setUint16$,
        'getInt32': _ByteData_getInt32$,
        'setInt32': _ByteData_setInt32$,
        'getUint32': _ByteData_getUint32$,
        'setUint32': _ByteData_setUint32$,
        'getInt64': _ByteData_getInt64$,
        'setInt64': _ByteData_setInt64$,
        'getUint64': _ByteData_getUint64$,
        'setUint64': _ByteData_setUint64$,
        'getFloat32': _ByteData_getFloat32$,
        'setFloat32': _ByteData_setFloat32$,
        'getFloat64': _ByteData_getFloat64$,
        'setFloat64': _ByteData_setFloat64$,
      },
      {},
    ),
    'Int8List': m.ClassMirror(
      'Int8List',
      {
        '#as': Int8List_as$,
        '#is': Int8List_is$,
        'sublist': _Int8List_sublist$,
      },
      {},
    ),
    'Uint8List': m.ClassMirror(
      'Uint8List',
      {
        '#as': Uint8List_as$,
        '#is': Uint8List_is$,
        '+': _Uint8List_plus$$,
        'sublist': _Uint8List_sublist$,
      },
      {},
    ),
    'Uint8ClampedList': m.ClassMirror(
      'Uint8ClampedList',
      {
        '#as': Uint8ClampedList_as$,
        '#is': Uint8ClampedList_is$,
        'sublist': _Uint8ClampedList_sublist$,
      },
      {},
    ),
    'Int16List': m.ClassMirror(
      'Int16List',
      {
        '#as': Int16List_as$,
        '#is': Int16List_is$,
        'sublist': _Int16List_sublist$,
      },
      {},
    ),
    'Uint16List': m.ClassMirror(
      'Uint16List',
      {
        '#as': Uint16List_as$,
        '#is': Uint16List_is$,
        'sublist': _Uint16List_sublist$,
      },
      {},
    ),
    'Int32List': m.ClassMirror(
      'Int32List',
      {
        '#as': Int32List_as$,
        '#is': Int32List_is$,
        'sublist': _Int32List_sublist$,
      },
      {},
    ),
    'Uint32List': m.ClassMirror(
      'Uint32List',
      {
        '#as': Uint32List_as$,
        '#is': Uint32List_is$,
        'sublist': _Uint32List_sublist$,
      },
      {},
    ),
    'Int64List': m.ClassMirror(
      'Int64List',
      {
        '#as': Int64List_as$,
        '#is': Int64List_is$,
        'sublist': _Int64List_sublist$,
      },
      {},
    ),
    'Uint64List': m.ClassMirror(
      'Uint64List',
      {
        '#as': Uint64List_as$,
        '#is': Uint64List_is$,
        'sublist': _Uint64List_sublist$,
      },
      {},
    ),
    'Float32List': m.ClassMirror(
      'Float32List',
      {
        '#as': Float32List_as$,
        '#is': Float32List_is$,
        'sublist': _Float32List_sublist$,
      },
      {},
    ),
    'Float64List': m.ClassMirror(
      'Float64List',
      {
        '#as': Float64List_as$,
        '#is': Float64List_is$,
        'sublist': _Float64List_sublist$,
      },
      {},
    ),
    'Float32x4List': m.ClassMirror(
      'Float32x4List',
      {
        '#as': Float32x4List_as$,
        '#is': Float32x4List_is$,
        '+': _Float32x4List_plus$$,
        'sublist': _Float32x4List_sublist$,
      },
      {},
    ),
    'Int32x4List': m.ClassMirror(
      'Int32x4List',
      {
        '#as': Int32x4List_as$,
        '#is': Int32x4List_is$,
        '+': _Int32x4List_plus$$,
        'sublist': _Int32x4List_sublist$,
      },
      {},
    ),
    'Float64x2List': m.ClassMirror(
      'Float64x2List',
      {
        '#as': Float64x2List_as$,
        '#is': Float64x2List_is$,
        '+': _Float64x2List_plus$$,
        'sublist': _Float64x2List_sublist$,
      },
      {},
    ),
    'Float32x4': m.ClassMirror(
      'Float32x4',
      {
        '#as': Float32x4_as$,
        '#is': Float32x4_is$,
        'x': _Float32x4_x$,
        'y': _Float32x4_y$,
        'z': _Float32x4_z$,
        'w': _Float32x4_w$,
        'signMask': _Float32x4_signMask$,
        '+': _Float32x4_plus$$,
        'unary-': _Float32x4_unary_minus$$,
        '-': _Float32x4_minus$$,
        '*': _Float32x4_times$$,
        '/': _Float32x4_over$$,
        'lessThan': _Float32x4_lessThan$,
        'lessThanOrEqual': _Float32x4_lessThanOrEqual$,
        'greaterThan': _Float32x4_greaterThan$,
        'greaterThanOrEqual': _Float32x4_greaterThanOrEqual$,
        'equal': _Float32x4_equal$,
        'notEqual': _Float32x4_notEqual$,
        'scale': _Float32x4_scale$,
        'abs': _Float32x4_abs$,
        'clamp': _Float32x4_clamp$,
        'shuffle': _Float32x4_shuffle$,
        'shuffleMix': _Float32x4_shuffleMix$,
        'withX': _Float32x4_withX$,
        'withY': _Float32x4_withY$,
        'withZ': _Float32x4_withZ$,
        'withW': _Float32x4_withW$,
        'min': _Float32x4_min$,
        'max': _Float32x4_max$,
        'sqrt': _Float32x4_sqrt$,
        'reciprocal': _Float32x4_reciprocal$,
        'reciprocalSqrt': _Float32x4_reciprocalSqrt$,
      },
      {},
    ),
    'Int32x4': m.ClassMirror(
      'Int32x4',
      {
        '#as': Int32x4_as$,
        '#is': Int32x4_is$,
        'x': _Int32x4_x$,
        'y': _Int32x4_y$,
        'z': _Int32x4_z$,
        'w': _Int32x4_w$,
        'signMask': _Int32x4_signMask$,
        'flagX': _Int32x4_flagX$,
        'flagY': _Int32x4_flagY$,
        'flagZ': _Int32x4_flagZ$,
        'flagW': _Int32x4_flagW$,
        '|': _Int32x4_bit_or$$,
        '&': _Int32x4_bit_and$$,
        '^': _Int32x4_bit_xor$$,
        '+': _Int32x4_plus$$,
        '-': _Int32x4_minus$$,
        'shuffle': _Int32x4_shuffle$,
        'shuffleMix': _Int32x4_shuffleMix$,
        'withX': _Int32x4_withX$,
        'withY': _Int32x4_withY$,
        'withZ': _Int32x4_withZ$,
        'withW': _Int32x4_withW$,
        'withFlagX': _Int32x4_withFlagX$,
        'withFlagY': _Int32x4_withFlagY$,
        'withFlagZ': _Int32x4_withFlagZ$,
        'withFlagW': _Int32x4_withFlagW$,
        'select': _Int32x4_select$,
      },
      {},
    ),
    'Float64x2': m.ClassMirror(
      'Float64x2',
      {
        '#as': Float64x2_as$,
        '#is': Float64x2_is$,
        'x': _Float64x2_x$,
        'y': _Float64x2_y$,
        'signMask': _Float64x2_signMask$,
        '+': _Float64x2_plus$$,
        'unary-': _Float64x2_unary_minus$$,
        '-': _Float64x2_minus$$,
        '*': _Float64x2_times$$,
        '/': _Float64x2_over$$,
        'scale': _Float64x2_scale$,
        'abs': _Float64x2_abs$,
        'clamp': _Float64x2_clamp$,
        'withX': _Float64x2_withX$,
        'withY': _Float64x2_withY$,
        'min': _Float64x2_min$,
        'max': _Float64x2_max$,
        'sqrt': _Float64x2_sqrt$,
      },
      {},
    ),
    'UnmodifiableByteBufferView': m.ClassMirror(
      'UnmodifiableByteBufferView',
      {
        '#as': UnmodifiableByteBufferView_as$,
        '#is': UnmodifiableByteBufferView_is$,
      },
      {},
    ),
    'UnmodifiableByteDataView': m.ClassMirror(
      'UnmodifiableByteDataView',
      {
        '#as': UnmodifiableByteDataView_as$,
        '#is': UnmodifiableByteDataView_is$,
      },
      {},
    ),
    'UnmodifiableUint8ListView': m.ClassMirror(
      'UnmodifiableUint8ListView',
      {
        '#as': UnmodifiableUint8ListView_as$,
        '#is': UnmodifiableUint8ListView_is$,
      },
      {},
    ),
    'UnmodifiableInt8ListView': m.ClassMirror(
      'UnmodifiableInt8ListView',
      {
        '#as': UnmodifiableInt8ListView_as$,
        '#is': UnmodifiableInt8ListView_is$,
      },
      {},
    ),
    'UnmodifiableUint8ClampedListView': m.ClassMirror(
      'UnmodifiableUint8ClampedListView',
      {
        '#as': UnmodifiableUint8ClampedListView_as$,
        '#is': UnmodifiableUint8ClampedListView_is$,
      },
      {},
    ),
    'UnmodifiableUint16ListView': m.ClassMirror(
      'UnmodifiableUint16ListView',
      {
        '#as': UnmodifiableUint16ListView_as$,
        '#is': UnmodifiableUint16ListView_is$,
      },
      {},
    ),
    'UnmodifiableInt16ListView': m.ClassMirror(
      'UnmodifiableInt16ListView',
      {
        '#as': UnmodifiableInt16ListView_as$,
        '#is': UnmodifiableInt16ListView_is$,
      },
      {},
    ),
    'UnmodifiableUint32ListView': m.ClassMirror(
      'UnmodifiableUint32ListView',
      {
        '#as': UnmodifiableUint32ListView_as$,
        '#is': UnmodifiableUint32ListView_is$,
      },
      {},
    ),
    'UnmodifiableInt32ListView': m.ClassMirror(
      'UnmodifiableInt32ListView',
      {
        '#as': UnmodifiableInt32ListView_as$,
        '#is': UnmodifiableInt32ListView_is$,
      },
      {},
    ),
    'UnmodifiableUint64ListView': m.ClassMirror(
      'UnmodifiableUint64ListView',
      {
        '#as': UnmodifiableUint64ListView_as$,
        '#is': UnmodifiableUint64ListView_is$,
      },
      {},
    ),
    'UnmodifiableInt64ListView': m.ClassMirror(
      'UnmodifiableInt64ListView',
      {
        '#as': UnmodifiableInt64ListView_as$,
        '#is': UnmodifiableInt64ListView_is$,
      },
      {},
    ),
    'UnmodifiableInt32x4ListView': m.ClassMirror(
      'UnmodifiableInt32x4ListView',
      {
        '#as': UnmodifiableInt32x4ListView_as$,
        '#is': UnmodifiableInt32x4ListView_is$,
      },
      {},
    ),
    'UnmodifiableFloat32x4ListView': m.ClassMirror(
      'UnmodifiableFloat32x4ListView',
      {
        '#as': UnmodifiableFloat32x4ListView_as$,
        '#is': UnmodifiableFloat32x4ListView_is$,
      },
      {},
    ),
    'UnmodifiableFloat64x2ListView': m.ClassMirror(
      'UnmodifiableFloat64x2ListView',
      {
        '#as': UnmodifiableFloat64x2ListView_as$,
        '#is': UnmodifiableFloat64x2ListView_is$,
      },
      {},
    ),
    'UnmodifiableFloat32ListView': m.ClassMirror(
      'UnmodifiableFloat32ListView',
      {
        '#as': UnmodifiableFloat32ListView_as$,
        '#is': UnmodifiableFloat32ListView_is$,
      },
      {},
    ),
    'UnmodifiableFloat64ListView': m.ClassMirror(
      'UnmodifiableFloat64ListView',
      {
        '#as': UnmodifiableFloat64ListView_as$,
        '#is': UnmodifiableFloat64ListView_is$,
      },
      {},
    ),
  },
);
Function ByteBuffer_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as ByteBuffer;
Function ByteBuffer_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is ByteBuffer;
Function _ByteBuffer_lengthInBytes$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    () {
      return target$.lengthInBytes;
    };
Function _ByteBuffer_asUint8List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asUint8List;
Function _ByteBuffer_asInt8List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asInt8List;
Function _ByteBuffer_asUint8ClampedList$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asUint8ClampedList;
Function _ByteBuffer_asUint16List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asUint16List;
Function _ByteBuffer_asInt16List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asInt16List;
Function _ByteBuffer_asUint32List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asUint32List;
Function _ByteBuffer_asInt32List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asInt32List;
Function _ByteBuffer_asUint64List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asUint64List;
Function _ByteBuffer_asInt64List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asInt64List;
Function _ByteBuffer_asInt32x4List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asInt32x4List;
Function _ByteBuffer_asFloat32List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asFloat32List;
Function _ByteBuffer_asFloat64List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asFloat64List;
Function _ByteBuffer_asFloat32x4List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asFloat32x4List;
Function _ByteBuffer_asFloat64x2List$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asFloat64x2List;
Function _ByteBuffer_asByteData$(
  m.Scope scope$,
  ByteBuffer target$,
) =>
    target$.asByteData;
Function TypedData_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as TypedData;
Function TypedData_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is TypedData;
Function _TypedData_elementSizeInBytes$(
  m.Scope scope$,
  TypedData target$,
) =>
    () {
      return target$.elementSizeInBytes;
    };
Function _TypedData_offsetInBytes$(
  m.Scope scope$,
  TypedData target$,
) =>
    () {
      return target$.offsetInBytes;
    };
Function _TypedData_lengthInBytes$(
  m.Scope scope$,
  TypedData target$,
) =>
    () {
      return target$.lengthInBytes;
    };
Function _TypedData_buffer$(
  m.Scope scope$,
  TypedData target$,
) =>
    () {
      return target$.buffer;
    };
Function Endian_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Endian;
Function Endian_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Endian;
Endian _Endian_big$() {
  return Endian.big;
}

Endian _Endian_little$() {
  return Endian.little;
}

Endian _Endian_host$() {
  return Endian.host;
}

Function ByteData_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as ByteData;
Function ByteData_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is ByteData;
Function _ByteData__$(m.Scope scope$) => (int length) {
      return ByteData(length);
    };
Function _ByteData_view_$(m.Scope scope$) => ByteData.view;
Function _ByteData_sublistView_$(m.Scope scope$) => ByteData.sublistView;
Function _ByteData_getInt8$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getInt8;
Function _ByteData_setInt8$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setInt8;
Function _ByteData_getUint8$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getUint8;
Function _ByteData_setUint8$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setUint8;
Function _ByteData_getInt16$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getInt16;
Function _ByteData_setInt16$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setInt16;
Function _ByteData_getUint16$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getUint16;
Function _ByteData_setUint16$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setUint16;
Function _ByteData_getInt32$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getInt32;
Function _ByteData_setInt32$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setInt32;
Function _ByteData_getUint32$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getUint32;
Function _ByteData_setUint32$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setUint32;
Function _ByteData_getInt64$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getInt64;
Function _ByteData_setInt64$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setInt64;
Function _ByteData_getUint64$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getUint64;
Function _ByteData_setUint64$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setUint64;
Function _ByteData_getFloat32$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getFloat32;
Function _ByteData_setFloat32$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setFloat32;
Function _ByteData_getFloat64$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.getFloat64;
Function _ByteData_setFloat64$(
  m.Scope scope$,
  ByteData target$,
) =>
    target$.setFloat64;
Function Int8List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Int8List;
Function Int8List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Int8List;
int _Int8List_bytesPerElement$() {
  return Int8List.bytesPerElement;
}

Function _Int8List__$(m.Scope scope$) => (int length) {
      return Int8List(length);
    };
Function _Int8List_fromList_$(m.Scope scope$) => Int8List.fromList;
Function _Int8List_view_$(m.Scope scope$) => Int8List.view;
Function _Int8List_sublistView_$(m.Scope scope$) => Int8List.sublistView;
Function _Int8List_sublist$(
  m.Scope scope$,
  Int8List target$,
) =>
    target$.sublist;
Function Uint8List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Uint8List;
Function Uint8List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Uint8List;
int _Uint8List_bytesPerElement$() {
  return Uint8List.bytesPerElement;
}

Function _Uint8List__$(m.Scope scope$) => (int length) {
      return Uint8List(length);
    };
Function _Uint8List_fromList_$(m.Scope scope$) => Uint8List.fromList;
Function _Uint8List_view_$(m.Scope scope$) => Uint8List.view;
Function _Uint8List_sublistView_$(m.Scope scope$) => Uint8List.sublistView;
Function _Uint8List_plus$$(
  m.Scope scope$,
  Uint8List target$,
) =>
    (List<int> other$) => target$ + other$;
Function _Uint8List_sublist$(
  m.Scope scope$,
  Uint8List target$,
) =>
    target$.sublist;
Function Uint8ClampedList_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Uint8ClampedList;
Function Uint8ClampedList_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Uint8ClampedList;
int _Uint8ClampedList_bytesPerElement$() {
  return Uint8ClampedList.bytesPerElement;
}

Function _Uint8ClampedList__$(m.Scope scope$) => (int length) {
      return Uint8ClampedList(length);
    };
Function _Uint8ClampedList_fromList_$(m.Scope scope$) =>
    Uint8ClampedList.fromList;
Function _Uint8ClampedList_view_$(m.Scope scope$) => Uint8ClampedList.view;
Function _Uint8ClampedList_sublistView_$(m.Scope scope$) =>
    Uint8ClampedList.sublistView;
Function _Uint8ClampedList_sublist$(
  m.Scope scope$,
  Uint8ClampedList target$,
) =>
    target$.sublist;
Function Int16List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Int16List;
Function Int16List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Int16List;
int _Int16List_bytesPerElement$() {
  return Int16List.bytesPerElement;
}

Function _Int16List__$(m.Scope scope$) => (int length) {
      return Int16List(length);
    };
Function _Int16List_fromList_$(m.Scope scope$) => Int16List.fromList;
Function _Int16List_view_$(m.Scope scope$) => Int16List.view;
Function _Int16List_sublistView_$(m.Scope scope$) => Int16List.sublistView;
Function _Int16List_sublist$(
  m.Scope scope$,
  Int16List target$,
) =>
    target$.sublist;
Function Uint16List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Uint16List;
Function Uint16List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Uint16List;
int _Uint16List_bytesPerElement$() {
  return Uint16List.bytesPerElement;
}

Function _Uint16List__$(m.Scope scope$) => (int length) {
      return Uint16List(length);
    };
Function _Uint16List_fromList_$(m.Scope scope$) => Uint16List.fromList;
Function _Uint16List_view_$(m.Scope scope$) => Uint16List.view;
Function _Uint16List_sublistView_$(m.Scope scope$) => Uint16List.sublistView;
Function _Uint16List_sublist$(
  m.Scope scope$,
  Uint16List target$,
) =>
    target$.sublist;
Function Int32List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Int32List;
Function Int32List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Int32List;
int _Int32List_bytesPerElement$() {
  return Int32List.bytesPerElement;
}

Function _Int32List__$(m.Scope scope$) => (int length) {
      return Int32List(length);
    };
Function _Int32List_fromList_$(m.Scope scope$) => Int32List.fromList;
Function _Int32List_view_$(m.Scope scope$) => Int32List.view;
Function _Int32List_sublistView_$(m.Scope scope$) => Int32List.sublistView;
Function _Int32List_sublist$(
  m.Scope scope$,
  Int32List target$,
) =>
    target$.sublist;
Function Uint32List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Uint32List;
Function Uint32List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Uint32List;
int _Uint32List_bytesPerElement$() {
  return Uint32List.bytesPerElement;
}

Function _Uint32List__$(m.Scope scope$) => (int length) {
      return Uint32List(length);
    };
Function _Uint32List_fromList_$(m.Scope scope$) => Uint32List.fromList;
Function _Uint32List_view_$(m.Scope scope$) => Uint32List.view;
Function _Uint32List_sublistView_$(m.Scope scope$) => Uint32List.sublistView;
Function _Uint32List_sublist$(
  m.Scope scope$,
  Uint32List target$,
) =>
    target$.sublist;
Function Int64List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Int64List;
Function Int64List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Int64List;
int _Int64List_bytesPerElement$() {
  return Int64List.bytesPerElement;
}

Function _Int64List__$(m.Scope scope$) => (int length) {
      return Int64List(length);
    };
Function _Int64List_fromList_$(m.Scope scope$) => Int64List.fromList;
Function _Int64List_view_$(m.Scope scope$) => Int64List.view;
Function _Int64List_sublistView_$(m.Scope scope$) => Int64List.sublistView;
Function _Int64List_sublist$(
  m.Scope scope$,
  Int64List target$,
) =>
    target$.sublist;
Function Uint64List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Uint64List;
Function Uint64List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Uint64List;
int _Uint64List_bytesPerElement$() {
  return Uint64List.bytesPerElement;
}

Function _Uint64List__$(m.Scope scope$) => (int length) {
      return Uint64List(length);
    };
Function _Uint64List_fromList_$(m.Scope scope$) => Uint64List.fromList;
Function _Uint64List_view_$(m.Scope scope$) => Uint64List.view;
Function _Uint64List_sublistView_$(m.Scope scope$) => Uint64List.sublistView;
Function _Uint64List_sublist$(
  m.Scope scope$,
  Uint64List target$,
) =>
    target$.sublist;
Function Float32List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Float32List;
Function Float32List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Float32List;
int _Float32List_bytesPerElement$() {
  return Float32List.bytesPerElement;
}

Function _Float32List__$(m.Scope scope$) => (int length) {
      return Float32List(length);
    };
Function _Float32List_fromList_$(m.Scope scope$) => Float32List.fromList;
Function _Float32List_view_$(m.Scope scope$) => Float32List.view;
Function _Float32List_sublistView_$(m.Scope scope$) => Float32List.sublistView;
Function _Float32List_sublist$(
  m.Scope scope$,
  Float32List target$,
) =>
    target$.sublist;
Function Float64List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Float64List;
Function Float64List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Float64List;
int _Float64List_bytesPerElement$() {
  return Float64List.bytesPerElement;
}

Function _Float64List__$(m.Scope scope$) => (int length) {
      return Float64List(length);
    };
Function _Float64List_fromList_$(m.Scope scope$) => Float64List.fromList;
Function _Float64List_view_$(m.Scope scope$) => Float64List.view;
Function _Float64List_sublistView_$(m.Scope scope$) => Float64List.sublistView;
Function _Float64List_sublist$(
  m.Scope scope$,
  Float64List target$,
) =>
    target$.sublist;
Function Float32x4List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Float32x4List;
Function Float32x4List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Float32x4List;
int _Float32x4List_bytesPerElement$() {
  return Float32x4List.bytesPerElement;
}

Function _Float32x4List__$(m.Scope scope$) => (int length) {
      return Float32x4List(length);
    };
Function _Float32x4List_fromList_$(m.Scope scope$) => Float32x4List.fromList;
Function _Float32x4List_view_$(m.Scope scope$) => Float32x4List.view;
Function _Float32x4List_sublistView_$(m.Scope scope$) =>
    Float32x4List.sublistView;
Function _Float32x4List_plus$$(
  m.Scope scope$,
  Float32x4List target$,
) =>
    (List<Float32x4> other$) => target$ + other$;
Function _Float32x4List_sublist$(
  m.Scope scope$,
  Float32x4List target$,
) =>
    target$.sublist;
Function Int32x4List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Int32x4List;
Function Int32x4List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Int32x4List;
int _Int32x4List_bytesPerElement$() {
  return Int32x4List.bytesPerElement;
}

Function _Int32x4List__$(m.Scope scope$) => (int length) {
      return Int32x4List(length);
    };
Function _Int32x4List_fromList_$(m.Scope scope$) => Int32x4List.fromList;
Function _Int32x4List_view_$(m.Scope scope$) => Int32x4List.view;
Function _Int32x4List_sublistView_$(m.Scope scope$) => Int32x4List.sublistView;
Function _Int32x4List_plus$$(
  m.Scope scope$,
  Int32x4List target$,
) =>
    (List<Int32x4> other$) => target$ + other$;
Function _Int32x4List_sublist$(
  m.Scope scope$,
  Int32x4List target$,
) =>
    target$.sublist;
Function Float64x2List_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Float64x2List;
Function Float64x2List_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Float64x2List;
int _Float64x2List_bytesPerElement$() {
  return Float64x2List.bytesPerElement;
}

Function _Float64x2List__$(m.Scope scope$) => (int length) {
      return Float64x2List(length);
    };
Function _Float64x2List_fromList_$(m.Scope scope$) => Float64x2List.fromList;
Function _Float64x2List_view_$(m.Scope scope$) => Float64x2List.view;
Function _Float64x2List_sublistView_$(m.Scope scope$) =>
    Float64x2List.sublistView;
Function _Float64x2List_plus$$(
  m.Scope scope$,
  Float64x2List target$,
) =>
    (List<Float64x2> other$) => target$ + other$;
Function _Float64x2List_sublist$(
  m.Scope scope$,
  Float64x2List target$,
) =>
    target$.sublist;
Function Float32x4_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Float32x4;
Function Float32x4_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Float32x4;
int _Float32x4_xxxx$() {
  return Float32x4.xxxx;
}

int _Float32x4_xxxy$() {
  return Float32x4.xxxy;
}

int _Float32x4_xxxz$() {
  return Float32x4.xxxz;
}

int _Float32x4_xxxw$() {
  return Float32x4.xxxw;
}

int _Float32x4_xxyx$() {
  return Float32x4.xxyx;
}

int _Float32x4_xxyy$() {
  return Float32x4.xxyy;
}

int _Float32x4_xxyz$() {
  return Float32x4.xxyz;
}

int _Float32x4_xxyw$() {
  return Float32x4.xxyw;
}

int _Float32x4_xxzx$() {
  return Float32x4.xxzx;
}

int _Float32x4_xxzy$() {
  return Float32x4.xxzy;
}

int _Float32x4_xxzz$() {
  return Float32x4.xxzz;
}

int _Float32x4_xxzw$() {
  return Float32x4.xxzw;
}

int _Float32x4_xxwx$() {
  return Float32x4.xxwx;
}

int _Float32x4_xxwy$() {
  return Float32x4.xxwy;
}

int _Float32x4_xxwz$() {
  return Float32x4.xxwz;
}

int _Float32x4_xxww$() {
  return Float32x4.xxww;
}

int _Float32x4_xyxx$() {
  return Float32x4.xyxx;
}

int _Float32x4_xyxy$() {
  return Float32x4.xyxy;
}

int _Float32x4_xyxz$() {
  return Float32x4.xyxz;
}

int _Float32x4_xyxw$() {
  return Float32x4.xyxw;
}

int _Float32x4_xyyx$() {
  return Float32x4.xyyx;
}

int _Float32x4_xyyy$() {
  return Float32x4.xyyy;
}

int _Float32x4_xyyz$() {
  return Float32x4.xyyz;
}

int _Float32x4_xyyw$() {
  return Float32x4.xyyw;
}

int _Float32x4_xyzx$() {
  return Float32x4.xyzx;
}

int _Float32x4_xyzy$() {
  return Float32x4.xyzy;
}

int _Float32x4_xyzz$() {
  return Float32x4.xyzz;
}

int _Float32x4_xyzw$() {
  return Float32x4.xyzw;
}

int _Float32x4_xywx$() {
  return Float32x4.xywx;
}

int _Float32x4_xywy$() {
  return Float32x4.xywy;
}

int _Float32x4_xywz$() {
  return Float32x4.xywz;
}

int _Float32x4_xyww$() {
  return Float32x4.xyww;
}

int _Float32x4_xzxx$() {
  return Float32x4.xzxx;
}

int _Float32x4_xzxy$() {
  return Float32x4.xzxy;
}

int _Float32x4_xzxz$() {
  return Float32x4.xzxz;
}

int _Float32x4_xzxw$() {
  return Float32x4.xzxw;
}

int _Float32x4_xzyx$() {
  return Float32x4.xzyx;
}

int _Float32x4_xzyy$() {
  return Float32x4.xzyy;
}

int _Float32x4_xzyz$() {
  return Float32x4.xzyz;
}

int _Float32x4_xzyw$() {
  return Float32x4.xzyw;
}

int _Float32x4_xzzx$() {
  return Float32x4.xzzx;
}

int _Float32x4_xzzy$() {
  return Float32x4.xzzy;
}

int _Float32x4_xzzz$() {
  return Float32x4.xzzz;
}

int _Float32x4_xzzw$() {
  return Float32x4.xzzw;
}

int _Float32x4_xzwx$() {
  return Float32x4.xzwx;
}

int _Float32x4_xzwy$() {
  return Float32x4.xzwy;
}

int _Float32x4_xzwz$() {
  return Float32x4.xzwz;
}

int _Float32x4_xzww$() {
  return Float32x4.xzww;
}

int _Float32x4_xwxx$() {
  return Float32x4.xwxx;
}

int _Float32x4_xwxy$() {
  return Float32x4.xwxy;
}

int _Float32x4_xwxz$() {
  return Float32x4.xwxz;
}

int _Float32x4_xwxw$() {
  return Float32x4.xwxw;
}

int _Float32x4_xwyx$() {
  return Float32x4.xwyx;
}

int _Float32x4_xwyy$() {
  return Float32x4.xwyy;
}

int _Float32x4_xwyz$() {
  return Float32x4.xwyz;
}

int _Float32x4_xwyw$() {
  return Float32x4.xwyw;
}

int _Float32x4_xwzx$() {
  return Float32x4.xwzx;
}

int _Float32x4_xwzy$() {
  return Float32x4.xwzy;
}

int _Float32x4_xwzz$() {
  return Float32x4.xwzz;
}

int _Float32x4_xwzw$() {
  return Float32x4.xwzw;
}

int _Float32x4_xwwx$() {
  return Float32x4.xwwx;
}

int _Float32x4_xwwy$() {
  return Float32x4.xwwy;
}

int _Float32x4_xwwz$() {
  return Float32x4.xwwz;
}

int _Float32x4_xwww$() {
  return Float32x4.xwww;
}

int _Float32x4_yxxx$() {
  return Float32x4.yxxx;
}

int _Float32x4_yxxy$() {
  return Float32x4.yxxy;
}

int _Float32x4_yxxz$() {
  return Float32x4.yxxz;
}

int _Float32x4_yxxw$() {
  return Float32x4.yxxw;
}

int _Float32x4_yxyx$() {
  return Float32x4.yxyx;
}

int _Float32x4_yxyy$() {
  return Float32x4.yxyy;
}

int _Float32x4_yxyz$() {
  return Float32x4.yxyz;
}

int _Float32x4_yxyw$() {
  return Float32x4.yxyw;
}

int _Float32x4_yxzx$() {
  return Float32x4.yxzx;
}

int _Float32x4_yxzy$() {
  return Float32x4.yxzy;
}

int _Float32x4_yxzz$() {
  return Float32x4.yxzz;
}

int _Float32x4_yxzw$() {
  return Float32x4.yxzw;
}

int _Float32x4_yxwx$() {
  return Float32x4.yxwx;
}

int _Float32x4_yxwy$() {
  return Float32x4.yxwy;
}

int _Float32x4_yxwz$() {
  return Float32x4.yxwz;
}

int _Float32x4_yxww$() {
  return Float32x4.yxww;
}

int _Float32x4_yyxx$() {
  return Float32x4.yyxx;
}

int _Float32x4_yyxy$() {
  return Float32x4.yyxy;
}

int _Float32x4_yyxz$() {
  return Float32x4.yyxz;
}

int _Float32x4_yyxw$() {
  return Float32x4.yyxw;
}

int _Float32x4_yyyx$() {
  return Float32x4.yyyx;
}

int _Float32x4_yyyy$() {
  return Float32x4.yyyy;
}

int _Float32x4_yyyz$() {
  return Float32x4.yyyz;
}

int _Float32x4_yyyw$() {
  return Float32x4.yyyw;
}

int _Float32x4_yyzx$() {
  return Float32x4.yyzx;
}

int _Float32x4_yyzy$() {
  return Float32x4.yyzy;
}

int _Float32x4_yyzz$() {
  return Float32x4.yyzz;
}

int _Float32x4_yyzw$() {
  return Float32x4.yyzw;
}

int _Float32x4_yywx$() {
  return Float32x4.yywx;
}

int _Float32x4_yywy$() {
  return Float32x4.yywy;
}

int _Float32x4_yywz$() {
  return Float32x4.yywz;
}

int _Float32x4_yyww$() {
  return Float32x4.yyww;
}

int _Float32x4_yzxx$() {
  return Float32x4.yzxx;
}

int _Float32x4_yzxy$() {
  return Float32x4.yzxy;
}

int _Float32x4_yzxz$() {
  return Float32x4.yzxz;
}

int _Float32x4_yzxw$() {
  return Float32x4.yzxw;
}

int _Float32x4_yzyx$() {
  return Float32x4.yzyx;
}

int _Float32x4_yzyy$() {
  return Float32x4.yzyy;
}

int _Float32x4_yzyz$() {
  return Float32x4.yzyz;
}

int _Float32x4_yzyw$() {
  return Float32x4.yzyw;
}

int _Float32x4_yzzx$() {
  return Float32x4.yzzx;
}

int _Float32x4_yzzy$() {
  return Float32x4.yzzy;
}

int _Float32x4_yzzz$() {
  return Float32x4.yzzz;
}

int _Float32x4_yzzw$() {
  return Float32x4.yzzw;
}

int _Float32x4_yzwx$() {
  return Float32x4.yzwx;
}

int _Float32x4_yzwy$() {
  return Float32x4.yzwy;
}

int _Float32x4_yzwz$() {
  return Float32x4.yzwz;
}

int _Float32x4_yzww$() {
  return Float32x4.yzww;
}

int _Float32x4_ywxx$() {
  return Float32x4.ywxx;
}

int _Float32x4_ywxy$() {
  return Float32x4.ywxy;
}

int _Float32x4_ywxz$() {
  return Float32x4.ywxz;
}

int _Float32x4_ywxw$() {
  return Float32x4.ywxw;
}

int _Float32x4_ywyx$() {
  return Float32x4.ywyx;
}

int _Float32x4_ywyy$() {
  return Float32x4.ywyy;
}

int _Float32x4_ywyz$() {
  return Float32x4.ywyz;
}

int _Float32x4_ywyw$() {
  return Float32x4.ywyw;
}

int _Float32x4_ywzx$() {
  return Float32x4.ywzx;
}

int _Float32x4_ywzy$() {
  return Float32x4.ywzy;
}

int _Float32x4_ywzz$() {
  return Float32x4.ywzz;
}

int _Float32x4_ywzw$() {
  return Float32x4.ywzw;
}

int _Float32x4_ywwx$() {
  return Float32x4.ywwx;
}

int _Float32x4_ywwy$() {
  return Float32x4.ywwy;
}

int _Float32x4_ywwz$() {
  return Float32x4.ywwz;
}

int _Float32x4_ywww$() {
  return Float32x4.ywww;
}

int _Float32x4_zxxx$() {
  return Float32x4.zxxx;
}

int _Float32x4_zxxy$() {
  return Float32x4.zxxy;
}

int _Float32x4_zxxz$() {
  return Float32x4.zxxz;
}

int _Float32x4_zxxw$() {
  return Float32x4.zxxw;
}

int _Float32x4_zxyx$() {
  return Float32x4.zxyx;
}

int _Float32x4_zxyy$() {
  return Float32x4.zxyy;
}

int _Float32x4_zxyz$() {
  return Float32x4.zxyz;
}

int _Float32x4_zxyw$() {
  return Float32x4.zxyw;
}

int _Float32x4_zxzx$() {
  return Float32x4.zxzx;
}

int _Float32x4_zxzy$() {
  return Float32x4.zxzy;
}

int _Float32x4_zxzz$() {
  return Float32x4.zxzz;
}

int _Float32x4_zxzw$() {
  return Float32x4.zxzw;
}

int _Float32x4_zxwx$() {
  return Float32x4.zxwx;
}

int _Float32x4_zxwy$() {
  return Float32x4.zxwy;
}

int _Float32x4_zxwz$() {
  return Float32x4.zxwz;
}

int _Float32x4_zxww$() {
  return Float32x4.zxww;
}

int _Float32x4_zyxx$() {
  return Float32x4.zyxx;
}

int _Float32x4_zyxy$() {
  return Float32x4.zyxy;
}

int _Float32x4_zyxz$() {
  return Float32x4.zyxz;
}

int _Float32x4_zyxw$() {
  return Float32x4.zyxw;
}

int _Float32x4_zyyx$() {
  return Float32x4.zyyx;
}

int _Float32x4_zyyy$() {
  return Float32x4.zyyy;
}

int _Float32x4_zyyz$() {
  return Float32x4.zyyz;
}

int _Float32x4_zyyw$() {
  return Float32x4.zyyw;
}

int _Float32x4_zyzx$() {
  return Float32x4.zyzx;
}

int _Float32x4_zyzy$() {
  return Float32x4.zyzy;
}

int _Float32x4_zyzz$() {
  return Float32x4.zyzz;
}

int _Float32x4_zyzw$() {
  return Float32x4.zyzw;
}

int _Float32x4_zywx$() {
  return Float32x4.zywx;
}

int _Float32x4_zywy$() {
  return Float32x4.zywy;
}

int _Float32x4_zywz$() {
  return Float32x4.zywz;
}

int _Float32x4_zyww$() {
  return Float32x4.zyww;
}

int _Float32x4_zzxx$() {
  return Float32x4.zzxx;
}

int _Float32x4_zzxy$() {
  return Float32x4.zzxy;
}

int _Float32x4_zzxz$() {
  return Float32x4.zzxz;
}

int _Float32x4_zzxw$() {
  return Float32x4.zzxw;
}

int _Float32x4_zzyx$() {
  return Float32x4.zzyx;
}

int _Float32x4_zzyy$() {
  return Float32x4.zzyy;
}

int _Float32x4_zzyz$() {
  return Float32x4.zzyz;
}

int _Float32x4_zzyw$() {
  return Float32x4.zzyw;
}

int _Float32x4_zzzx$() {
  return Float32x4.zzzx;
}

int _Float32x4_zzzy$() {
  return Float32x4.zzzy;
}

int _Float32x4_zzzz$() {
  return Float32x4.zzzz;
}

int _Float32x4_zzzw$() {
  return Float32x4.zzzw;
}

int _Float32x4_zzwx$() {
  return Float32x4.zzwx;
}

int _Float32x4_zzwy$() {
  return Float32x4.zzwy;
}

int _Float32x4_zzwz$() {
  return Float32x4.zzwz;
}

int _Float32x4_zzww$() {
  return Float32x4.zzww;
}

int _Float32x4_zwxx$() {
  return Float32x4.zwxx;
}

int _Float32x4_zwxy$() {
  return Float32x4.zwxy;
}

int _Float32x4_zwxz$() {
  return Float32x4.zwxz;
}

int _Float32x4_zwxw$() {
  return Float32x4.zwxw;
}

int _Float32x4_zwyx$() {
  return Float32x4.zwyx;
}

int _Float32x4_zwyy$() {
  return Float32x4.zwyy;
}

int _Float32x4_zwyz$() {
  return Float32x4.zwyz;
}

int _Float32x4_zwyw$() {
  return Float32x4.zwyw;
}

int _Float32x4_zwzx$() {
  return Float32x4.zwzx;
}

int _Float32x4_zwzy$() {
  return Float32x4.zwzy;
}

int _Float32x4_zwzz$() {
  return Float32x4.zwzz;
}

int _Float32x4_zwzw$() {
  return Float32x4.zwzw;
}

int _Float32x4_zwwx$() {
  return Float32x4.zwwx;
}

int _Float32x4_zwwy$() {
  return Float32x4.zwwy;
}

int _Float32x4_zwwz$() {
  return Float32x4.zwwz;
}

int _Float32x4_zwww$() {
  return Float32x4.zwww;
}

int _Float32x4_wxxx$() {
  return Float32x4.wxxx;
}

int _Float32x4_wxxy$() {
  return Float32x4.wxxy;
}

int _Float32x4_wxxz$() {
  return Float32x4.wxxz;
}

int _Float32x4_wxxw$() {
  return Float32x4.wxxw;
}

int _Float32x4_wxyx$() {
  return Float32x4.wxyx;
}

int _Float32x4_wxyy$() {
  return Float32x4.wxyy;
}

int _Float32x4_wxyz$() {
  return Float32x4.wxyz;
}

int _Float32x4_wxyw$() {
  return Float32x4.wxyw;
}

int _Float32x4_wxzx$() {
  return Float32x4.wxzx;
}

int _Float32x4_wxzy$() {
  return Float32x4.wxzy;
}

int _Float32x4_wxzz$() {
  return Float32x4.wxzz;
}

int _Float32x4_wxzw$() {
  return Float32x4.wxzw;
}

int _Float32x4_wxwx$() {
  return Float32x4.wxwx;
}

int _Float32x4_wxwy$() {
  return Float32x4.wxwy;
}

int _Float32x4_wxwz$() {
  return Float32x4.wxwz;
}

int _Float32x4_wxww$() {
  return Float32x4.wxww;
}

int _Float32x4_wyxx$() {
  return Float32x4.wyxx;
}

int _Float32x4_wyxy$() {
  return Float32x4.wyxy;
}

int _Float32x4_wyxz$() {
  return Float32x4.wyxz;
}

int _Float32x4_wyxw$() {
  return Float32x4.wyxw;
}

int _Float32x4_wyyx$() {
  return Float32x4.wyyx;
}

int _Float32x4_wyyy$() {
  return Float32x4.wyyy;
}

int _Float32x4_wyyz$() {
  return Float32x4.wyyz;
}

int _Float32x4_wyyw$() {
  return Float32x4.wyyw;
}

int _Float32x4_wyzx$() {
  return Float32x4.wyzx;
}

int _Float32x4_wyzy$() {
  return Float32x4.wyzy;
}

int _Float32x4_wyzz$() {
  return Float32x4.wyzz;
}

int _Float32x4_wyzw$() {
  return Float32x4.wyzw;
}

int _Float32x4_wywx$() {
  return Float32x4.wywx;
}

int _Float32x4_wywy$() {
  return Float32x4.wywy;
}

int _Float32x4_wywz$() {
  return Float32x4.wywz;
}

int _Float32x4_wyww$() {
  return Float32x4.wyww;
}

int _Float32x4_wzxx$() {
  return Float32x4.wzxx;
}

int _Float32x4_wzxy$() {
  return Float32x4.wzxy;
}

int _Float32x4_wzxz$() {
  return Float32x4.wzxz;
}

int _Float32x4_wzxw$() {
  return Float32x4.wzxw;
}

int _Float32x4_wzyx$() {
  return Float32x4.wzyx;
}

int _Float32x4_wzyy$() {
  return Float32x4.wzyy;
}

int _Float32x4_wzyz$() {
  return Float32x4.wzyz;
}

int _Float32x4_wzyw$() {
  return Float32x4.wzyw;
}

int _Float32x4_wzzx$() {
  return Float32x4.wzzx;
}

int _Float32x4_wzzy$() {
  return Float32x4.wzzy;
}

int _Float32x4_wzzz$() {
  return Float32x4.wzzz;
}

int _Float32x4_wzzw$() {
  return Float32x4.wzzw;
}

int _Float32x4_wzwx$() {
  return Float32x4.wzwx;
}

int _Float32x4_wzwy$() {
  return Float32x4.wzwy;
}

int _Float32x4_wzwz$() {
  return Float32x4.wzwz;
}

int _Float32x4_wzww$() {
  return Float32x4.wzww;
}

int _Float32x4_wwxx$() {
  return Float32x4.wwxx;
}

int _Float32x4_wwxy$() {
  return Float32x4.wwxy;
}

int _Float32x4_wwxz$() {
  return Float32x4.wwxz;
}

int _Float32x4_wwxw$() {
  return Float32x4.wwxw;
}

int _Float32x4_wwyx$() {
  return Float32x4.wwyx;
}

int _Float32x4_wwyy$() {
  return Float32x4.wwyy;
}

int _Float32x4_wwyz$() {
  return Float32x4.wwyz;
}

int _Float32x4_wwyw$() {
  return Float32x4.wwyw;
}

int _Float32x4_wwzx$() {
  return Float32x4.wwzx;
}

int _Float32x4_wwzy$() {
  return Float32x4.wwzy;
}

int _Float32x4_wwzz$() {
  return Float32x4.wwzz;
}

int _Float32x4_wwzw$() {
  return Float32x4.wwzw;
}

int _Float32x4_wwwx$() {
  return Float32x4.wwwx;
}

int _Float32x4_wwwy$() {
  return Float32x4.wwwy;
}

int _Float32x4_wwwz$() {
  return Float32x4.wwwz;
}

int _Float32x4_wwww$() {
  return Float32x4.wwww;
}

Function _Float32x4_x$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    () {
      return target$.x;
    };
Function _Float32x4_y$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    () {
      return target$.y;
    };
Function _Float32x4_z$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    () {
      return target$.z;
    };
Function _Float32x4_w$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    () {
      return target$.w;
    };
Function _Float32x4_signMask$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    () {
      return target$.signMask;
    };
Function _Float32x4__$(m.Scope scope$) => (
      double x,
      double y,
      double z,
      double w,
    ) {
      return Float32x4(
        x,
        y,
        z,
        w,
      );
    };
Function _Float32x4_splat_$(m.Scope scope$) => Float32x4.splat;
Function _Float32x4_zero_$(m.Scope scope$) => Float32x4.zero;
Function _Float32x4_fromInt32x4Bits_$(m.Scope scope$) =>
    Float32x4.fromInt32x4Bits;
Function _Float32x4_fromFloat64x2_$(m.Scope scope$) => Float32x4.fromFloat64x2;
Function _Float32x4_plus$$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    (Float32x4 other$) => target$ + other$;
Function _Float32x4_unary_minus$$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    () => -target$;
Function _Float32x4_minus$$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    (Float32x4 other$) => target$ - other$;
Function _Float32x4_times$$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    (Float32x4 other$) => target$ * other$;
Function _Float32x4_over$$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    (Float32x4 other$) => target$ / other$;
Function _Float32x4_lessThan$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.lessThan;
Function _Float32x4_lessThanOrEqual$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.lessThanOrEqual;
Function _Float32x4_greaterThan$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.greaterThan;
Function _Float32x4_greaterThanOrEqual$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.greaterThanOrEqual;
Function _Float32x4_equal$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.equal;
Function _Float32x4_notEqual$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.notEqual;
Function _Float32x4_scale$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.scale;
Function _Float32x4_abs$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.abs;
Function _Float32x4_clamp$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.clamp;
Function _Float32x4_shuffle$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.shuffle;
Function _Float32x4_shuffleMix$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.shuffleMix;
Function _Float32x4_withX$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.withX;
Function _Float32x4_withY$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.withY;
Function _Float32x4_withZ$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.withZ;
Function _Float32x4_withW$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.withW;
Function _Float32x4_min$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.min;
Function _Float32x4_max$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.max;
Function _Float32x4_sqrt$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.sqrt;
Function _Float32x4_reciprocal$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.reciprocal;
Function _Float32x4_reciprocalSqrt$(
  m.Scope scope$,
  Float32x4 target$,
) =>
    target$.reciprocalSqrt;
Function Int32x4_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Int32x4;
Function Int32x4_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Int32x4;
int _Int32x4_xxxx$() {
  return Int32x4.xxxx;
}

int _Int32x4_xxxy$() {
  return Int32x4.xxxy;
}

int _Int32x4_xxxz$() {
  return Int32x4.xxxz;
}

int _Int32x4_xxxw$() {
  return Int32x4.xxxw;
}

int _Int32x4_xxyx$() {
  return Int32x4.xxyx;
}

int _Int32x4_xxyy$() {
  return Int32x4.xxyy;
}

int _Int32x4_xxyz$() {
  return Int32x4.xxyz;
}

int _Int32x4_xxyw$() {
  return Int32x4.xxyw;
}

int _Int32x4_xxzx$() {
  return Int32x4.xxzx;
}

int _Int32x4_xxzy$() {
  return Int32x4.xxzy;
}

int _Int32x4_xxzz$() {
  return Int32x4.xxzz;
}

int _Int32x4_xxzw$() {
  return Int32x4.xxzw;
}

int _Int32x4_xxwx$() {
  return Int32x4.xxwx;
}

int _Int32x4_xxwy$() {
  return Int32x4.xxwy;
}

int _Int32x4_xxwz$() {
  return Int32x4.xxwz;
}

int _Int32x4_xxww$() {
  return Int32x4.xxww;
}

int _Int32x4_xyxx$() {
  return Int32x4.xyxx;
}

int _Int32x4_xyxy$() {
  return Int32x4.xyxy;
}

int _Int32x4_xyxz$() {
  return Int32x4.xyxz;
}

int _Int32x4_xyxw$() {
  return Int32x4.xyxw;
}

int _Int32x4_xyyx$() {
  return Int32x4.xyyx;
}

int _Int32x4_xyyy$() {
  return Int32x4.xyyy;
}

int _Int32x4_xyyz$() {
  return Int32x4.xyyz;
}

int _Int32x4_xyyw$() {
  return Int32x4.xyyw;
}

int _Int32x4_xyzx$() {
  return Int32x4.xyzx;
}

int _Int32x4_xyzy$() {
  return Int32x4.xyzy;
}

int _Int32x4_xyzz$() {
  return Int32x4.xyzz;
}

int _Int32x4_xyzw$() {
  return Int32x4.xyzw;
}

int _Int32x4_xywx$() {
  return Int32x4.xywx;
}

int _Int32x4_xywy$() {
  return Int32x4.xywy;
}

int _Int32x4_xywz$() {
  return Int32x4.xywz;
}

int _Int32x4_xyww$() {
  return Int32x4.xyww;
}

int _Int32x4_xzxx$() {
  return Int32x4.xzxx;
}

int _Int32x4_xzxy$() {
  return Int32x4.xzxy;
}

int _Int32x4_xzxz$() {
  return Int32x4.xzxz;
}

int _Int32x4_xzxw$() {
  return Int32x4.xzxw;
}

int _Int32x4_xzyx$() {
  return Int32x4.xzyx;
}

int _Int32x4_xzyy$() {
  return Int32x4.xzyy;
}

int _Int32x4_xzyz$() {
  return Int32x4.xzyz;
}

int _Int32x4_xzyw$() {
  return Int32x4.xzyw;
}

int _Int32x4_xzzx$() {
  return Int32x4.xzzx;
}

int _Int32x4_xzzy$() {
  return Int32x4.xzzy;
}

int _Int32x4_xzzz$() {
  return Int32x4.xzzz;
}

int _Int32x4_xzzw$() {
  return Int32x4.xzzw;
}

int _Int32x4_xzwx$() {
  return Int32x4.xzwx;
}

int _Int32x4_xzwy$() {
  return Int32x4.xzwy;
}

int _Int32x4_xzwz$() {
  return Int32x4.xzwz;
}

int _Int32x4_xzww$() {
  return Int32x4.xzww;
}

int _Int32x4_xwxx$() {
  return Int32x4.xwxx;
}

int _Int32x4_xwxy$() {
  return Int32x4.xwxy;
}

int _Int32x4_xwxz$() {
  return Int32x4.xwxz;
}

int _Int32x4_xwxw$() {
  return Int32x4.xwxw;
}

int _Int32x4_xwyx$() {
  return Int32x4.xwyx;
}

int _Int32x4_xwyy$() {
  return Int32x4.xwyy;
}

int _Int32x4_xwyz$() {
  return Int32x4.xwyz;
}

int _Int32x4_xwyw$() {
  return Int32x4.xwyw;
}

int _Int32x4_xwzx$() {
  return Int32x4.xwzx;
}

int _Int32x4_xwzy$() {
  return Int32x4.xwzy;
}

int _Int32x4_xwzz$() {
  return Int32x4.xwzz;
}

int _Int32x4_xwzw$() {
  return Int32x4.xwzw;
}

int _Int32x4_xwwx$() {
  return Int32x4.xwwx;
}

int _Int32x4_xwwy$() {
  return Int32x4.xwwy;
}

int _Int32x4_xwwz$() {
  return Int32x4.xwwz;
}

int _Int32x4_xwww$() {
  return Int32x4.xwww;
}

int _Int32x4_yxxx$() {
  return Int32x4.yxxx;
}

int _Int32x4_yxxy$() {
  return Int32x4.yxxy;
}

int _Int32x4_yxxz$() {
  return Int32x4.yxxz;
}

int _Int32x4_yxxw$() {
  return Int32x4.yxxw;
}

int _Int32x4_yxyx$() {
  return Int32x4.yxyx;
}

int _Int32x4_yxyy$() {
  return Int32x4.yxyy;
}

int _Int32x4_yxyz$() {
  return Int32x4.yxyz;
}

int _Int32x4_yxyw$() {
  return Int32x4.yxyw;
}

int _Int32x4_yxzx$() {
  return Int32x4.yxzx;
}

int _Int32x4_yxzy$() {
  return Int32x4.yxzy;
}

int _Int32x4_yxzz$() {
  return Int32x4.yxzz;
}

int _Int32x4_yxzw$() {
  return Int32x4.yxzw;
}

int _Int32x4_yxwx$() {
  return Int32x4.yxwx;
}

int _Int32x4_yxwy$() {
  return Int32x4.yxwy;
}

int _Int32x4_yxwz$() {
  return Int32x4.yxwz;
}

int _Int32x4_yxww$() {
  return Int32x4.yxww;
}

int _Int32x4_yyxx$() {
  return Int32x4.yyxx;
}

int _Int32x4_yyxy$() {
  return Int32x4.yyxy;
}

int _Int32x4_yyxz$() {
  return Int32x4.yyxz;
}

int _Int32x4_yyxw$() {
  return Int32x4.yyxw;
}

int _Int32x4_yyyx$() {
  return Int32x4.yyyx;
}

int _Int32x4_yyyy$() {
  return Int32x4.yyyy;
}

int _Int32x4_yyyz$() {
  return Int32x4.yyyz;
}

int _Int32x4_yyyw$() {
  return Int32x4.yyyw;
}

int _Int32x4_yyzx$() {
  return Int32x4.yyzx;
}

int _Int32x4_yyzy$() {
  return Int32x4.yyzy;
}

int _Int32x4_yyzz$() {
  return Int32x4.yyzz;
}

int _Int32x4_yyzw$() {
  return Int32x4.yyzw;
}

int _Int32x4_yywx$() {
  return Int32x4.yywx;
}

int _Int32x4_yywy$() {
  return Int32x4.yywy;
}

int _Int32x4_yywz$() {
  return Int32x4.yywz;
}

int _Int32x4_yyww$() {
  return Int32x4.yyww;
}

int _Int32x4_yzxx$() {
  return Int32x4.yzxx;
}

int _Int32x4_yzxy$() {
  return Int32x4.yzxy;
}

int _Int32x4_yzxz$() {
  return Int32x4.yzxz;
}

int _Int32x4_yzxw$() {
  return Int32x4.yzxw;
}

int _Int32x4_yzyx$() {
  return Int32x4.yzyx;
}

int _Int32x4_yzyy$() {
  return Int32x4.yzyy;
}

int _Int32x4_yzyz$() {
  return Int32x4.yzyz;
}

int _Int32x4_yzyw$() {
  return Int32x4.yzyw;
}

int _Int32x4_yzzx$() {
  return Int32x4.yzzx;
}

int _Int32x4_yzzy$() {
  return Int32x4.yzzy;
}

int _Int32x4_yzzz$() {
  return Int32x4.yzzz;
}

int _Int32x4_yzzw$() {
  return Int32x4.yzzw;
}

int _Int32x4_yzwx$() {
  return Int32x4.yzwx;
}

int _Int32x4_yzwy$() {
  return Int32x4.yzwy;
}

int _Int32x4_yzwz$() {
  return Int32x4.yzwz;
}

int _Int32x4_yzww$() {
  return Int32x4.yzww;
}

int _Int32x4_ywxx$() {
  return Int32x4.ywxx;
}

int _Int32x4_ywxy$() {
  return Int32x4.ywxy;
}

int _Int32x4_ywxz$() {
  return Int32x4.ywxz;
}

int _Int32x4_ywxw$() {
  return Int32x4.ywxw;
}

int _Int32x4_ywyx$() {
  return Int32x4.ywyx;
}

int _Int32x4_ywyy$() {
  return Int32x4.ywyy;
}

int _Int32x4_ywyz$() {
  return Int32x4.ywyz;
}

int _Int32x4_ywyw$() {
  return Int32x4.ywyw;
}

int _Int32x4_ywzx$() {
  return Int32x4.ywzx;
}

int _Int32x4_ywzy$() {
  return Int32x4.ywzy;
}

int _Int32x4_ywzz$() {
  return Int32x4.ywzz;
}

int _Int32x4_ywzw$() {
  return Int32x4.ywzw;
}

int _Int32x4_ywwx$() {
  return Int32x4.ywwx;
}

int _Int32x4_ywwy$() {
  return Int32x4.ywwy;
}

int _Int32x4_ywwz$() {
  return Int32x4.ywwz;
}

int _Int32x4_ywww$() {
  return Int32x4.ywww;
}

int _Int32x4_zxxx$() {
  return Int32x4.zxxx;
}

int _Int32x4_zxxy$() {
  return Int32x4.zxxy;
}

int _Int32x4_zxxz$() {
  return Int32x4.zxxz;
}

int _Int32x4_zxxw$() {
  return Int32x4.zxxw;
}

int _Int32x4_zxyx$() {
  return Int32x4.zxyx;
}

int _Int32x4_zxyy$() {
  return Int32x4.zxyy;
}

int _Int32x4_zxyz$() {
  return Int32x4.zxyz;
}

int _Int32x4_zxyw$() {
  return Int32x4.zxyw;
}

int _Int32x4_zxzx$() {
  return Int32x4.zxzx;
}

int _Int32x4_zxzy$() {
  return Int32x4.zxzy;
}

int _Int32x4_zxzz$() {
  return Int32x4.zxzz;
}

int _Int32x4_zxzw$() {
  return Int32x4.zxzw;
}

int _Int32x4_zxwx$() {
  return Int32x4.zxwx;
}

int _Int32x4_zxwy$() {
  return Int32x4.zxwy;
}

int _Int32x4_zxwz$() {
  return Int32x4.zxwz;
}

int _Int32x4_zxww$() {
  return Int32x4.zxww;
}

int _Int32x4_zyxx$() {
  return Int32x4.zyxx;
}

int _Int32x4_zyxy$() {
  return Int32x4.zyxy;
}

int _Int32x4_zyxz$() {
  return Int32x4.zyxz;
}

int _Int32x4_zyxw$() {
  return Int32x4.zyxw;
}

int _Int32x4_zyyx$() {
  return Int32x4.zyyx;
}

int _Int32x4_zyyy$() {
  return Int32x4.zyyy;
}

int _Int32x4_zyyz$() {
  return Int32x4.zyyz;
}

int _Int32x4_zyyw$() {
  return Int32x4.zyyw;
}

int _Int32x4_zyzx$() {
  return Int32x4.zyzx;
}

int _Int32x4_zyzy$() {
  return Int32x4.zyzy;
}

int _Int32x4_zyzz$() {
  return Int32x4.zyzz;
}

int _Int32x4_zyzw$() {
  return Int32x4.zyzw;
}

int _Int32x4_zywx$() {
  return Int32x4.zywx;
}

int _Int32x4_zywy$() {
  return Int32x4.zywy;
}

int _Int32x4_zywz$() {
  return Int32x4.zywz;
}

int _Int32x4_zyww$() {
  return Int32x4.zyww;
}

int _Int32x4_zzxx$() {
  return Int32x4.zzxx;
}

int _Int32x4_zzxy$() {
  return Int32x4.zzxy;
}

int _Int32x4_zzxz$() {
  return Int32x4.zzxz;
}

int _Int32x4_zzxw$() {
  return Int32x4.zzxw;
}

int _Int32x4_zzyx$() {
  return Int32x4.zzyx;
}

int _Int32x4_zzyy$() {
  return Int32x4.zzyy;
}

int _Int32x4_zzyz$() {
  return Int32x4.zzyz;
}

int _Int32x4_zzyw$() {
  return Int32x4.zzyw;
}

int _Int32x4_zzzx$() {
  return Int32x4.zzzx;
}

int _Int32x4_zzzy$() {
  return Int32x4.zzzy;
}

int _Int32x4_zzzz$() {
  return Int32x4.zzzz;
}

int _Int32x4_zzzw$() {
  return Int32x4.zzzw;
}

int _Int32x4_zzwx$() {
  return Int32x4.zzwx;
}

int _Int32x4_zzwy$() {
  return Int32x4.zzwy;
}

int _Int32x4_zzwz$() {
  return Int32x4.zzwz;
}

int _Int32x4_zzww$() {
  return Int32x4.zzww;
}

int _Int32x4_zwxx$() {
  return Int32x4.zwxx;
}

int _Int32x4_zwxy$() {
  return Int32x4.zwxy;
}

int _Int32x4_zwxz$() {
  return Int32x4.zwxz;
}

int _Int32x4_zwxw$() {
  return Int32x4.zwxw;
}

int _Int32x4_zwyx$() {
  return Int32x4.zwyx;
}

int _Int32x4_zwyy$() {
  return Int32x4.zwyy;
}

int _Int32x4_zwyz$() {
  return Int32x4.zwyz;
}

int _Int32x4_zwyw$() {
  return Int32x4.zwyw;
}

int _Int32x4_zwzx$() {
  return Int32x4.zwzx;
}

int _Int32x4_zwzy$() {
  return Int32x4.zwzy;
}

int _Int32x4_zwzz$() {
  return Int32x4.zwzz;
}

int _Int32x4_zwzw$() {
  return Int32x4.zwzw;
}

int _Int32x4_zwwx$() {
  return Int32x4.zwwx;
}

int _Int32x4_zwwy$() {
  return Int32x4.zwwy;
}

int _Int32x4_zwwz$() {
  return Int32x4.zwwz;
}

int _Int32x4_zwww$() {
  return Int32x4.zwww;
}

int _Int32x4_wxxx$() {
  return Int32x4.wxxx;
}

int _Int32x4_wxxy$() {
  return Int32x4.wxxy;
}

int _Int32x4_wxxz$() {
  return Int32x4.wxxz;
}

int _Int32x4_wxxw$() {
  return Int32x4.wxxw;
}

int _Int32x4_wxyx$() {
  return Int32x4.wxyx;
}

int _Int32x4_wxyy$() {
  return Int32x4.wxyy;
}

int _Int32x4_wxyz$() {
  return Int32x4.wxyz;
}

int _Int32x4_wxyw$() {
  return Int32x4.wxyw;
}

int _Int32x4_wxzx$() {
  return Int32x4.wxzx;
}

int _Int32x4_wxzy$() {
  return Int32x4.wxzy;
}

int _Int32x4_wxzz$() {
  return Int32x4.wxzz;
}

int _Int32x4_wxzw$() {
  return Int32x4.wxzw;
}

int _Int32x4_wxwx$() {
  return Int32x4.wxwx;
}

int _Int32x4_wxwy$() {
  return Int32x4.wxwy;
}

int _Int32x4_wxwz$() {
  return Int32x4.wxwz;
}

int _Int32x4_wxww$() {
  return Int32x4.wxww;
}

int _Int32x4_wyxx$() {
  return Int32x4.wyxx;
}

int _Int32x4_wyxy$() {
  return Int32x4.wyxy;
}

int _Int32x4_wyxz$() {
  return Int32x4.wyxz;
}

int _Int32x4_wyxw$() {
  return Int32x4.wyxw;
}

int _Int32x4_wyyx$() {
  return Int32x4.wyyx;
}

int _Int32x4_wyyy$() {
  return Int32x4.wyyy;
}

int _Int32x4_wyyz$() {
  return Int32x4.wyyz;
}

int _Int32x4_wyyw$() {
  return Int32x4.wyyw;
}

int _Int32x4_wyzx$() {
  return Int32x4.wyzx;
}

int _Int32x4_wyzy$() {
  return Int32x4.wyzy;
}

int _Int32x4_wyzz$() {
  return Int32x4.wyzz;
}

int _Int32x4_wyzw$() {
  return Int32x4.wyzw;
}

int _Int32x4_wywx$() {
  return Int32x4.wywx;
}

int _Int32x4_wywy$() {
  return Int32x4.wywy;
}

int _Int32x4_wywz$() {
  return Int32x4.wywz;
}

int _Int32x4_wyww$() {
  return Int32x4.wyww;
}

int _Int32x4_wzxx$() {
  return Int32x4.wzxx;
}

int _Int32x4_wzxy$() {
  return Int32x4.wzxy;
}

int _Int32x4_wzxz$() {
  return Int32x4.wzxz;
}

int _Int32x4_wzxw$() {
  return Int32x4.wzxw;
}

int _Int32x4_wzyx$() {
  return Int32x4.wzyx;
}

int _Int32x4_wzyy$() {
  return Int32x4.wzyy;
}

int _Int32x4_wzyz$() {
  return Int32x4.wzyz;
}

int _Int32x4_wzyw$() {
  return Int32x4.wzyw;
}

int _Int32x4_wzzx$() {
  return Int32x4.wzzx;
}

int _Int32x4_wzzy$() {
  return Int32x4.wzzy;
}

int _Int32x4_wzzz$() {
  return Int32x4.wzzz;
}

int _Int32x4_wzzw$() {
  return Int32x4.wzzw;
}

int _Int32x4_wzwx$() {
  return Int32x4.wzwx;
}

int _Int32x4_wzwy$() {
  return Int32x4.wzwy;
}

int _Int32x4_wzwz$() {
  return Int32x4.wzwz;
}

int _Int32x4_wzww$() {
  return Int32x4.wzww;
}

int _Int32x4_wwxx$() {
  return Int32x4.wwxx;
}

int _Int32x4_wwxy$() {
  return Int32x4.wwxy;
}

int _Int32x4_wwxz$() {
  return Int32x4.wwxz;
}

int _Int32x4_wwxw$() {
  return Int32x4.wwxw;
}

int _Int32x4_wwyx$() {
  return Int32x4.wwyx;
}

int _Int32x4_wwyy$() {
  return Int32x4.wwyy;
}

int _Int32x4_wwyz$() {
  return Int32x4.wwyz;
}

int _Int32x4_wwyw$() {
  return Int32x4.wwyw;
}

int _Int32x4_wwzx$() {
  return Int32x4.wwzx;
}

int _Int32x4_wwzy$() {
  return Int32x4.wwzy;
}

int _Int32x4_wwzz$() {
  return Int32x4.wwzz;
}

int _Int32x4_wwzw$() {
  return Int32x4.wwzw;
}

int _Int32x4_wwwx$() {
  return Int32x4.wwwx;
}

int _Int32x4_wwwy$() {
  return Int32x4.wwwy;
}

int _Int32x4_wwwz$() {
  return Int32x4.wwwz;
}

int _Int32x4_wwww$() {
  return Int32x4.wwww;
}

Function _Int32x4_x$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.x;
    };
Function _Int32x4_y$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.y;
    };
Function _Int32x4_z$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.z;
    };
Function _Int32x4_w$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.w;
    };
Function _Int32x4_signMask$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.signMask;
    };
Function _Int32x4_flagX$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.flagX;
    };
Function _Int32x4_flagY$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.flagY;
    };
Function _Int32x4_flagZ$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.flagZ;
    };
Function _Int32x4_flagW$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    () {
      return target$.flagW;
    };
Function _Int32x4__$(m.Scope scope$) => (
      int x,
      int y,
      int z,
      int w,
    ) {
      return Int32x4(
        x,
        y,
        z,
        w,
      );
    };
Function _Int32x4_bool_$(m.Scope scope$) => Int32x4.bool;
Function _Int32x4_fromFloat32x4Bits_$(m.Scope scope$) =>
    Int32x4.fromFloat32x4Bits;
Function _Int32x4_bit_or$$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    (Int32x4 other$) => target$ | other$;
Function _Int32x4_bit_and$$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    (Int32x4 other$) => target$ & other$;
Function _Int32x4_bit_xor$$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    (Int32x4 other$) => target$ ^ other$;
Function _Int32x4_plus$$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    (Int32x4 other$) => target$ + other$;
Function _Int32x4_minus$$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    (Int32x4 other$) => target$ - other$;
Function _Int32x4_shuffle$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.shuffle;
Function _Int32x4_shuffleMix$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.shuffleMix;
Function _Int32x4_withX$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withX;
Function _Int32x4_withY$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withY;
Function _Int32x4_withZ$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withZ;
Function _Int32x4_withW$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withW;
Function _Int32x4_withFlagX$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withFlagX;
Function _Int32x4_withFlagY$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withFlagY;
Function _Int32x4_withFlagZ$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withFlagZ;
Function _Int32x4_withFlagW$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.withFlagW;
Function _Int32x4_select$(
  m.Scope scope$,
  Int32x4 target$,
) =>
    target$.select;
Function Float64x2_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as Float64x2;
Function Float64x2_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is Float64x2;
Function _Float64x2_x$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    () {
      return target$.x;
    };
Function _Float64x2_y$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    () {
      return target$.y;
    };
Function _Float64x2_signMask$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    () {
      return target$.signMask;
    };
Function _Float64x2__$(m.Scope scope$) => (
      double x,
      double y,
    ) {
      return Float64x2(
        x,
        y,
      );
    };
Function _Float64x2_splat_$(m.Scope scope$) => Float64x2.splat;
Function _Float64x2_zero_$(m.Scope scope$) => Float64x2.zero;
Function _Float64x2_fromFloat32x4_$(m.Scope scope$) => Float64x2.fromFloat32x4;
Function _Float64x2_plus$$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    (Float64x2 other$) => target$ + other$;
Function _Float64x2_unary_minus$$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    () => -target$;
Function _Float64x2_minus$$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    (Float64x2 other$) => target$ - other$;
Function _Float64x2_times$$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    (Float64x2 other$) => target$ * other$;
Function _Float64x2_over$$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    (Float64x2 other$) => target$ / other$;
Function _Float64x2_scale$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.scale;
Function _Float64x2_abs$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.abs;
Function _Float64x2_clamp$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.clamp;
Function _Float64x2_withX$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.withX;
Function _Float64x2_withY$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.withY;
Function _Float64x2_min$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.min;
Function _Float64x2_max$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.max;
Function _Float64x2_sqrt$(
  m.Scope scope$,
  Float64x2 target$,
) =>
    target$.sqrt;
Function UnmodifiableByteBufferView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableByteBufferView;
Function UnmodifiableByteBufferView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableByteBufferView;
Function _UnmodifiableByteBufferView__$(m.Scope scope$) => (ByteBuffer data) {
      return UnmodifiableByteBufferView(data);
    };
Function UnmodifiableByteDataView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableByteDataView;
Function UnmodifiableByteDataView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableByteDataView;
Function _UnmodifiableByteDataView__$(m.Scope scope$) => (ByteData data) {
      return UnmodifiableByteDataView(data);
    };
Function UnmodifiableUint8ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableUint8ListView;
Function UnmodifiableUint8ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableUint8ListView;
Function _UnmodifiableUint8ListView__$(m.Scope scope$) => (Uint8List list) {
      return UnmodifiableUint8ListView(list);
    };
Function UnmodifiableInt8ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableInt8ListView;
Function UnmodifiableInt8ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableInt8ListView;
Function _UnmodifiableInt8ListView__$(m.Scope scope$) => (Int8List list) {
      return UnmodifiableInt8ListView(list);
    };
Function UnmodifiableUint8ClampedListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableUint8ClampedListView;
Function UnmodifiableUint8ClampedListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableUint8ClampedListView;
Function _UnmodifiableUint8ClampedListView__$(m.Scope scope$) =>
    (Uint8ClampedList list) {
      return UnmodifiableUint8ClampedListView(list);
    };
Function UnmodifiableUint16ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableUint16ListView;
Function UnmodifiableUint16ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableUint16ListView;
Function _UnmodifiableUint16ListView__$(m.Scope scope$) => (Uint16List list) {
      return UnmodifiableUint16ListView(list);
    };
Function UnmodifiableInt16ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableInt16ListView;
Function UnmodifiableInt16ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableInt16ListView;
Function _UnmodifiableInt16ListView__$(m.Scope scope$) => (Int16List list) {
      return UnmodifiableInt16ListView(list);
    };
Function UnmodifiableUint32ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableUint32ListView;
Function UnmodifiableUint32ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableUint32ListView;
Function _UnmodifiableUint32ListView__$(m.Scope scope$) => (Uint32List list) {
      return UnmodifiableUint32ListView(list);
    };
Function UnmodifiableInt32ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableInt32ListView;
Function UnmodifiableInt32ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableInt32ListView;
Function _UnmodifiableInt32ListView__$(m.Scope scope$) => (Int32List list) {
      return UnmodifiableInt32ListView(list);
    };
Function UnmodifiableUint64ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableUint64ListView;
Function UnmodifiableUint64ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableUint64ListView;
Function _UnmodifiableUint64ListView__$(m.Scope scope$) => (Uint64List list) {
      return UnmodifiableUint64ListView(list);
    };
Function UnmodifiableInt64ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableInt64ListView;
Function UnmodifiableInt64ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableInt64ListView;
Function _UnmodifiableInt64ListView__$(m.Scope scope$) => (Int64List list) {
      return UnmodifiableInt64ListView(list);
    };
Function UnmodifiableInt32x4ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableInt32x4ListView;
Function UnmodifiableInt32x4ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableInt32x4ListView;
Function _UnmodifiableInt32x4ListView__$(m.Scope scope$) => (Int32x4List list) {
      return UnmodifiableInt32x4ListView(list);
    };
Function UnmodifiableFloat32x4ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableFloat32x4ListView;
Function UnmodifiableFloat32x4ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableFloat32x4ListView;
Function _UnmodifiableFloat32x4ListView__$(m.Scope scope$) =>
    (Float32x4List list) {
      return UnmodifiableFloat32x4ListView(list);
    };
Function UnmodifiableFloat64x2ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableFloat64x2ListView;
Function UnmodifiableFloat64x2ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableFloat64x2ListView;
Function _UnmodifiableFloat64x2ListView__$(m.Scope scope$) =>
    (Float64x2List list) {
      return UnmodifiableFloat64x2ListView(list);
    };
Function UnmodifiableFloat32ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableFloat32ListView;
Function UnmodifiableFloat32ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableFloat32ListView;
Function _UnmodifiableFloat32ListView__$(m.Scope scope$) => (Float32List list) {
      return UnmodifiableFloat32ListView(list);
    };
Function UnmodifiableFloat64ListView_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as UnmodifiableFloat64ListView;
Function UnmodifiableFloat64ListView_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is UnmodifiableFloat64ListView;
Function _UnmodifiableFloat64ListView__$(m.Scope scope$) => (Float64List list) {
      return UnmodifiableFloat64ListView(list);
    };
