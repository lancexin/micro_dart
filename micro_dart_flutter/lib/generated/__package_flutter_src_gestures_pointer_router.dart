// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/gestures/pointer_router.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/gestures/events.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/gestures/pointer_router.dart',
  {'PointerRouter.': _PointerRouter__$},
  {},
  {
    'PointerRouter': m.ClassMirror(
      'PointerRouter',
      {
        '#as': PointerRouter_as$,
        '#is': PointerRouter_is$,
        'debugGlobalRouteCount': _PointerRouter_debugGlobalRouteCount$,
        'addRoute': _PointerRouter_addRoute$,
        'removeRoute': _PointerRouter_removeRoute$,
        'addGlobalRoute': _PointerRouter_addGlobalRoute$,
        'removeGlobalRoute': _PointerRouter_removeGlobalRoute$,
        'route': _PointerRouter_route$,
      },
      {},
    )
  },
);
Function PointerRouter_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PointerRouter;
Function PointerRouter_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PointerRouter;
Function _PointerRouter_debugGlobalRouteCount$(
  m.Scope scope$,
  PointerRouter target$,
) =>
    () {
      return target$.debugGlobalRouteCount;
    };
Function _PointerRouter__$(m.Scope scope$) => () {
      return PointerRouter();
    };
Function _PointerRouter_addRoute$(
  m.Scope scope$,
  PointerRouter target$,
) =>
    (
      int pointer,
      m.FunctionPointer route, [
      Matrix4? transform,
    ]) {
      void routeProxy(PointerEvent route_event$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            route,
            [route_event$],
            {},
          );
      if (transform == null) {
        target$.addRoute(
          pointer,
          routeProxy,
        );
      }
      target$.addRoute(
        pointer,
        routeProxy,
        transform!,
      );
      return;
    };
Function _PointerRouter_removeRoute$(
  m.Scope scope$,
  PointerRouter target$,
) =>
    (
      int pointer,
      m.FunctionPointer route,
    ) {
      void routeProxy(PointerEvent route_event$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            route,
            [route_event$],
            {},
          );
      target$.removeRoute(
        pointer,
        routeProxy,
      );
    };
Function _PointerRouter_addGlobalRoute$(
  m.Scope scope$,
  PointerRouter target$,
) =>
    (
      m.FunctionPointer route, [
      Matrix4? transform,
    ]) {
      void routeProxy(PointerEvent route_event$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            route,
            [route_event$],
            {},
          );
      if (transform == null) {
        target$.addGlobalRoute(routeProxy);
      }
      target$.addGlobalRoute(
        routeProxy,
        transform!,
      );
      return;
    };
Function _PointerRouter_removeGlobalRoute$(
  m.Scope scope$,
  PointerRouter target$,
) =>
    (m.FunctionPointer route) {
      void routeProxy(PointerEvent route_event$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            route,
            [route_event$],
            {},
          );
      target$.removeGlobalRoute(routeProxy);
    };
Function _PointerRouter_route$(
  m.Scope scope$,
  PointerRouter target$,
) =>
    target$.route;
