import 'dart:js_util';
import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
Map<String,Function> getLibrary(m.MicroDartEngine engine) {
return {
'dart:js_util@@globalThis': (m.Scope scope)=>globalThis,
'dart:js_util@@objectPrototype': (m.Scope scope)=>objectPrototype,
'dart:js_util@NullRejectionException@#as': (m.Scope scope, target)=>()=>target as NullRejectionException,
'dart:js_util@NullRejectionException@#is': (m.Scope scope, target)=>()=>target is NullRejectionException,
'dart:js_util@NullRejectionException@isUndefined': (m.Scope scope, NullRejectionException target)=>target.isUndefined,
'dart:js_util@NullRejectionException@': (m.Scope scope)=>NullRejectionException,
'dart:js_util@NullRejectionException@toString': (m.Scope scope, NullRejectionException target)=>target.toString,
'dart:js_util@@jsify': (m.Scope scope)=>jsify,
'dart:js_util@@newObject': (m.Scope scope)=>newObject,
'dart:js_util@@hasProperty': (m.Scope scope)=>hasProperty,
'dart:js_util@@getProperty': (m.Scope scope)=>getProperty,
'dart:js_util@@setProperty': (m.Scope scope)=>setProperty,
'dart:js_util@@callMethod': (m.Scope scope)=>callMethod,
'dart:js_util@@instanceof': (m.Scope scope)=>instanceof,
'dart:js_util@@callConstructor': (m.Scope scope)=>callConstructor,
'dart:js_util@@add': (m.Scope scope)=>add,
'dart:js_util@@subtract': (m.Scope scope)=>subtract,
'dart:js_util@@multiply': (m.Scope scope)=>multiply,
'dart:js_util@@divide': (m.Scope scope)=>divide,
'dart:js_util@@exponentiate': (m.Scope scope)=>exponentiate,
'dart:js_util@@modulo': (m.Scope scope)=>modulo,
'dart:js_util@@equal': (m.Scope scope)=>equal,
'dart:js_util@@strictEqual': (m.Scope scope)=>strictEqual,
'dart:js_util@@notEqual': (m.Scope scope)=>notEqual,
'dart:js_util@@strictNotEqual': (m.Scope scope)=>strictNotEqual,
'dart:js_util@@greaterThan': (m.Scope scope)=>greaterThan,
'dart:js_util@@greaterThanOrEqual': (m.Scope scope)=>greaterThanOrEqual,
'dart:js_util@@lessThan': (m.Scope scope)=>lessThan,
'dart:js_util@@lessThanOrEqual': (m.Scope scope)=>lessThanOrEqual,
'dart:js_util@@typeofEquals': (m.Scope scope)=>typeofEquals,
'dart:js_util@@not': (m.Scope scope)=>not,
'dart:js_util@@isTruthy': (m.Scope scope)=>isTruthy,
'dart:js_util@@or': (m.Scope scope)=>or,
'dart:js_util@@and': (m.Scope scope)=>and,
'dart:js_util@@delete': (m.Scope scope)=>delete,
'dart:js_util@@unsignedRightShift': (m.Scope scope)=>unsignedRightShift,
'dart:js_util@@promiseToFuture': (m.Scope scope)=>promiseToFuture,
'dart:js_util@@instanceOfString': (m.Scope scope)=>instanceOfString,
'dart:js_util@@objectGetPrototypeOf': (m.Scope scope)=>objectGetPrototypeOf,
'dart:js_util@@objectKeys': (m.Scope scope)=>objectKeys,
'dart:js_util@@isJavaScriptArray': (m.Scope scope)=>isJavaScriptArray,
'dart:js_util@@isJavaScriptSimpleObject': (m.Scope scope)=>isJavaScriptSimpleObject,
'dart:js_util@@dartify': (m.Scope scope)=>dartify,
'dart:js_util@@createStaticInteropMock': (m.Scope scope)=>createStaticInteropMock,
'dart:js_util@@createDartExport': (m.Scope scope)=>createDartExport,
'dart:js_util@@allowInterop': (m.Scope scope)=>allowInterop,
'dart:js_util@@allowInteropCaptureThis': (m.Scope scope)=>allowInteropCaptureThis,

};
}