// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/raw_keyboard_android.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/keyboard_maps.g.dart';
import 'package:flutter/src/services/raw_keyboard.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/raw_keyboard_android.dart',
  {
    'RawKeyEventDataAndroid.modifierNone':
        _RawKeyEventDataAndroid_modifierNone$,
    'RawKeyEventDataAndroid.modifierAlt': _RawKeyEventDataAndroid_modifierAlt$,
    'RawKeyEventDataAndroid.modifierLeftAlt':
        _RawKeyEventDataAndroid_modifierLeftAlt$,
    'RawKeyEventDataAndroid.modifierRightAlt':
        _RawKeyEventDataAndroid_modifierRightAlt$,
    'RawKeyEventDataAndroid.modifierShift':
        _RawKeyEventDataAndroid_modifierShift$,
    'RawKeyEventDataAndroid.modifierLeftShift':
        _RawKeyEventDataAndroid_modifierLeftShift$,
    'RawKeyEventDataAndroid.modifierRightShift':
        _RawKeyEventDataAndroid_modifierRightShift$,
    'RawKeyEventDataAndroid.modifierSym': _RawKeyEventDataAndroid_modifierSym$,
    'RawKeyEventDataAndroid.modifierFunction':
        _RawKeyEventDataAndroid_modifierFunction$,
    'RawKeyEventDataAndroid.modifierControl':
        _RawKeyEventDataAndroid_modifierControl$,
    'RawKeyEventDataAndroid.modifierLeftControl':
        _RawKeyEventDataAndroid_modifierLeftControl$,
    'RawKeyEventDataAndroid.modifierRightControl':
        _RawKeyEventDataAndroid_modifierRightControl$,
    'RawKeyEventDataAndroid.modifierMeta':
        _RawKeyEventDataAndroid_modifierMeta$,
    'RawKeyEventDataAndroid.modifierLeftMeta':
        _RawKeyEventDataAndroid_modifierLeftMeta$,
    'RawKeyEventDataAndroid.modifierRightMeta':
        _RawKeyEventDataAndroid_modifierRightMeta$,
    'RawKeyEventDataAndroid.modifierCapsLock':
        _RawKeyEventDataAndroid_modifierCapsLock$,
    'RawKeyEventDataAndroid.modifierNumLock':
        _RawKeyEventDataAndroid_modifierNumLock$,
    'RawKeyEventDataAndroid.modifierScrollLock':
        _RawKeyEventDataAndroid_modifierScrollLock$,
    'RawKeyEventDataAndroid.': _RawKeyEventDataAndroid__$,
  },
  {},
  {
    'RawKeyEventDataAndroid': m.ClassMirror(
      'RawKeyEventDataAndroid',
      {
        '#as': RawKeyEventDataAndroid_as$,
        '#is': RawKeyEventDataAndroid_is$,
        'flags': _RawKeyEventDataAndroid_flags$,
        'codePoint': _RawKeyEventDataAndroid_codePoint$,
        'plainCodePoint': _RawKeyEventDataAndroid_plainCodePoint$,
        'keyCode': _RawKeyEventDataAndroid_keyCode$,
        'scanCode': _RawKeyEventDataAndroid_scanCode$,
        'metaState': _RawKeyEventDataAndroid_metaState$,
        'eventSource': _RawKeyEventDataAndroid_eventSource$,
        'vendorId': _RawKeyEventDataAndroid_vendorId$,
        'productId': _RawKeyEventDataAndroid_productId$,
        'deviceId': _RawKeyEventDataAndroid_deviceId$,
        'repeatCount': _RawKeyEventDataAndroid_repeatCount$,
        'keyLabel': _RawKeyEventDataAndroid_keyLabel$,
        'physicalKey': _RawKeyEventDataAndroid_physicalKey$,
        'logicalKey': _RawKeyEventDataAndroid_logicalKey$,
        'hashCode': _RawKeyEventDataAndroid_hashCode$,
        'isModifierPressed': _RawKeyEventDataAndroid_isModifierPressed$,
        'getModifierSide': _RawKeyEventDataAndroid_getModifierSide$,
        'debugFillProperties': _RawKeyEventDataAndroid_debugFillProperties$,
        '==': _RawKeyEventDataAndroid_eq$$,
      },
      {},
    )
  },
);
Function RawKeyEventDataAndroid_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RawKeyEventDataAndroid;
Function RawKeyEventDataAndroid_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RawKeyEventDataAndroid;
Function _RawKeyEventDataAndroid_flags$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.flags;
    };
Function _RawKeyEventDataAndroid_codePoint$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.codePoint;
    };
Function _RawKeyEventDataAndroid_plainCodePoint$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.plainCodePoint;
    };
Function _RawKeyEventDataAndroid_keyCode$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.keyCode;
    };
Function _RawKeyEventDataAndroid_scanCode$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.scanCode;
    };
Function _RawKeyEventDataAndroid_metaState$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.metaState;
    };
Function _RawKeyEventDataAndroid_eventSource$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.eventSource;
    };
Function _RawKeyEventDataAndroid_vendorId$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.vendorId;
    };
Function _RawKeyEventDataAndroid_productId$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.productId;
    };
Function _RawKeyEventDataAndroid_deviceId$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.deviceId;
    };
Function _RawKeyEventDataAndroid_repeatCount$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.repeatCount;
    };
int _RawKeyEventDataAndroid_modifierNone$() {
  return RawKeyEventDataAndroid.modifierNone;
}

int _RawKeyEventDataAndroid_modifierAlt$() {
  return RawKeyEventDataAndroid.modifierAlt;
}

int _RawKeyEventDataAndroid_modifierLeftAlt$() {
  return RawKeyEventDataAndroid.modifierLeftAlt;
}

int _RawKeyEventDataAndroid_modifierRightAlt$() {
  return RawKeyEventDataAndroid.modifierRightAlt;
}

int _RawKeyEventDataAndroid_modifierShift$() {
  return RawKeyEventDataAndroid.modifierShift;
}

int _RawKeyEventDataAndroid_modifierLeftShift$() {
  return RawKeyEventDataAndroid.modifierLeftShift;
}

int _RawKeyEventDataAndroid_modifierRightShift$() {
  return RawKeyEventDataAndroid.modifierRightShift;
}

int _RawKeyEventDataAndroid_modifierSym$() {
  return RawKeyEventDataAndroid.modifierSym;
}

int _RawKeyEventDataAndroid_modifierFunction$() {
  return RawKeyEventDataAndroid.modifierFunction;
}

int _RawKeyEventDataAndroid_modifierControl$() {
  return RawKeyEventDataAndroid.modifierControl;
}

int _RawKeyEventDataAndroid_modifierLeftControl$() {
  return RawKeyEventDataAndroid.modifierLeftControl;
}

int _RawKeyEventDataAndroid_modifierRightControl$() {
  return RawKeyEventDataAndroid.modifierRightControl;
}

int _RawKeyEventDataAndroid_modifierMeta$() {
  return RawKeyEventDataAndroid.modifierMeta;
}

int _RawKeyEventDataAndroid_modifierLeftMeta$() {
  return RawKeyEventDataAndroid.modifierLeftMeta;
}

int _RawKeyEventDataAndroid_modifierRightMeta$() {
  return RawKeyEventDataAndroid.modifierRightMeta;
}

int _RawKeyEventDataAndroid_modifierCapsLock$() {
  return RawKeyEventDataAndroid.modifierCapsLock;
}

int _RawKeyEventDataAndroid_modifierNumLock$() {
  return RawKeyEventDataAndroid.modifierNumLock;
}

int _RawKeyEventDataAndroid_modifierScrollLock$() {
  return RawKeyEventDataAndroid.modifierScrollLock;
}

Function _RawKeyEventDataAndroid_keyLabel$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.keyLabel;
    };
Function _RawKeyEventDataAndroid_physicalKey$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.physicalKey;
    };
Function _RawKeyEventDataAndroid_logicalKey$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.logicalKey;
    };
Function _RawKeyEventDataAndroid_hashCode$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    () {
      return target$.hashCode;
    };
Function _RawKeyEventDataAndroid__$(m.Scope scope$) => ({
      int? flags,
      int? codePoint,
      int? plainCodePoint,
      int? keyCode,
      int? scanCode,
      int? metaState,
      int? eventSource,
      int? vendorId,
      int? productId,
      int? deviceId,
      int? repeatCount,
    }) {
      return RawKeyEventDataAndroid(
        codePoint: codePoint ?? 0,
        deviceId: deviceId ?? 0,
        eventSource: eventSource ?? 0,
        flags: flags ?? 0,
        keyCode: keyCode ?? 0,
        metaState: metaState ?? 0,
        plainCodePoint: plainCodePoint ?? 0,
        productId: productId ?? 0,
        repeatCount: repeatCount ?? 0,
        scanCode: scanCode ?? 0,
        vendorId: vendorId ?? 0,
      );
    };
Function _RawKeyEventDataAndroid_isModifierPressed$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    target$.isModifierPressed;
Function _RawKeyEventDataAndroid_getModifierSide$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    target$.getModifierSide;
Function _RawKeyEventDataAndroid_debugFillProperties$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    target$.debugFillProperties;
Function _RawKeyEventDataAndroid_eq$$(
  m.Scope scope$,
  RawKeyEventDataAndroid target$,
) =>
    (Object other$) => target$ == other$;
