// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/context_menu_button_item.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/context_menu_button_item.dart',
  {
    'ContextMenuButtonType.cut': _ContextMenuButtonType_cut$,
    'ContextMenuButtonType.copy': _ContextMenuButtonType_copy$,
    'ContextMenuButtonType.paste': _ContextMenuButtonType_paste$,
    'ContextMenuButtonType.selectAll': _ContextMenuButtonType_selectAll$,
    'ContextMenuButtonType.delete': _ContextMenuButtonType_delete$,
    'ContextMenuButtonType.custom': _ContextMenuButtonType_custom$,
    'ContextMenuButtonType.values': _ContextMenuButtonType_values$,
  },
  {},
  {
    'ContextMenuButtonItem': m.ClassMirror(
      'ContextMenuButtonItem',
      {
        'onPressed': _ContextMenuButtonItem_onPressed$,
        'type': _ContextMenuButtonItem_type$,
        'label': _ContextMenuButtonItem_label$,
        'hashCode': _ContextMenuButtonItem_hashCode$,
        'toString': _ContextMenuButtonItem_toString$,
      },
      {},
    ),
    'ContextMenuButtonType': m.ClassMirror(
      'ContextMenuButtonType',
      {},
      {},
    ),
  },
);
void Function() _ContextMenuButtonItem_onPressed$(
    ContextMenuButtonItem target) {
  return target.onPressed;
}

ContextMenuButtonType _ContextMenuButtonItem_type$(
    ContextMenuButtonItem target) {
  return target.type;
}

String? _ContextMenuButtonItem_label$(ContextMenuButtonItem target) {
  return target.label;
}

int _ContextMenuButtonItem_hashCode$(ContextMenuButtonItem target) {
  return target.hashCode;
}

Function _ContextMenuButtonItem_toString$(
  m.Scope scope,
  ContextMenuButtonItem target,
) =>
    target.toString;
ContextMenuButtonType _ContextMenuButtonType_cut$() {
  return ContextMenuButtonType.cut;
}

ContextMenuButtonType _ContextMenuButtonType_copy$() {
  return ContextMenuButtonType.copy;
}

ContextMenuButtonType _ContextMenuButtonType_paste$() {
  return ContextMenuButtonType.paste;
}

ContextMenuButtonType _ContextMenuButtonType_selectAll$() {
  return ContextMenuButtonType.selectAll;
}

ContextMenuButtonType _ContextMenuButtonType_delete$() {
  return ContextMenuButtonType.delete;
}

ContextMenuButtonType _ContextMenuButtonType_custom$() {
  return ContextMenuButtonType.custom;
}

List<ContextMenuButtonType> _ContextMenuButtonType_values$() {
  return ContextMenuButtonType.values;
}
