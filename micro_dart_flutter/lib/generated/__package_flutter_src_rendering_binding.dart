// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/binding.dart';
import 'dart:developer';
import 'dart:ui' show SemanticsUpdate;
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/semantics.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/debug.dart';
import 'package:flutter/src/rendering/mouse_tracker.dart';
import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/rendering/service_extensions.dart';
import 'package:flutter/src/rendering/view.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/binding.dart',
  {
    'RenderingFlutterBinding.ensureInitialized':
        _RenderingFlutterBinding_ensureInitialized$,
    'debugDumpRenderTree': _debugDumpRenderTree$,
    'debugDumpLayerTree': _debugDumpLayerTree$,
    'debugDumpSemanticsTree': _debugDumpSemanticsTree$,
  },
  {},
  {
    'RenderingFlutterBinding': m.ClassMirror(
      'RenderingFlutterBinding',
      {
        '#as': RenderingFlutterBinding_as$,
        '#is': RenderingFlutterBinding_is$,
      },
      {},
    )
  },
);
Function RenderingFlutterBinding_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderingFlutterBinding;
Function RenderingFlutterBinding_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderingFlutterBinding;
Function _RenderingFlutterBinding_ensureInitialized$(m.Scope scope) =>
    RenderingFlutterBinding.ensureInitialized;
Function _debugDumpRenderTree$(m.Scope scope) => debugDumpRenderTree;
Function _debugDumpLayerTree$(m.Scope scope) => debugDumpLayerTree;
Function _debugDumpSemanticsTree$(m.Scope scope) => debugDumpSemanticsTree;
