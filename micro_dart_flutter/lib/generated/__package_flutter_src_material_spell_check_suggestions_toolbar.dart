// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/spell_check_suggestions_toolbar.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart'
    show SelectionChangedCause, SuggestionSpan;
import 'package:flutter/src/material/adaptive_text_selection_toolbar.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/spell_check_suggestions_toolbar_layout_delegate.dart';
import 'package:flutter/src/material/text_selection_toolbar_text_button.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/spell_check_suggestions_toolbar.dart',
  {
    'SpellCheckSuggestionsToolbar.': _SpellCheckSuggestionsToolbar__$,
    'SpellCheckSuggestionsToolbar.editableText':
        _SpellCheckSuggestionsToolbar_editableText_$,
    'SpellCheckSuggestionsToolbar.buildButtonItems':
        _SpellCheckSuggestionsToolbar_buildButtonItems$,
    'SpellCheckSuggestionsToolbar.getToolbarAnchor':
        _SpellCheckSuggestionsToolbar_getToolbarAnchor$,
  },
  {},
  {
    'SpellCheckSuggestionsToolbar': m.ClassMirror(
      'SpellCheckSuggestionsToolbar',
      {
        '#as': SpellCheckSuggestionsToolbar_as$,
        '#is': SpellCheckSuggestionsToolbar_is$,
        'anchor': _SpellCheckSuggestionsToolbar_anchor$,
        'buttonItems': _SpellCheckSuggestionsToolbar_buttonItems$,
        'build': _SpellCheckSuggestionsToolbar_build$,
      },
      {},
    )
  },
);
Function SpellCheckSuggestionsToolbar_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as SpellCheckSuggestionsToolbar;
Function SpellCheckSuggestionsToolbar_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is SpellCheckSuggestionsToolbar;
Function _SpellCheckSuggestionsToolbar_anchor$(
  m.Scope scope$,
  SpellCheckSuggestionsToolbar target$,
) =>
    () {
      return target$.anchor;
    };
Function _SpellCheckSuggestionsToolbar_buttonItems$(
  m.Scope scope$,
  SpellCheckSuggestionsToolbar target$,
) =>
    () {
      return target$.buttonItems;
    };
Function _SpellCheckSuggestionsToolbar__$(m.Scope scope$) => ({
      Key? key,
      required Offset anchor,
      required List buttonItems,
    }) {
      return SpellCheckSuggestionsToolbar(
        anchor: anchor,
        buttonItems: List.from(buttonItems),
        key: key,
      );
    };
Function _SpellCheckSuggestionsToolbar_editableText_$(m.Scope scope$) =>
    SpellCheckSuggestionsToolbar.editableText;
Function _SpellCheckSuggestionsToolbar_buildButtonItems$(m.Scope scope$) =>
    SpellCheckSuggestionsToolbar.buildButtonItems;
Function _SpellCheckSuggestionsToolbar_getToolbarAnchor$(m.Scope scope$) =>
    SpellCheckSuggestionsToolbar.getToolbarAnchor;
Function _SpellCheckSuggestionsToolbar_build$(
  m.Scope scope$,
  SpellCheckSuggestionsToolbar target$,
) =>
    target$.build;
