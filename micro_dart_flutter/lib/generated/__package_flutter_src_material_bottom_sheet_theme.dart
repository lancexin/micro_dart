// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_sheet_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_sheet_theme.dart',
  {
    'BottomSheetThemeData.': _BottomSheetThemeData__$,
    'BottomSheetThemeData.lerp': _BottomSheetThemeData_lerp$,
  },
  {},
  {
    'BottomSheetThemeData': m.ClassMirror(
      'BottomSheetThemeData',
      {
        '#as': BottomSheetThemeData_as$,
        '#is': BottomSheetThemeData_is$,
        'backgroundColor': _BottomSheetThemeData_backgroundColor$,
        'surfaceTintColor': _BottomSheetThemeData_surfaceTintColor$,
        'elevation': _BottomSheetThemeData_elevation$,
        'modalBackgroundColor': _BottomSheetThemeData_modalBackgroundColor$,
        'modalBarrierColor': _BottomSheetThemeData_modalBarrierColor$,
        'shadowColor': _BottomSheetThemeData_shadowColor$,
        'modalElevation': _BottomSheetThemeData_modalElevation$,
        'shape': _BottomSheetThemeData_shape$,
        'showDragHandle': _BottomSheetThemeData_showDragHandle$,
        'dragHandleColor': _BottomSheetThemeData_dragHandleColor$,
        'dragHandleSize': _BottomSheetThemeData_dragHandleSize$,
        'clipBehavior': _BottomSheetThemeData_clipBehavior$,
        'constraints': _BottomSheetThemeData_constraints$,
        'hashCode': _BottomSheetThemeData_hashCode$,
        'copyWith': _BottomSheetThemeData_copyWith$,
        '==': _BottomSheetThemeData_eq$$,
        'debugFillProperties': _BottomSheetThemeData_debugFillProperties$,
      },
      {},
    )
  },
);
Function BottomSheetThemeData_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as BottomSheetThemeData;
Function BottomSheetThemeData_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is BottomSheetThemeData;
Function _BottomSheetThemeData_backgroundColor$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.backgroundColor;
    };
Function _BottomSheetThemeData_surfaceTintColor$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.surfaceTintColor;
    };
Function _BottomSheetThemeData_elevation$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.elevation;
    };
Function _BottomSheetThemeData_modalBackgroundColor$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.modalBackgroundColor;
    };
Function _BottomSheetThemeData_modalBarrierColor$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.modalBarrierColor;
    };
Function _BottomSheetThemeData_shadowColor$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.shadowColor;
    };
Function _BottomSheetThemeData_modalElevation$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.modalElevation;
    };
Function _BottomSheetThemeData_shape$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.shape;
    };
Function _BottomSheetThemeData_showDragHandle$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.showDragHandle;
    };
Function _BottomSheetThemeData_dragHandleColor$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.dragHandleColor;
    };
Function _BottomSheetThemeData_dragHandleSize$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.dragHandleSize;
    };
Function _BottomSheetThemeData_clipBehavior$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.clipBehavior;
    };
Function _BottomSheetThemeData_constraints$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.constraints;
    };
Function _BottomSheetThemeData_hashCode$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    () {
      return target$.hashCode;
    };
Function _BottomSheetThemeData__$(m.Scope scope$) => ({
      Color? backgroundColor,
      Color? surfaceTintColor,
      double? elevation,
      Color? modalBackgroundColor,
      Color? modalBarrierColor,
      Color? shadowColor,
      double? modalElevation,
      ShapeBorder? shape,
      bool? showDragHandle,
      Color? dragHandleColor,
      Size? dragHandleSize,
      Clip? clipBehavior,
      BoxConstraints? constraints,
    }) {
      return BottomSheetThemeData(
        backgroundColor: backgroundColor,
        clipBehavior: clipBehavior,
        constraints: constraints,
        dragHandleColor: dragHandleColor,
        dragHandleSize: dragHandleSize,
        elevation: elevation,
        modalBackgroundColor: modalBackgroundColor,
        modalBarrierColor: modalBarrierColor,
        modalElevation: modalElevation,
        shadowColor: shadowColor,
        shape: shape,
        showDragHandle: showDragHandle,
        surfaceTintColor: surfaceTintColor,
      );
    };
Function _BottomSheetThemeData_copyWith$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    target$.copyWith;
Function _BottomSheetThemeData_lerp$(m.Scope scope$) =>
    BottomSheetThemeData.lerp;
Function _BottomSheetThemeData_eq$$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    (Object other$) => target$ == other$;
Function _BottomSheetThemeData_debugFillProperties$(
  m.Scope scope$,
  BottomSheetThemeData target$,
) =>
    target$.debugFillProperties;
