// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_sheet_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_sheet_theme.dart',
  {'BottomSheetThemeData.lerp': _BottomSheetThemeData_lerp$},
  {},
  {
    'BottomSheetThemeData': m.ClassMirror(
      'BottomSheetThemeData',
      {
        'backgroundColor': _BottomSheetThemeData_backgroundColor$,
        'surfaceTintColor': _BottomSheetThemeData_surfaceTintColor$,
        'elevation': _BottomSheetThemeData_elevation$,
        'modalBackgroundColor': _BottomSheetThemeData_modalBackgroundColor$,
        'modalBarrierColor': _BottomSheetThemeData_modalBarrierColor$,
        'shadowColor': _BottomSheetThemeData_shadowColor$,
        'modalElevation': _BottomSheetThemeData_modalElevation$,
        'shape': _BottomSheetThemeData_shape$,
        'showDragHandle': _BottomSheetThemeData_showDragHandle$,
        'dragHandleColor': _BottomSheetThemeData_dragHandleColor$,
        'dragHandleSize': _BottomSheetThemeData_dragHandleSize$,
        'clipBehavior': _BottomSheetThemeData_clipBehavior$,
        'constraints': _BottomSheetThemeData_constraints$,
        'hashCode': _BottomSheetThemeData_hashCode$,
        'copyWith': _BottomSheetThemeData_copyWith$,
        'debugFillProperties': _BottomSheetThemeData_debugFillProperties$,
      },
      {},
    )
  },
);
Color? _BottomSheetThemeData_backgroundColor$(BottomSheetThemeData target) {
  return target.backgroundColor;
}

Color? _BottomSheetThemeData_surfaceTintColor$(BottomSheetThemeData target) {
  return target.surfaceTintColor;
}

double? _BottomSheetThemeData_elevation$(BottomSheetThemeData target) {
  return target.elevation;
}

Color? _BottomSheetThemeData_modalBackgroundColor$(
    BottomSheetThemeData target) {
  return target.modalBackgroundColor;
}

Color? _BottomSheetThemeData_modalBarrierColor$(BottomSheetThemeData target) {
  return target.modalBarrierColor;
}

Color? _BottomSheetThemeData_shadowColor$(BottomSheetThemeData target) {
  return target.shadowColor;
}

double? _BottomSheetThemeData_modalElevation$(BottomSheetThemeData target) {
  return target.modalElevation;
}

ShapeBorder? _BottomSheetThemeData_shape$(BottomSheetThemeData target) {
  return target.shape;
}

bool? _BottomSheetThemeData_showDragHandle$(BottomSheetThemeData target) {
  return target.showDragHandle;
}

Color? _BottomSheetThemeData_dragHandleColor$(BottomSheetThemeData target) {
  return target.dragHandleColor;
}

Size? _BottomSheetThemeData_dragHandleSize$(BottomSheetThemeData target) {
  return target.dragHandleSize;
}

Clip? _BottomSheetThemeData_clipBehavior$(BottomSheetThemeData target) {
  return target.clipBehavior;
}

BoxConstraints? _BottomSheetThemeData_constraints$(
    BottomSheetThemeData target) {
  return target.constraints;
}

int _BottomSheetThemeData_hashCode$(BottomSheetThemeData target) {
  return target.hashCode;
}

Function _BottomSheetThemeData_copyWith$(
  m.Scope scope,
  BottomSheetThemeData target,
) =>
    target.copyWith;
Function _BottomSheetThemeData_lerp$(m.Scope scope) =>
    BottomSheetThemeData.lerp;
Function _BottomSheetThemeData_debugFillProperties$(
  m.Scope scope,
  BottomSheetThemeData target,
) =>
    target.debugFillProperties;
