// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/sliver_padding.dart';
import 'dart:math';
import 'package:vector_math/vector_math_64.dart';
import 'package:flutter/src/rendering/debug.dart';
import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/rendering/sliver.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/sliver_padding.dart',
  {},
  {},
  {
    'RenderSliverEdgeInsetsPadding': m.ClassMirror(
      'RenderSliverEdgeInsetsPadding',
      {
        '#as': RenderSliverEdgeInsetsPadding_as$,
        '#is': RenderSliverEdgeInsetsPadding_is$,
        'resolvedPadding': _RenderSliverEdgeInsetsPadding_resolvedPadding$,
        'beforePadding': _RenderSliverEdgeInsetsPadding_beforePadding$,
        'afterPadding': _RenderSliverEdgeInsetsPadding_afterPadding$,
        'mainAxisPadding': _RenderSliverEdgeInsetsPadding_mainAxisPadding$,
        'crossAxisPadding': _RenderSliverEdgeInsetsPadding_crossAxisPadding$,
        'setupParentData': _RenderSliverEdgeInsetsPadding_setupParentData$,
        'performLayout': _RenderSliverEdgeInsetsPadding_performLayout$,
        'hitTestChildren': _RenderSliverEdgeInsetsPadding_hitTestChildren$,
        'childMainAxisPosition':
            _RenderSliverEdgeInsetsPadding_childMainAxisPosition$,
        'childCrossAxisPosition':
            _RenderSliverEdgeInsetsPadding_childCrossAxisPosition$,
        'childScrollOffset': _RenderSliverEdgeInsetsPadding_childScrollOffset$,
        'applyPaintTransform':
            _RenderSliverEdgeInsetsPadding_applyPaintTransform$,
        'paint': _RenderSliverEdgeInsetsPadding_paint$,
        'debugPaint': _RenderSliverEdgeInsetsPadding_debugPaint$,
      },
      {},
    ),
    'RenderSliverPadding': m.ClassMirror(
      'RenderSliverPadding',
      {
        '#as': RenderSliverPadding_as$,
        '#is': RenderSliverPadding_is$,
        'resolvedPadding': _RenderSliverPadding_resolvedPadding$,
        'padding': _RenderSliverPadding_padding$,
        'textDirection': _RenderSliverPadding_textDirection$,
        'performLayout': _RenderSliverPadding_performLayout$,
        'debugFillProperties': _RenderSliverPadding_debugFillProperties$,
      },
      {
        'padding': _RenderSliverPadding_padding_set$,
        'textDirection': _RenderSliverPadding_textDirection_set$,
      },
    ),
  },
);
Function RenderSliverEdgeInsetsPadding_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderSliverEdgeInsetsPadding;
Function RenderSliverEdgeInsetsPadding_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderSliverEdgeInsetsPadding;
EdgeInsets? _RenderSliverEdgeInsetsPadding_resolvedPadding$(
    RenderSliverEdgeInsetsPadding target) {
  return target.resolvedPadding;
}

double _RenderSliverEdgeInsetsPadding_beforePadding$(
    RenderSliverEdgeInsetsPadding target) {
  return target.beforePadding;
}

double _RenderSliverEdgeInsetsPadding_afterPadding$(
    RenderSliverEdgeInsetsPadding target) {
  return target.afterPadding;
}

double _RenderSliverEdgeInsetsPadding_mainAxisPadding$(
    RenderSliverEdgeInsetsPadding target) {
  return target.mainAxisPadding;
}

double _RenderSliverEdgeInsetsPadding_crossAxisPadding$(
    RenderSliverEdgeInsetsPadding target) {
  return target.crossAxisPadding;
}

Function _RenderSliverEdgeInsetsPadding_setupParentData$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.setupParentData;
Function _RenderSliverEdgeInsetsPadding_performLayout$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.performLayout;
Function _RenderSliverEdgeInsetsPadding_hitTestChildren$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.hitTestChildren;
Function _RenderSliverEdgeInsetsPadding_childMainAxisPosition$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.childMainAxisPosition;
Function _RenderSliverEdgeInsetsPadding_childCrossAxisPosition$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.childCrossAxisPosition;
Function _RenderSliverEdgeInsetsPadding_childScrollOffset$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.childScrollOffset;
Function _RenderSliverEdgeInsetsPadding_applyPaintTransform$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.applyPaintTransform;
Function _RenderSliverEdgeInsetsPadding_paint$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.paint;
Function _RenderSliverEdgeInsetsPadding_debugPaint$(
  m.Scope scope,
  RenderSliverEdgeInsetsPadding target,
) =>
    target.debugPaint;
Function RenderSliverPadding_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderSliverPadding;
Function RenderSliverPadding_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderSliverPadding;
EdgeInsets? _RenderSliverPadding_resolvedPadding$(RenderSliverPadding target) {
  return target.resolvedPadding;
}

EdgeInsetsGeometry _RenderSliverPadding_padding$(RenderSliverPadding target) {
  return target.padding;
}

void _RenderSliverPadding_padding_set$(
  RenderSliverPadding target,
  EdgeInsetsGeometry other,
) {
  target.padding = other;
}

TextDirection? _RenderSliverPadding_textDirection$(RenderSliverPadding target) {
  return target.textDirection;
}

void _RenderSliverPadding_textDirection_set$(
  RenderSliverPadding target,
  TextDirection? other,
) {
  target.textDirection = other;
}

Function _RenderSliverPadding_performLayout$(
  m.Scope scope,
  RenderSliverPadding target,
) =>
    target.performLayout;
Function _RenderSliverPadding_debugFillProperties$(
  m.Scope scope,
  RenderSliverPadding target,
) =>
    target.debugFillProperties;
