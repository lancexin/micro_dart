// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/text_selection_toolbar.dart';
import 'dart:math';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart' show listEquals;
import 'package:flutter/rendering.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/icon_button.dart';
import 'package:flutter/src/material/icons.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/material/material_localizations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/text_selection_toolbar.dart',
  {
    'TextSelectionToolbar.kHandleSize': _TextSelectionToolbar_kHandleSize$,
    'TextSelectionToolbar.kToolbarContentDistanceBelow':
        _TextSelectionToolbar_kToolbarContentDistanceBelow$,
  },
  {},
  {
    'TextSelectionToolbar': m.ClassMirror(
      'TextSelectionToolbar',
      {
        '#as': TextSelectionToolbar_as$,
        '#is': TextSelectionToolbar_is$,
        'anchorAbove': _TextSelectionToolbar_anchorAbove$,
        'anchorBelow': _TextSelectionToolbar_anchorBelow$,
        'children': _TextSelectionToolbar_children$,
        'toolbarBuilder': _TextSelectionToolbar_toolbarBuilder$,
        'build': _TextSelectionToolbar_build$,
      },
      {},
    )
  },
);
Function TextSelectionToolbar_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as TextSelectionToolbar;
Function TextSelectionToolbar_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is TextSelectionToolbar;
Offset _TextSelectionToolbar_anchorAbove$(TextSelectionToolbar target) {
  return target.anchorAbove;
}

Offset _TextSelectionToolbar_anchorBelow$(TextSelectionToolbar target) {
  return target.anchorBelow;
}

List<Widget> _TextSelectionToolbar_children$(TextSelectionToolbar target) {
  return target.children;
}

Widget Function(BuildContext, Widget) _TextSelectionToolbar_toolbarBuilder$(
    TextSelectionToolbar target) {
  return target.toolbarBuilder;
}

double _TextSelectionToolbar_kHandleSize$() {
  return TextSelectionToolbar.kHandleSize;
}

double _TextSelectionToolbar_kToolbarContentDistanceBelow$() {
  return TextSelectionToolbar.kToolbarContentDistanceBelow;
}

Function _TextSelectionToolbar_build$(
  m.Scope scope,
  TextSelectionToolbar target,
) =>
    target.build;
