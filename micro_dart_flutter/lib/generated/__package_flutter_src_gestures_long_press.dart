// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/gestures/long_press.dart';
import 'package:flutter/src/gestures/constants.dart';
import 'package:flutter/src/gestures/events.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:flutter/src/gestures/velocity_tracker.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/gestures/long_press.dart',
  {
    'LongPressDownDetails.': _LongPressDownDetails__$,
    'LongPressStartDetails.': _LongPressStartDetails__$,
    'LongPressMoveUpdateDetails.': _LongPressMoveUpdateDetails__$,
    'LongPressEndDetails.': _LongPressEndDetails__$,
    'LongPressGestureRecognizer.': _LongPressGestureRecognizer__$,
  },
  {},
  {
    'LongPressDownDetails': m.ClassMirror(
      'LongPressDownDetails',
      {
        '#as': LongPressDownDetails_as$,
        '#is': LongPressDownDetails_is$,
        'globalPosition': _LongPressDownDetails_globalPosition$,
        'kind': _LongPressDownDetails_kind$,
        'localPosition': _LongPressDownDetails_localPosition$,
      },
      {},
    ),
    'LongPressStartDetails': m.ClassMirror(
      'LongPressStartDetails',
      {
        '#as': LongPressStartDetails_as$,
        '#is': LongPressStartDetails_is$,
        'globalPosition': _LongPressStartDetails_globalPosition$,
        'localPosition': _LongPressStartDetails_localPosition$,
      },
      {},
    ),
    'LongPressMoveUpdateDetails': m.ClassMirror(
      'LongPressMoveUpdateDetails',
      {
        '#as': LongPressMoveUpdateDetails_as$,
        '#is': LongPressMoveUpdateDetails_is$,
        'globalPosition': _LongPressMoveUpdateDetails_globalPosition$,
        'localPosition': _LongPressMoveUpdateDetails_localPosition$,
        'offsetFromOrigin': _LongPressMoveUpdateDetails_offsetFromOrigin$,
        'localOffsetFromOrigin':
            _LongPressMoveUpdateDetails_localOffsetFromOrigin$,
      },
      {},
    ),
    'LongPressEndDetails': m.ClassMirror(
      'LongPressEndDetails',
      {
        '#as': LongPressEndDetails_as$,
        '#is': LongPressEndDetails_is$,
        'globalPosition': _LongPressEndDetails_globalPosition$,
        'localPosition': _LongPressEndDetails_localPosition$,
        'velocity': _LongPressEndDetails_velocity$,
      },
      {},
    ),
    'LongPressGestureRecognizer': m.ClassMirror(
      'LongPressGestureRecognizer',
      {
        '#as': LongPressGestureRecognizer_as$,
        '#is': LongPressGestureRecognizer_is$,
        'onLongPressDown': _LongPressGestureRecognizer_onLongPressDown$,
        'onLongPressCancel': _LongPressGestureRecognizer_onLongPressCancel$,
        'onLongPress': _LongPressGestureRecognizer_onLongPress$,
        'onLongPressStart': _LongPressGestureRecognizer_onLongPressStart$,
        'onLongPressMoveUpdate':
            _LongPressGestureRecognizer_onLongPressMoveUpdate$,
        'onLongPressUp': _LongPressGestureRecognizer_onLongPressUp$,
        'onLongPressEnd': _LongPressGestureRecognizer_onLongPressEnd$,
        'onSecondaryLongPressDown':
            _LongPressGestureRecognizer_onSecondaryLongPressDown$,
        'onSecondaryLongPressCancel':
            _LongPressGestureRecognizer_onSecondaryLongPressCancel$,
        'onSecondaryLongPress':
            _LongPressGestureRecognizer_onSecondaryLongPress$,
        'onSecondaryLongPressStart':
            _LongPressGestureRecognizer_onSecondaryLongPressStart$,
        'onSecondaryLongPressMoveUpdate':
            _LongPressGestureRecognizer_onSecondaryLongPressMoveUpdate$,
        'onSecondaryLongPressUp':
            _LongPressGestureRecognizer_onSecondaryLongPressUp$,
        'onSecondaryLongPressEnd':
            _LongPressGestureRecognizer_onSecondaryLongPressEnd$,
        'onTertiaryLongPressDown':
            _LongPressGestureRecognizer_onTertiaryLongPressDown$,
        'onTertiaryLongPressCancel':
            _LongPressGestureRecognizer_onTertiaryLongPressCancel$,
        'onTertiaryLongPress': _LongPressGestureRecognizer_onTertiaryLongPress$,
        'onTertiaryLongPressStart':
            _LongPressGestureRecognizer_onTertiaryLongPressStart$,
        'onTertiaryLongPressMoveUpdate':
            _LongPressGestureRecognizer_onTertiaryLongPressMoveUpdate$,
        'onTertiaryLongPressUp':
            _LongPressGestureRecognizer_onTertiaryLongPressUp$,
        'onTertiaryLongPressEnd':
            _LongPressGestureRecognizer_onTertiaryLongPressEnd$,
        'debugDescription': _LongPressGestureRecognizer_debugDescription$,
        'isPointerAllowed': _LongPressGestureRecognizer_isPointerAllowed$,
        'didExceedDeadline': _LongPressGestureRecognizer_didExceedDeadline$,
        'handlePrimaryPointer':
            _LongPressGestureRecognizer_handlePrimaryPointer$,
        'resolve': _LongPressGestureRecognizer_resolve$,
        'acceptGesture': _LongPressGestureRecognizer_acceptGesture$,
      },
      {
        'onLongPressDown': _LongPressGestureRecognizer_onLongPressDown_set$,
        'onLongPressCancel': _LongPressGestureRecognizer_onLongPressCancel_set$,
        'onLongPress': _LongPressGestureRecognizer_onLongPress_set$,
        'onLongPressStart': _LongPressGestureRecognizer_onLongPressStart_set$,
        'onLongPressMoveUpdate':
            _LongPressGestureRecognizer_onLongPressMoveUpdate_set$,
        'onLongPressUp': _LongPressGestureRecognizer_onLongPressUp_set$,
        'onLongPressEnd': _LongPressGestureRecognizer_onLongPressEnd_set$,
        'onSecondaryLongPressDown':
            _LongPressGestureRecognizer_onSecondaryLongPressDown_set$,
        'onSecondaryLongPressCancel':
            _LongPressGestureRecognizer_onSecondaryLongPressCancel_set$,
        'onSecondaryLongPress':
            _LongPressGestureRecognizer_onSecondaryLongPress_set$,
        'onSecondaryLongPressStart':
            _LongPressGestureRecognizer_onSecondaryLongPressStart_set$,
        'onSecondaryLongPressMoveUpdate':
            _LongPressGestureRecognizer_onSecondaryLongPressMoveUpdate_set$,
        'onSecondaryLongPressUp':
            _LongPressGestureRecognizer_onSecondaryLongPressUp_set$,
        'onSecondaryLongPressEnd':
            _LongPressGestureRecognizer_onSecondaryLongPressEnd_set$,
        'onTertiaryLongPressDown':
            _LongPressGestureRecognizer_onTertiaryLongPressDown_set$,
        'onTertiaryLongPressCancel':
            _LongPressGestureRecognizer_onTertiaryLongPressCancel_set$,
        'onTertiaryLongPress':
            _LongPressGestureRecognizer_onTertiaryLongPress_set$,
        'onTertiaryLongPressStart':
            _LongPressGestureRecognizer_onTertiaryLongPressStart_set$,
        'onTertiaryLongPressMoveUpdate':
            _LongPressGestureRecognizer_onTertiaryLongPressMoveUpdate_set$,
        'onTertiaryLongPressUp':
            _LongPressGestureRecognizer_onTertiaryLongPressUp_set$,
        'onTertiaryLongPressEnd':
            _LongPressGestureRecognizer_onTertiaryLongPressEnd_set$,
      },
    ),
  },
);
Function LongPressDownDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as LongPressDownDetails;
Function LongPressDownDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is LongPressDownDetails;
Function _LongPressDownDetails_globalPosition$(
  m.Scope scope$,
  LongPressDownDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _LongPressDownDetails_kind$(
  m.Scope scope$,
  LongPressDownDetails target$,
) =>
    () {
      return target$.kind;
    };
Function _LongPressDownDetails_localPosition$(
  m.Scope scope$,
  LongPressDownDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _LongPressDownDetails__$(m.Scope scope$) => ({
      Offset? globalPosition,
      Offset? localPosition,
      PointerDeviceKind? kind,
    }) {
      return LongPressDownDetails(
        globalPosition: globalPosition ?? Offset.zero,
        kind: kind,
        localPosition: localPosition,
      );
    };
Function LongPressStartDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as LongPressStartDetails;
Function LongPressStartDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is LongPressStartDetails;
Function _LongPressStartDetails_globalPosition$(
  m.Scope scope$,
  LongPressStartDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _LongPressStartDetails_localPosition$(
  m.Scope scope$,
  LongPressStartDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _LongPressStartDetails__$(m.Scope scope$) => ({
      Offset? globalPosition,
      Offset? localPosition,
    }) {
      return LongPressStartDetails(
        globalPosition: globalPosition ?? Offset.zero,
        localPosition: localPosition,
      );
    };
Function LongPressMoveUpdateDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as LongPressMoveUpdateDetails;
Function LongPressMoveUpdateDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is LongPressMoveUpdateDetails;
Function _LongPressMoveUpdateDetails_globalPosition$(
  m.Scope scope$,
  LongPressMoveUpdateDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _LongPressMoveUpdateDetails_localPosition$(
  m.Scope scope$,
  LongPressMoveUpdateDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _LongPressMoveUpdateDetails_offsetFromOrigin$(
  m.Scope scope$,
  LongPressMoveUpdateDetails target$,
) =>
    () {
      return target$.offsetFromOrigin;
    };
Function _LongPressMoveUpdateDetails_localOffsetFromOrigin$(
  m.Scope scope$,
  LongPressMoveUpdateDetails target$,
) =>
    () {
      return target$.localOffsetFromOrigin;
    };
Function _LongPressMoveUpdateDetails__$(m.Scope scope$) => ({
      Offset? globalPosition,
      Offset? localPosition,
      Offset? offsetFromOrigin,
      Offset? localOffsetFromOrigin,
    }) {
      return LongPressMoveUpdateDetails(
        globalPosition: globalPosition ?? Offset.zero,
        localOffsetFromOrigin: localOffsetFromOrigin,
        localPosition: localPosition,
        offsetFromOrigin: offsetFromOrigin ?? Offset.zero,
      );
    };
Function LongPressEndDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as LongPressEndDetails;
Function LongPressEndDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is LongPressEndDetails;
Function _LongPressEndDetails_globalPosition$(
  m.Scope scope$,
  LongPressEndDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _LongPressEndDetails_localPosition$(
  m.Scope scope$,
  LongPressEndDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _LongPressEndDetails_velocity$(
  m.Scope scope$,
  LongPressEndDetails target$,
) =>
    () {
      return target$.velocity;
    };
Function _LongPressEndDetails__$(m.Scope scope$) => ({
      Offset? globalPosition,
      Offset? localPosition,
      Velocity? velocity,
    }) {
      return LongPressEndDetails(
        globalPosition: globalPosition ?? Offset.zero,
        localPosition: localPosition,
        velocity: velocity ?? Velocity.zero,
      );
    };
Function LongPressGestureRecognizer_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as LongPressGestureRecognizer;
Function LongPressGestureRecognizer_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is LongPressGestureRecognizer;
Function _LongPressGestureRecognizer_onLongPressDown$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPressDown;
    };
Function _LongPressGestureRecognizer_onLongPressDown_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPressDown) {
      void _onLongPressDownProxy(
              LongPressDownDetails _onLongPressDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onLongPressDown!,
            [_onLongPressDown_details$],
            {},
          );
      target$.onLongPressDown =
          (_onLongPressDown == null ? null : _onLongPressDownProxy);
    };
Function _LongPressGestureRecognizer_onLongPressCancel$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPressCancel;
    };
Function _LongPressGestureRecognizer_onLongPressCancel_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPressCancel) {
      void _onLongPressCancelProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onLongPressCancel!,
            [],
            {},
          );
      target$.onLongPressCancel =
          (_onLongPressCancel == null ? null : _onLongPressCancelProxy);
    };
Function _LongPressGestureRecognizer_onLongPress$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPress;
    };
Function _LongPressGestureRecognizer_onLongPress_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPress) {
      void _onLongPressProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onLongPress!,
            [],
            {},
          );
      target$.onLongPress = (_onLongPress == null ? null : _onLongPressProxy);
    };
Function _LongPressGestureRecognizer_onLongPressStart$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPressStart;
    };
Function _LongPressGestureRecognizer_onLongPressStart_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPressStart) {
      void _onLongPressStartProxy(
              LongPressStartDetails _onLongPressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onLongPressStart!,
            [_onLongPressStart_details$],
            {},
          );
      target$.onLongPressStart =
          (_onLongPressStart == null ? null : _onLongPressStartProxy);
    };
Function _LongPressGestureRecognizer_onLongPressMoveUpdate$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPressMoveUpdate;
    };
Function _LongPressGestureRecognizer_onLongPressMoveUpdate_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPressMoveUpdate) {
      void _onLongPressMoveUpdateProxy(
              LongPressMoveUpdateDetails _onLongPressMoveUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onLongPressMoveUpdate!,
            [_onLongPressMoveUpdate_details$],
            {},
          );
      target$.onLongPressMoveUpdate =
          (_onLongPressMoveUpdate == null ? null : _onLongPressMoveUpdateProxy);
    };
Function _LongPressGestureRecognizer_onLongPressUp$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPressUp;
    };
Function _LongPressGestureRecognizer_onLongPressUp_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPressUp) {
      void _onLongPressUpProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onLongPressUp!,
            [],
            {},
          );
      target$.onLongPressUp =
          (_onLongPressUp == null ? null : _onLongPressUpProxy);
    };
Function _LongPressGestureRecognizer_onLongPressEnd$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onLongPressEnd;
    };
Function _LongPressGestureRecognizer_onLongPressEnd_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onLongPressEnd) {
      void _onLongPressEndProxy(LongPressEndDetails _onLongPressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onLongPressEnd!,
            [_onLongPressEnd_details$],
            {},
          );
      target$.onLongPressEnd =
          (_onLongPressEnd == null ? null : _onLongPressEndProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressDown$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPressDown;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressDown_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPressDown) {
      void _onSecondaryLongPressDownProxy(
              LongPressDownDetails _onSecondaryLongPressDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPressDown!,
            [_onSecondaryLongPressDown_details$],
            {},
          );
      target$.onSecondaryLongPressDown = (_onSecondaryLongPressDown == null
          ? null
          : _onSecondaryLongPressDownProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressCancel$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPressCancel;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressCancel_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPressCancel) {
      void _onSecondaryLongPressCancelProxy() =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPressCancel!,
            [],
            {},
          );
      target$.onSecondaryLongPressCancel = (_onSecondaryLongPressCancel == null
          ? null
          : _onSecondaryLongPressCancelProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPress$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPress;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPress_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPress) {
      void _onSecondaryLongPressProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPress!,
            [],
            {},
          );
      target$.onSecondaryLongPress =
          (_onSecondaryLongPress == null ? null : _onSecondaryLongPressProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressStart$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPressStart;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressStart_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPressStart) {
      void _onSecondaryLongPressStartProxy(
              LongPressStartDetails _onSecondaryLongPressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPressStart!,
            [_onSecondaryLongPressStart_details$],
            {},
          );
      target$.onSecondaryLongPressStart = (_onSecondaryLongPressStart == null
          ? null
          : _onSecondaryLongPressStartProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressMoveUpdate$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPressMoveUpdate;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressMoveUpdate_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPressMoveUpdate) {
      void _onSecondaryLongPressMoveUpdateProxy(
              LongPressMoveUpdateDetails
                  _onSecondaryLongPressMoveUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPressMoveUpdate!,
            [_onSecondaryLongPressMoveUpdate_details$],
            {},
          );
      target$.onSecondaryLongPressMoveUpdate =
          (_onSecondaryLongPressMoveUpdate == null
              ? null
              : _onSecondaryLongPressMoveUpdateProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressUp$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPressUp;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressUp_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPressUp) {
      void _onSecondaryLongPressUpProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPressUp!,
            [],
            {},
          );
      target$.onSecondaryLongPressUp = (_onSecondaryLongPressUp == null
          ? null
          : _onSecondaryLongPressUpProxy);
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressEnd$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onSecondaryLongPressEnd;
    };
Function _LongPressGestureRecognizer_onSecondaryLongPressEnd_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onSecondaryLongPressEnd) {
      void _onSecondaryLongPressEndProxy(
              LongPressEndDetails _onSecondaryLongPressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onSecondaryLongPressEnd!,
            [_onSecondaryLongPressEnd_details$],
            {},
          );
      target$.onSecondaryLongPressEnd = (_onSecondaryLongPressEnd == null
          ? null
          : _onSecondaryLongPressEndProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressDown$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPressDown;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressDown_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPressDown) {
      void _onTertiaryLongPressDownProxy(
              LongPressDownDetails _onTertiaryLongPressDown_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPressDown!,
            [_onTertiaryLongPressDown_details$],
            {},
          );
      target$.onTertiaryLongPressDown = (_onTertiaryLongPressDown == null
          ? null
          : _onTertiaryLongPressDownProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressCancel$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPressCancel;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressCancel_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPressCancel) {
      void _onTertiaryLongPressCancelProxy() =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPressCancel!,
            [],
            {},
          );
      target$.onTertiaryLongPressCancel = (_onTertiaryLongPressCancel == null
          ? null
          : _onTertiaryLongPressCancelProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPress$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPress;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPress_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPress) {
      void _onTertiaryLongPressProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPress!,
            [],
            {},
          );
      target$.onTertiaryLongPress =
          (_onTertiaryLongPress == null ? null : _onTertiaryLongPressProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressStart$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPressStart;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressStart_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPressStart) {
      void _onTertiaryLongPressStartProxy(
              LongPressStartDetails _onTertiaryLongPressStart_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPressStart!,
            [_onTertiaryLongPressStart_details$],
            {},
          );
      target$.onTertiaryLongPressStart = (_onTertiaryLongPressStart == null
          ? null
          : _onTertiaryLongPressStartProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressMoveUpdate$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPressMoveUpdate;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressMoveUpdate_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPressMoveUpdate) {
      void _onTertiaryLongPressMoveUpdateProxy(
              LongPressMoveUpdateDetails
                  _onTertiaryLongPressMoveUpdate_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPressMoveUpdate!,
            [_onTertiaryLongPressMoveUpdate_details$],
            {},
          );
      target$.onTertiaryLongPressMoveUpdate =
          (_onTertiaryLongPressMoveUpdate == null
              ? null
              : _onTertiaryLongPressMoveUpdateProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressUp$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPressUp;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressUp_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPressUp) {
      void _onTertiaryLongPressUpProxy() => scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPressUp!,
            [],
            {},
          );
      target$.onTertiaryLongPressUp =
          (_onTertiaryLongPressUp == null ? null : _onTertiaryLongPressUpProxy);
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressEnd$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.onTertiaryLongPressEnd;
    };
Function _LongPressGestureRecognizer_onTertiaryLongPressEnd_set$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    (m.FunctionPointer? _onTertiaryLongPressEnd) {
      void _onTertiaryLongPressEndProxy(
              LongPressEndDetails _onTertiaryLongPressEnd_details$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _onTertiaryLongPressEnd!,
            [_onTertiaryLongPressEnd_details$],
            {},
          );
      target$.onTertiaryLongPressEnd = (_onTertiaryLongPressEnd == null
          ? null
          : _onTertiaryLongPressEndProxy);
    };
Function _LongPressGestureRecognizer_debugDescription$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    () {
      return target$.debugDescription;
    };
Function _LongPressGestureRecognizer__$(m.Scope scope$) => ({
      Duration? duration,
      double? postAcceptSlopTolerance,
      Set? supportedDevices,
      Object? debugOwner,
      m.FunctionPointer? allowedButtonsFilter,
    }) {
      bool allowedButtonsFilterProxy(int allowedButtonsFilter_buttons$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            allowedButtonsFilter!,
            [allowedButtonsFilter_buttons$],
            {},
          );
      return LongPressGestureRecognizer(
        allowedButtonsFilter:
            allowedButtonsFilter == null ? null : allowedButtonsFilterProxy,
        debugOwner: debugOwner,
        duration: duration,
        postAcceptSlopTolerance: postAcceptSlopTolerance,
        supportedDevices:
            supportedDevices == null ? null : Set.from(supportedDevices),
      );
    };
Function _LongPressGestureRecognizer_isPointerAllowed$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    target$.isPointerAllowed;
Function _LongPressGestureRecognizer_didExceedDeadline$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    target$.didExceedDeadline;
Function _LongPressGestureRecognizer_handlePrimaryPointer$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    target$.handlePrimaryPointer;
Function _LongPressGestureRecognizer_resolve$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    target$.resolve;
Function _LongPressGestureRecognizer_acceptGesture$(
  m.Scope scope$,
  LongPressGestureRecognizer target$,
) =>
    target$.acceptGesture;
