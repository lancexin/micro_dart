// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/debug.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/object.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/debug.dart',
  {
    'debugPaintSizeEnabled': _debugPaintSizeEnabled$,
    'debugPaintBaselinesEnabled': _debugPaintBaselinesEnabled$,
    'debugPaintLayerBordersEnabled': _debugPaintLayerBordersEnabled$,
    'debugPaintPointersEnabled': _debugPaintPointersEnabled$,
    'debugRepaintRainbowEnabled': _debugRepaintRainbowEnabled$,
    'debugRepaintTextRainbowEnabled': _debugRepaintTextRainbowEnabled$,
    'debugCurrentRepaintColor': _debugCurrentRepaintColor$,
    'debugPrintMarkNeedsLayoutStacks': _debugPrintMarkNeedsLayoutStacks$,
    'debugPrintMarkNeedsPaintStacks': _debugPrintMarkNeedsPaintStacks$,
    'debugPrintLayouts': _debugPrintLayouts$,
    'debugCheckIntrinsicSizes': _debugCheckIntrinsicSizes$,
    'debugProfileLayoutsEnabled': _debugProfileLayoutsEnabled$,
    'debugProfilePaintsEnabled': _debugProfilePaintsEnabled$,
    'debugEnhanceLayoutTimelineArguments':
        _debugEnhanceLayoutTimelineArguments$,
    'debugEnhancePaintTimelineArguments': _debugEnhancePaintTimelineArguments$,
    'debugOnProfilePaint': _debugOnProfilePaint$,
    'debugDisableClipLayers': _debugDisableClipLayers$,
    'debugDisablePhysicalShapeLayers': _debugDisablePhysicalShapeLayers$,
    'debugDisableOpacityLayers': _debugDisableOpacityLayers$,
    'debugPaintPadding': _debugPaintPadding$,
    'debugAssertAllRenderVarsUnset': _debugAssertAllRenderVarsUnset$,
    'debugCheckHasBoundedAxis': _debugCheckHasBoundedAxis$,
  },
  {
    'debugPaintSizeEnabled': _debugPaintSizeEnabled_set$,
    'debugPaintBaselinesEnabled': _debugPaintBaselinesEnabled_set$,
    'debugPaintLayerBordersEnabled': _debugPaintLayerBordersEnabled_set$,
    'debugPaintPointersEnabled': _debugPaintPointersEnabled_set$,
    'debugRepaintRainbowEnabled': _debugRepaintRainbowEnabled_set$,
    'debugRepaintTextRainbowEnabled': _debugRepaintTextRainbowEnabled_set$,
    'debugCurrentRepaintColor': _debugCurrentRepaintColor_set$,
    'debugPrintMarkNeedsLayoutStacks': _debugPrintMarkNeedsLayoutStacks_set$,
    'debugPrintMarkNeedsPaintStacks': _debugPrintMarkNeedsPaintStacks_set$,
    'debugPrintLayouts': _debugPrintLayouts_set$,
    'debugCheckIntrinsicSizes': _debugCheckIntrinsicSizes_set$,
    'debugProfileLayoutsEnabled': _debugProfileLayoutsEnabled_set$,
    'debugProfilePaintsEnabled': _debugProfilePaintsEnabled_set$,
    'debugEnhanceLayoutTimelineArguments':
        _debugEnhanceLayoutTimelineArguments_set$,
    'debugEnhancePaintTimelineArguments':
        _debugEnhancePaintTimelineArguments_set$,
    'debugOnProfilePaint': _debugOnProfilePaint_set$,
    'debugDisableClipLayers': _debugDisableClipLayers_set$,
    'debugDisablePhysicalShapeLayers': _debugDisablePhysicalShapeLayers_set$,
    'debugDisableOpacityLayers': _debugDisableOpacityLayers_set$,
  },
  {},
);
bool _debugPaintSizeEnabled$() {
  return debugPaintSizeEnabled;
}

void _debugPaintSizeEnabled_set$(bool other$) {
  debugPaintSizeEnabled = other$;
}

bool _debugPaintBaselinesEnabled$() {
  return debugPaintBaselinesEnabled;
}

void _debugPaintBaselinesEnabled_set$(bool other$) {
  debugPaintBaselinesEnabled = other$;
}

bool _debugPaintLayerBordersEnabled$() {
  return debugPaintLayerBordersEnabled;
}

void _debugPaintLayerBordersEnabled_set$(bool other$) {
  debugPaintLayerBordersEnabled = other$;
}

bool _debugPaintPointersEnabled$() {
  return debugPaintPointersEnabled;
}

void _debugPaintPointersEnabled_set$(bool other$) {
  debugPaintPointersEnabled = other$;
}

bool _debugRepaintRainbowEnabled$() {
  return debugRepaintRainbowEnabled;
}

void _debugRepaintRainbowEnabled_set$(bool other$) {
  debugRepaintRainbowEnabled = other$;
}

bool _debugRepaintTextRainbowEnabled$() {
  return debugRepaintTextRainbowEnabled;
}

void _debugRepaintTextRainbowEnabled_set$(bool other$) {
  debugRepaintTextRainbowEnabled = other$;
}

HSVColor _debugCurrentRepaintColor$() {
  return debugCurrentRepaintColor;
}

void _debugCurrentRepaintColor_set$(HSVColor other$) {
  debugCurrentRepaintColor = other$;
}

bool _debugPrintMarkNeedsLayoutStacks$() {
  return debugPrintMarkNeedsLayoutStacks;
}

void _debugPrintMarkNeedsLayoutStacks_set$(bool other$) {
  debugPrintMarkNeedsLayoutStacks = other$;
}

bool _debugPrintMarkNeedsPaintStacks$() {
  return debugPrintMarkNeedsPaintStacks;
}

void _debugPrintMarkNeedsPaintStacks_set$(bool other$) {
  debugPrintMarkNeedsPaintStacks = other$;
}

bool _debugPrintLayouts$() {
  return debugPrintLayouts;
}

void _debugPrintLayouts_set$(bool other$) {
  debugPrintLayouts = other$;
}

bool _debugCheckIntrinsicSizes$() {
  return debugCheckIntrinsicSizes;
}

void _debugCheckIntrinsicSizes_set$(bool other$) {
  debugCheckIntrinsicSizes = other$;
}

bool _debugProfileLayoutsEnabled$() {
  return debugProfileLayoutsEnabled;
}

void _debugProfileLayoutsEnabled_set$(bool other$) {
  debugProfileLayoutsEnabled = other$;
}

bool _debugProfilePaintsEnabled$() {
  return debugProfilePaintsEnabled;
}

void _debugProfilePaintsEnabled_set$(bool other$) {
  debugProfilePaintsEnabled = other$;
}

bool _debugEnhanceLayoutTimelineArguments$() {
  return debugEnhanceLayoutTimelineArguments;
}

void _debugEnhanceLayoutTimelineArguments_set$(bool other$) {
  debugEnhanceLayoutTimelineArguments = other$;
}

bool _debugEnhancePaintTimelineArguments$() {
  return debugEnhancePaintTimelineArguments;
}

void _debugEnhancePaintTimelineArguments_set$(bool other$) {
  debugEnhancePaintTimelineArguments = other$;
}

void Function(RenderObject)? _debugOnProfilePaint$() {
  return debugOnProfilePaint;
}

Function _debugOnProfilePaint_set$(m.Scope scope$) =>
    (m.FunctionPointer? _debugOnProfilePaint) {
      void _debugOnProfilePaintProxy(
              RenderObject _debugOnProfilePaint_renderObject$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _debugOnProfilePaint!,
            [_debugOnProfilePaint_renderObject$],
            {},
          );
      debugOnProfilePaint =
          (_debugOnProfilePaint == null ? null : _debugOnProfilePaintProxy);
    };
bool _debugDisableClipLayers$() {
  return debugDisableClipLayers;
}

void _debugDisableClipLayers_set$(bool other$) {
  debugDisableClipLayers = other$;
}

bool _debugDisablePhysicalShapeLayers$() {
  return debugDisablePhysicalShapeLayers;
}

void _debugDisablePhysicalShapeLayers_set$(bool other$) {
  debugDisablePhysicalShapeLayers = other$;
}

bool _debugDisableOpacityLayers$() {
  return debugDisableOpacityLayers;
}

void _debugDisableOpacityLayers_set$(bool other$) {
  debugDisableOpacityLayers = other$;
}

Function _debugPaintPadding$(m.Scope scope$) => debugPaintPadding;
Function _debugAssertAllRenderVarsUnset$(m.Scope scope$) =>
    debugAssertAllRenderVarsUnset;
Function _debugCheckHasBoundedAxis$(m.Scope scope$) => debugCheckHasBoundedAxis;
