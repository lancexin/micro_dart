// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/debug.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/object.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/debug.dart',
  {
    'debugPaintSizeEnabled': _debugPaintSizeEnabled$,
    'debugPaintBaselinesEnabled': _debugPaintBaselinesEnabled$,
    'debugPaintLayerBordersEnabled': _debugPaintLayerBordersEnabled$,
    'debugPaintPointersEnabled': _debugPaintPointersEnabled$,
    'debugRepaintRainbowEnabled': _debugRepaintRainbowEnabled$,
    'debugRepaintTextRainbowEnabled': _debugRepaintTextRainbowEnabled$,
    'debugCurrentRepaintColor': _debugCurrentRepaintColor$,
    'debugPrintMarkNeedsLayoutStacks': _debugPrintMarkNeedsLayoutStacks$,
    'debugPrintMarkNeedsPaintStacks': _debugPrintMarkNeedsPaintStacks$,
    'debugPrintLayouts': _debugPrintLayouts$,
    'debugCheckIntrinsicSizes': _debugCheckIntrinsicSizes$,
    'debugProfileLayoutsEnabled': _debugProfileLayoutsEnabled$,
    'debugProfilePaintsEnabled': _debugProfilePaintsEnabled$,
    'debugEnhanceLayoutTimelineArguments':
        _debugEnhanceLayoutTimelineArguments$,
    'debugEnhancePaintTimelineArguments': _debugEnhancePaintTimelineArguments$,
    'debugOnProfilePaint': _debugOnProfilePaint$,
    'debugDisableClipLayers': _debugDisableClipLayers$,
    'debugDisablePhysicalShapeLayers': _debugDisablePhysicalShapeLayers$,
    'debugDisableOpacityLayers': _debugDisableOpacityLayers$,
    'debugPaintPadding': _debugPaintPadding$,
    'debugAssertAllRenderVarsUnset': _debugAssertAllRenderVarsUnset$,
    'debugCheckHasBoundedAxis': _debugCheckHasBoundedAxis$,
  },
  {
    'debugPaintSizeEnabled': _debugPaintSizeEnabled_set$,
    'debugPaintBaselinesEnabled': _debugPaintBaselinesEnabled_set$,
    'debugPaintLayerBordersEnabled': _debugPaintLayerBordersEnabled_set$,
    'debugPaintPointersEnabled': _debugPaintPointersEnabled_set$,
    'debugRepaintRainbowEnabled': _debugRepaintRainbowEnabled_set$,
    'debugRepaintTextRainbowEnabled': _debugRepaintTextRainbowEnabled_set$,
    'debugCurrentRepaintColor': _debugCurrentRepaintColor_set$,
    'debugPrintMarkNeedsLayoutStacks': _debugPrintMarkNeedsLayoutStacks_set$,
    'debugPrintMarkNeedsPaintStacks': _debugPrintMarkNeedsPaintStacks_set$,
    'debugPrintLayouts': _debugPrintLayouts_set$,
    'debugCheckIntrinsicSizes': _debugCheckIntrinsicSizes_set$,
    'debugProfileLayoutsEnabled': _debugProfileLayoutsEnabled_set$,
    'debugProfilePaintsEnabled': _debugProfilePaintsEnabled_set$,
    'debugEnhanceLayoutTimelineArguments':
        _debugEnhanceLayoutTimelineArguments_set$,
    'debugEnhancePaintTimelineArguments':
        _debugEnhancePaintTimelineArguments_set$,
    'debugOnProfilePaint': _debugOnProfilePaint_set$,
    'debugDisableClipLayers': _debugDisableClipLayers_set$,
    'debugDisablePhysicalShapeLayers': _debugDisablePhysicalShapeLayers_set$,
    'debugDisableOpacityLayers': _debugDisableOpacityLayers_set$,
  },
  {},
);
Function _debugPaintSizeEnabled$(m.Scope scope$) => () => debugPaintSizeEnabled;
void _debugPaintSizeEnabled_set$(bool other$) {
  debugPaintSizeEnabled = other$;
}

Function _debugPaintBaselinesEnabled$(m.Scope scope$) =>
    () => debugPaintBaselinesEnabled;
void _debugPaintBaselinesEnabled_set$(bool other$) {
  debugPaintBaselinesEnabled = other$;
}

Function _debugPaintLayerBordersEnabled$(m.Scope scope$) =>
    () => debugPaintLayerBordersEnabled;
void _debugPaintLayerBordersEnabled_set$(bool other$) {
  debugPaintLayerBordersEnabled = other$;
}

Function _debugPaintPointersEnabled$(m.Scope scope$) =>
    () => debugPaintPointersEnabled;
void _debugPaintPointersEnabled_set$(bool other$) {
  debugPaintPointersEnabled = other$;
}

Function _debugRepaintRainbowEnabled$(m.Scope scope$) =>
    () => debugRepaintRainbowEnabled;
void _debugRepaintRainbowEnabled_set$(bool other$) {
  debugRepaintRainbowEnabled = other$;
}

Function _debugRepaintTextRainbowEnabled$(m.Scope scope$) =>
    () => debugRepaintTextRainbowEnabled;
void _debugRepaintTextRainbowEnabled_set$(bool other$) {
  debugRepaintTextRainbowEnabled = other$;
}

Function _debugCurrentRepaintColor$(m.Scope scope$) =>
    () => debugCurrentRepaintColor;
void _debugCurrentRepaintColor_set$(HSVColor other$) {
  debugCurrentRepaintColor = other$;
}

Function _debugPrintMarkNeedsLayoutStacks$(m.Scope scope$) =>
    () => debugPrintMarkNeedsLayoutStacks;
void _debugPrintMarkNeedsLayoutStacks_set$(bool other$) {
  debugPrintMarkNeedsLayoutStacks = other$;
}

Function _debugPrintMarkNeedsPaintStacks$(m.Scope scope$) =>
    () => debugPrintMarkNeedsPaintStacks;
void _debugPrintMarkNeedsPaintStacks_set$(bool other$) {
  debugPrintMarkNeedsPaintStacks = other$;
}

Function _debugPrintLayouts$(m.Scope scope$) => () => debugPrintLayouts;
void _debugPrintLayouts_set$(bool other$) {
  debugPrintLayouts = other$;
}

Function _debugCheckIntrinsicSizes$(m.Scope scope$) =>
    () => debugCheckIntrinsicSizes;
void _debugCheckIntrinsicSizes_set$(bool other$) {
  debugCheckIntrinsicSizes = other$;
}

Function _debugProfileLayoutsEnabled$(m.Scope scope$) =>
    () => debugProfileLayoutsEnabled;
void _debugProfileLayoutsEnabled_set$(bool other$) {
  debugProfileLayoutsEnabled = other$;
}

Function _debugProfilePaintsEnabled$(m.Scope scope$) =>
    () => debugProfilePaintsEnabled;
void _debugProfilePaintsEnabled_set$(bool other$) {
  debugProfilePaintsEnabled = other$;
}

Function _debugEnhanceLayoutTimelineArguments$(m.Scope scope$) =>
    () => debugEnhanceLayoutTimelineArguments;
void _debugEnhanceLayoutTimelineArguments_set$(bool other$) {
  debugEnhanceLayoutTimelineArguments = other$;
}

Function _debugEnhancePaintTimelineArguments$(m.Scope scope$) =>
    () => debugEnhancePaintTimelineArguments;
void _debugEnhancePaintTimelineArguments_set$(bool other$) {
  debugEnhancePaintTimelineArguments = other$;
}

Function _debugOnProfilePaint$(m.Scope scope$) => () => debugOnProfilePaint;
Function _debugOnProfilePaint_set$(m.Scope scope$) =>
    (m.FunctionPointer? _debugOnProfilePaint) {
      void _debugOnProfilePaintProxy(
              RenderObject _debugOnProfilePaint_renderObject$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            _debugOnProfilePaint!,
            [_debugOnProfilePaint_renderObject$],
            {},
          );
      debugOnProfilePaint =
          (_debugOnProfilePaint == null ? null : _debugOnProfilePaintProxy);
    };
Function _debugDisableClipLayers$(m.Scope scope$) =>
    () => debugDisableClipLayers;
void _debugDisableClipLayers_set$(bool other$) {
  debugDisableClipLayers = other$;
}

Function _debugDisablePhysicalShapeLayers$(m.Scope scope$) =>
    () => debugDisablePhysicalShapeLayers;
void _debugDisablePhysicalShapeLayers_set$(bool other$) {
  debugDisablePhysicalShapeLayers = other$;
}

Function _debugDisableOpacityLayers$(m.Scope scope$) =>
    () => debugDisableOpacityLayers;
void _debugDisableOpacityLayers_set$(bool other$) {
  debugDisableOpacityLayers = other$;
}

Function _debugPaintPadding$(m.Scope scope$) => debugPaintPadding;
Function _debugAssertAllRenderVarsUnset$(m.Scope scope$) =>
    debugAssertAllRenderVarsUnset;
Function _debugCheckHasBoundedAxis$(m.Scope scope$) => debugCheckHasBoundedAxis;
