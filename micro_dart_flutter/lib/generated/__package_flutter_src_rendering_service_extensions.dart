// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/service_extensions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/service_extensions.dart',
  {
    'RenderingServiceExtensions.invertOversizedImages':
        _RenderingServiceExtensions_invertOversizedImages$,
    'RenderingServiceExtensions.debugPaint':
        _RenderingServiceExtensions_debugPaint$,
    'RenderingServiceExtensions.debugPaintBaselinesEnabled':
        _RenderingServiceExtensions_debugPaintBaselinesEnabled$,
    'RenderingServiceExtensions.repaintRainbow':
        _RenderingServiceExtensions_repaintRainbow$,
    'RenderingServiceExtensions.debugDumpLayerTree':
        _RenderingServiceExtensions_debugDumpLayerTree$,
    'RenderingServiceExtensions.debugDisableClipLayers':
        _RenderingServiceExtensions_debugDisableClipLayers$,
    'RenderingServiceExtensions.debugDisablePhysicalShapeLayers':
        _RenderingServiceExtensions_debugDisablePhysicalShapeLayers$,
    'RenderingServiceExtensions.debugDisableOpacityLayers':
        _RenderingServiceExtensions_debugDisableOpacityLayers$,
    'RenderingServiceExtensions.debugDumpRenderTree':
        _RenderingServiceExtensions_debugDumpRenderTree$,
    'RenderingServiceExtensions.debugDumpSemanticsTreeInTraversalOrder':
        _RenderingServiceExtensions_debugDumpSemanticsTreeInTraversalOrder$,
    'RenderingServiceExtensions.debugDumpSemanticsTreeInInverseHitTestOrder':
        _RenderingServiceExtensions_debugDumpSemanticsTreeInInverseHitTestOrder$,
    'RenderingServiceExtensions.profileRenderObjectPaints':
        _RenderingServiceExtensions_profileRenderObjectPaints$,
    'RenderingServiceExtensions.profileRenderObjectLayouts':
        _RenderingServiceExtensions_profileRenderObjectLayouts$,
    'RenderingServiceExtensions.values': _RenderingServiceExtensions_values$,
  },
  {},
  {
    'RenderingServiceExtensions': m.ClassMirror(
      'RenderingServiceExtensions',
      {},
      {},
    )
  },
);
Function _RenderingServiceExtensions_invertOversizedImages$(m.Scope scope$) =>
    () => RenderingServiceExtensions.invertOversizedImages;
Function _RenderingServiceExtensions_debugPaint$(m.Scope scope$) =>
    () => RenderingServiceExtensions.debugPaint;
Function _RenderingServiceExtensions_debugPaintBaselinesEnabled$(
        m.Scope scope$) =>
    () => RenderingServiceExtensions.debugPaintBaselinesEnabled;
Function _RenderingServiceExtensions_repaintRainbow$(m.Scope scope$) =>
    () => RenderingServiceExtensions.repaintRainbow;
Function _RenderingServiceExtensions_debugDumpLayerTree$(m.Scope scope$) =>
    () => RenderingServiceExtensions.debugDumpLayerTree;
Function _RenderingServiceExtensions_debugDisableClipLayers$(m.Scope scope$) =>
    () => RenderingServiceExtensions.debugDisableClipLayers;
Function _RenderingServiceExtensions_debugDisablePhysicalShapeLayers$(
        m.Scope scope$) =>
    () => RenderingServiceExtensions.debugDisablePhysicalShapeLayers;
Function _RenderingServiceExtensions_debugDisableOpacityLayers$(
        m.Scope scope$) =>
    () => RenderingServiceExtensions.debugDisableOpacityLayers;
Function _RenderingServiceExtensions_debugDumpRenderTree$(m.Scope scope$) =>
    () => RenderingServiceExtensions.debugDumpRenderTree;
Function _RenderingServiceExtensions_debugDumpSemanticsTreeInTraversalOrder$(
        m.Scope scope$) =>
    () => RenderingServiceExtensions.debugDumpSemanticsTreeInTraversalOrder;
Function
    _RenderingServiceExtensions_debugDumpSemanticsTreeInInverseHitTestOrder$(
            m.Scope scope$) =>
        () => RenderingServiceExtensions
            .debugDumpSemanticsTreeInInverseHitTestOrder;
Function _RenderingServiceExtensions_profileRenderObjectPaints$(
        m.Scope scope$) =>
    () => RenderingServiceExtensions.profileRenderObjectPaints;
Function _RenderingServiceExtensions_profileRenderObjectLayouts$(
        m.Scope scope$) =>
    () => RenderingServiceExtensions.profileRenderObjectLayouts;
Function _RenderingServiceExtensions_values$(m.Scope scope$) =>
    () => RenderingServiceExtensions.values;
