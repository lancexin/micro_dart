// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/service_extensions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/service_extensions.dart',
  {
    'RenderingServiceExtensions.invertOversizedImages':
        _RenderingServiceExtensions_invertOversizedImages$,
    'RenderingServiceExtensions.debugPaint':
        _RenderingServiceExtensions_debugPaint$,
    'RenderingServiceExtensions.debugPaintBaselinesEnabled':
        _RenderingServiceExtensions_debugPaintBaselinesEnabled$,
    'RenderingServiceExtensions.repaintRainbow':
        _RenderingServiceExtensions_repaintRainbow$,
    'RenderingServiceExtensions.debugDumpLayerTree':
        _RenderingServiceExtensions_debugDumpLayerTree$,
    'RenderingServiceExtensions.debugDisableClipLayers':
        _RenderingServiceExtensions_debugDisableClipLayers$,
    'RenderingServiceExtensions.debugDisablePhysicalShapeLayers':
        _RenderingServiceExtensions_debugDisablePhysicalShapeLayers$,
    'RenderingServiceExtensions.debugDisableOpacityLayers':
        _RenderingServiceExtensions_debugDisableOpacityLayers$,
    'RenderingServiceExtensions.debugDumpRenderTree':
        _RenderingServiceExtensions_debugDumpRenderTree$,
    'RenderingServiceExtensions.debugDumpSemanticsTreeInTraversalOrder':
        _RenderingServiceExtensions_debugDumpSemanticsTreeInTraversalOrder$,
    'RenderingServiceExtensions.debugDumpSemanticsTreeInInverseHitTestOrder':
        _RenderingServiceExtensions_debugDumpSemanticsTreeInInverseHitTestOrder$,
    'RenderingServiceExtensions.profileRenderObjectPaints':
        _RenderingServiceExtensions_profileRenderObjectPaints$,
    'RenderingServiceExtensions.profileRenderObjectLayouts':
        _RenderingServiceExtensions_profileRenderObjectLayouts$,
    'RenderingServiceExtensions.values': _RenderingServiceExtensions_values$,
  },
  {},
  {
    'RenderingServiceExtensions': m.ClassMirror(
      'RenderingServiceExtensions',
      {},
      {},
    )
  },
);
RenderingServiceExtensions
    _RenderingServiceExtensions_invertOversizedImages$() {
  return RenderingServiceExtensions.invertOversizedImages;
}

RenderingServiceExtensions _RenderingServiceExtensions_debugPaint$() {
  return RenderingServiceExtensions.debugPaint;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_debugPaintBaselinesEnabled$() {
  return RenderingServiceExtensions.debugPaintBaselinesEnabled;
}

RenderingServiceExtensions _RenderingServiceExtensions_repaintRainbow$() {
  return RenderingServiceExtensions.repaintRainbow;
}

RenderingServiceExtensions _RenderingServiceExtensions_debugDumpLayerTree$() {
  return RenderingServiceExtensions.debugDumpLayerTree;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_debugDisableClipLayers$() {
  return RenderingServiceExtensions.debugDisableClipLayers;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_debugDisablePhysicalShapeLayers$() {
  return RenderingServiceExtensions.debugDisablePhysicalShapeLayers;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_debugDisableOpacityLayers$() {
  return RenderingServiceExtensions.debugDisableOpacityLayers;
}

RenderingServiceExtensions _RenderingServiceExtensions_debugDumpRenderTree$() {
  return RenderingServiceExtensions.debugDumpRenderTree;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_debugDumpSemanticsTreeInTraversalOrder$() {
  return RenderingServiceExtensions.debugDumpSemanticsTreeInTraversalOrder;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_debugDumpSemanticsTreeInInverseHitTestOrder$() {
  return RenderingServiceExtensions.debugDumpSemanticsTreeInInverseHitTestOrder;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_profileRenderObjectPaints$() {
  return RenderingServiceExtensions.profileRenderObjectPaints;
}

RenderingServiceExtensions
    _RenderingServiceExtensions_profileRenderObjectLayouts$() {
  return RenderingServiceExtensions.profileRenderObjectLayouts;
}

List<RenderingServiceExtensions> _RenderingServiceExtensions_values$() {
  return RenderingServiceExtensions.values;
}
