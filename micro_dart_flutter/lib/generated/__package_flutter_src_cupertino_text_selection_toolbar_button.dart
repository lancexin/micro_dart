// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/text_selection_toolbar_button.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/button.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/debug.dart';
import 'package:flutter/src/cupertino/localizations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/text_selection_toolbar_button.dart',
  {
    'CupertinoTextSelectionToolbarButton.':
        _CupertinoTextSelectionToolbarButton__$,
    'CupertinoTextSelectionToolbarButton.text':
        _CupertinoTextSelectionToolbarButton_text_$,
    'CupertinoTextSelectionToolbarButton.buttonItem':
        _CupertinoTextSelectionToolbarButton_buttonItem_$,
    'CupertinoTextSelectionToolbarButton.getButtonLabel':
        _CupertinoTextSelectionToolbarButton_getButtonLabel$,
  },
  {},
  {
    'CupertinoTextSelectionToolbarButton': m.ClassMirror(
      'CupertinoTextSelectionToolbarButton',
      {
        '#as': CupertinoTextSelectionToolbarButton_as$,
        '#is': CupertinoTextSelectionToolbarButton_is$,
        'child': _CupertinoTextSelectionToolbarButton_child$,
        'onPressed': _CupertinoTextSelectionToolbarButton_onPressed$,
        'buttonItem': _CupertinoTextSelectionToolbarButton_buttonItem$,
        'text': _CupertinoTextSelectionToolbarButton_text$,
      },
      {},
    )
  },
);
Function CupertinoTextSelectionToolbarButton_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoTextSelectionToolbarButton;
Function CupertinoTextSelectionToolbarButton_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoTextSelectionToolbarButton;
Function _CupertinoTextSelectionToolbarButton_child$(
  m.Scope scope$,
  CupertinoTextSelectionToolbarButton target$,
) =>
    () {
      return target$.child;
    };
Function _CupertinoTextSelectionToolbarButton_onPressed$(
  m.Scope scope$,
  CupertinoTextSelectionToolbarButton target$,
) =>
    () {
      return target$.onPressed;
    };
Function _CupertinoTextSelectionToolbarButton_buttonItem$(
  m.Scope scope$,
  CupertinoTextSelectionToolbarButton target$,
) =>
    () {
      return target$.buttonItem;
    };
Function _CupertinoTextSelectionToolbarButton_text$(
  m.Scope scope$,
  CupertinoTextSelectionToolbarButton target$,
) =>
    () {
      return target$.text;
    };
Function _CupertinoTextSelectionToolbarButton__$(m.Scope scope$) => ({
      Key? key,
      m.FunctionPointer? onPressed,
      required Widget child,
    }) {
      void onPressedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPressed!,
            [],
            {},
          );
      return CupertinoTextSelectionToolbarButton(
        child: child,
        key: key,
        onPressed: onPressed == null ? null : onPressedProxy,
      );
    };
Function _CupertinoTextSelectionToolbarButton_text_$(m.Scope scope$) => ({
      Key? key,
      m.FunctionPointer? onPressed,
      required String? text,
    }) {
      void onPressedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPressed!,
            [],
            {},
          );
      return CupertinoTextSelectionToolbarButton.text(
        key: key,
        onPressed: onPressed == null ? null : onPressedProxy,
        text: text,
      );
    };
Function _CupertinoTextSelectionToolbarButton_buttonItem_$(m.Scope scope$) =>
    CupertinoTextSelectionToolbarButton.buttonItem;
Function _CupertinoTextSelectionToolbarButton_getButtonLabel$(m.Scope scope$) =>
    CupertinoTextSelectionToolbarButton.getButtonLabel;
