// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/stadium_border.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/circle_border.dart';
import 'package:flutter/src/painting/rounded_rectangle_border.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/stadium_border.dart',
  {},
  {},
  {
    'StadiumBorder': m.ClassMirror(
      'StadiumBorder',
      {
        'preferPaintInterior': _StadiumBorder_preferPaintInterior$,
        'hashCode': _StadiumBorder_hashCode$,
        'scale': _StadiumBorder_scale$,
        'lerpFrom': _StadiumBorder_lerpFrom$,
        'lerpTo': _StadiumBorder_lerpTo$,
        'copyWith': _StadiumBorder_copyWith$,
        'getInnerPath': _StadiumBorder_getInnerPath$,
        'getOuterPath': _StadiumBorder_getOuterPath$,
        'paintInterior': _StadiumBorder_paintInterior$,
        'paint': _StadiumBorder_paint$,
        'toString': _StadiumBorder_toString$,
      },
      {},
    )
  },
);
bool _StadiumBorder_preferPaintInterior$(StadiumBorder target) {
  return target.preferPaintInterior;
}

int _StadiumBorder_hashCode$(StadiumBorder target) {
  return target.hashCode;
}

Function _StadiumBorder_scale$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.scale;
Function _StadiumBorder_lerpFrom$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.lerpFrom;
Function _StadiumBorder_lerpTo$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.lerpTo;
Function _StadiumBorder_copyWith$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.copyWith;
Function _StadiumBorder_getInnerPath$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.getInnerPath;
Function _StadiumBorder_getOuterPath$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.getOuterPath;
Function _StadiumBorder_paintInterior$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.paintInterior;
Function _StadiumBorder_paint$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.paint;
Function _StadiumBorder_toString$(
  m.Scope scope,
  StadiumBorder target,
) =>
    target.toString;
