// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/page_transitions_theme.dart';
import 'dart:ui';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/page_transitions_theme.dart',
  {
    'FadeUpwardsPageTransitionsBuilder.': _FadeUpwardsPageTransitionsBuilder__$,
    'OpenUpwardsPageTransitionsBuilder.': _OpenUpwardsPageTransitionsBuilder__$,
    'ZoomPageTransitionsBuilder.': _ZoomPageTransitionsBuilder__$,
    'CupertinoPageTransitionsBuilder.': _CupertinoPageTransitionsBuilder__$,
    'PageTransitionsTheme.': _PageTransitionsTheme__$,
  },
  {},
  {
    'PageTransitionsBuilder': m.ClassMirror(
      'PageTransitionsBuilder',
      {
        '#as': PageTransitionsBuilder_as$,
        '#is': PageTransitionsBuilder_is$,
        'buildTransitions': _PageTransitionsBuilder_buildTransitions$,
      },
      {},
    ),
    'FadeUpwardsPageTransitionsBuilder': m.ClassMirror(
      'FadeUpwardsPageTransitionsBuilder',
      {
        '#as': FadeUpwardsPageTransitionsBuilder_as$,
        '#is': FadeUpwardsPageTransitionsBuilder_is$,
        'buildTransitions':
            _FadeUpwardsPageTransitionsBuilder_buildTransitions$,
      },
      {},
    ),
    'OpenUpwardsPageTransitionsBuilder': m.ClassMirror(
      'OpenUpwardsPageTransitionsBuilder',
      {
        '#as': OpenUpwardsPageTransitionsBuilder_as$,
        '#is': OpenUpwardsPageTransitionsBuilder_is$,
        'buildTransitions':
            _OpenUpwardsPageTransitionsBuilder_buildTransitions$,
      },
      {},
    ),
    'ZoomPageTransitionsBuilder': m.ClassMirror(
      'ZoomPageTransitionsBuilder',
      {
        '#as': ZoomPageTransitionsBuilder_as$,
        '#is': ZoomPageTransitionsBuilder_is$,
        'allowSnapshotting': _ZoomPageTransitionsBuilder_allowSnapshotting$,
        'allowEnterRouteSnapshotting':
            _ZoomPageTransitionsBuilder_allowEnterRouteSnapshotting$,
        'buildTransitions': _ZoomPageTransitionsBuilder_buildTransitions$,
      },
      {},
    ),
    'CupertinoPageTransitionsBuilder': m.ClassMirror(
      'CupertinoPageTransitionsBuilder',
      {
        '#as': CupertinoPageTransitionsBuilder_as$,
        '#is': CupertinoPageTransitionsBuilder_is$,
        'buildTransitions': _CupertinoPageTransitionsBuilder_buildTransitions$,
      },
      {},
    ),
    'PageTransitionsTheme': m.ClassMirror(
      'PageTransitionsTheme',
      {
        '#as': PageTransitionsTheme_as$,
        '#is': PageTransitionsTheme_is$,
        'builders': _PageTransitionsTheme_builders$,
        'hashCode': _PageTransitionsTheme_hashCode$,
        'buildTransitions': _PageTransitionsTheme_buildTransitions$,
        '==': _PageTransitionsTheme_eq$$,
        'debugFillProperties': _PageTransitionsTheme_debugFillProperties$,
      },
      {},
    ),
  },
);
Function PageTransitionsBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PageTransitionsBuilder;
Function PageTransitionsBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PageTransitionsBuilder;
Function _PageTransitionsBuilder_buildTransitions$<T>(
  m.Scope scope$,
  PageTransitionsBuilder target$,
) =>
    target$.buildTransitions<T>;
Function FadeUpwardsPageTransitionsBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as FadeUpwardsPageTransitionsBuilder;
Function FadeUpwardsPageTransitionsBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is FadeUpwardsPageTransitionsBuilder;
Function _FadeUpwardsPageTransitionsBuilder__$(m.Scope scope$) => () {
      return FadeUpwardsPageTransitionsBuilder();
    };
Function _FadeUpwardsPageTransitionsBuilder_buildTransitions$<T>(
  m.Scope scope$,
  FadeUpwardsPageTransitionsBuilder target$,
) =>
    target$.buildTransitions<T>;
Function OpenUpwardsPageTransitionsBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as OpenUpwardsPageTransitionsBuilder;
Function OpenUpwardsPageTransitionsBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is OpenUpwardsPageTransitionsBuilder;
Function _OpenUpwardsPageTransitionsBuilder__$(m.Scope scope$) => () {
      return OpenUpwardsPageTransitionsBuilder();
    };
Function _OpenUpwardsPageTransitionsBuilder_buildTransitions$<T>(
  m.Scope scope$,
  OpenUpwardsPageTransitionsBuilder target$,
) =>
    target$.buildTransitions<T>;
Function ZoomPageTransitionsBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as ZoomPageTransitionsBuilder;
Function ZoomPageTransitionsBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is ZoomPageTransitionsBuilder;
Function _ZoomPageTransitionsBuilder_allowSnapshotting$(
  m.Scope scope$,
  ZoomPageTransitionsBuilder target$,
) =>
    () {
      return target$.allowSnapshotting;
    };
Function _ZoomPageTransitionsBuilder_allowEnterRouteSnapshotting$(
  m.Scope scope$,
  ZoomPageTransitionsBuilder target$,
) =>
    () {
      return target$.allowEnterRouteSnapshotting;
    };
Function _ZoomPageTransitionsBuilder__$(m.Scope scope$) => ({
      bool? allowSnapshotting,
      bool? allowEnterRouteSnapshotting,
    }) {
      return ZoomPageTransitionsBuilder(
        allowEnterRouteSnapshotting: allowEnterRouteSnapshotting ?? true,
        allowSnapshotting: allowSnapshotting ?? true,
      );
    };
Function _ZoomPageTransitionsBuilder_buildTransitions$<T>(
  m.Scope scope$,
  ZoomPageTransitionsBuilder target$,
) =>
    target$.buildTransitions<T>;
Function CupertinoPageTransitionsBuilder_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoPageTransitionsBuilder;
Function CupertinoPageTransitionsBuilder_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoPageTransitionsBuilder;
Function _CupertinoPageTransitionsBuilder__$(m.Scope scope$) => () {
      return CupertinoPageTransitionsBuilder();
    };
Function _CupertinoPageTransitionsBuilder_buildTransitions$<T>(
  m.Scope scope$,
  CupertinoPageTransitionsBuilder target$,
) =>
    target$.buildTransitions<T>;
Function PageTransitionsTheme_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PageTransitionsTheme;
Function PageTransitionsTheme_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PageTransitionsTheme;
Function _PageTransitionsTheme_builders$(
  m.Scope scope$,
  PageTransitionsTheme target$,
) =>
    () {
      return target$.builders;
    };
Function _PageTransitionsTheme_hashCode$(
  m.Scope scope$,
  PageTransitionsTheme target$,
) =>
    () {
      return target$.hashCode;
    };
Function _PageTransitionsTheme__$(m.Scope scope$) => ({Map? builders}) {
      return PageTransitionsTheme(
          builders: builders == null
              ? <TargetPlatform, PageTransitionsBuilder>{
                  TargetPlatform.android: ZoomPageTransitionsBuilder(),
                  TargetPlatform.iOS: CupertinoPageTransitionsBuilder(),
                  TargetPlatform.macOS: CupertinoPageTransitionsBuilder(),
                }
              : Map.from(builders));
    };
Function _PageTransitionsTheme_buildTransitions$<T>(
  m.Scope scope$,
  PageTransitionsTheme target$,
) =>
    target$.buildTransitions<T>;
Function _PageTransitionsTheme_eq$$(
  m.Scope scope$,
  PageTransitionsTheme target$,
) =>
    (Object other$) => target$ == other$;
Function _PageTransitionsTheme_debugFillProperties$(
  m.Scope scope$,
  PageTransitionsTheme target$,
) =>
    target$.debugFillProperties;
