// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/preferred_size.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/preferred_size.dart',
  {'PreferredSize.': _PreferredSize__$},
  {},
  {
    'PreferredSizeWidget': m.ClassMirror(
      'PreferredSizeWidget',
      {
        '#as': PreferredSizeWidget_as$,
        '#is': PreferredSizeWidget_is$,
        'preferredSize': _PreferredSizeWidget_preferredSize$,
      },
      {},
    ),
    'PreferredSize': m.ClassMirror(
      'PreferredSize',
      {
        '#as': PreferredSize_as$,
        '#is': PreferredSize_is$,
        'child': _PreferredSize_child$,
        'preferredSize': _PreferredSize_preferredSize$,
        'build': _PreferredSize_build$,
      },
      {},
    ),
  },
);
Function PreferredSizeWidget_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PreferredSizeWidget;
Function PreferredSizeWidget_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PreferredSizeWidget;
Function _PreferredSizeWidget_preferredSize$(
  m.Scope scope$,
  PreferredSizeWidget target$,
) =>
    () {
      return target$.preferredSize;
    };
Function PreferredSize_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as PreferredSize;
Function PreferredSize_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is PreferredSize;
Function _PreferredSize_child$(
  m.Scope scope$,
  PreferredSize target$,
) =>
    () {
      return target$.child;
    };
Function _PreferredSize_preferredSize$(
  m.Scope scope$,
  PreferredSize target$,
) =>
    () {
      return target$.preferredSize;
    };
Function _PreferredSize__$(m.Scope scope$) => ({
      Key? key,
      required Widget child,
      required Size preferredSize,
    }) {
      return PreferredSize(
        child: child,
        key: key,
        preferredSize: preferredSize,
      );
    };
Function _PreferredSize_build$(
  m.Scope scope$,
  PreferredSize target$,
) =>
    target$.build;
