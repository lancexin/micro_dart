// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/reorderable_list.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/debug.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/inherited_theme.dart';
import 'package:flutter/src/widgets/media_query.dart';
import 'package:flutter/src/widgets/overlay.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/scroll_delegate.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_view.dart';
import 'package:flutter/src/widgets/scrollable.dart';
import 'package:flutter/src/widgets/scrollable_helpers.dart';
import 'package:flutter/src/widgets/sliver.dart';
import 'package:flutter/src/widgets/sliver_prototype_extent_list.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';
import 'package:flutter/src/widgets/transitions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/reorderable_list.dart',
  {
    'ReorderableList.of': _ReorderableList_of$,
    'ReorderableList.maybeOf': _ReorderableList_maybeOf$,
    'SliverReorderableList.of': _SliverReorderableList_of$,
    'SliverReorderableList.maybeOf': _SliverReorderableList_maybeOf$,
  },
  {},
  {
    'ReorderableList': m.ClassMirror(
      'ReorderableList',
      {
        'itemBuilder': _ReorderableList_itemBuilder$,
        'itemCount': _ReorderableList_itemCount$,
        'onReorder': _ReorderableList_onReorder$,
        'onReorderStart': _ReorderableList_onReorderStart$,
        'onReorderEnd': _ReorderableList_onReorderEnd$,
        'proxyDecorator': _ReorderableList_proxyDecorator$,
        'padding': _ReorderableList_padding$,
        'scrollDirection': _ReorderableList_scrollDirection$,
        'reverse': _ReorderableList_reverse$,
        'controller': _ReorderableList_controller$,
        'primary': _ReorderableList_primary$,
        'physics': _ReorderableList_physics$,
        'shrinkWrap': _ReorderableList_shrinkWrap$,
        'anchor': _ReorderableList_anchor$,
        'cacheExtent': _ReorderableList_cacheExtent$,
        'dragStartBehavior': _ReorderableList_dragStartBehavior$,
        'keyboardDismissBehavior': _ReorderableList_keyboardDismissBehavior$,
        'restorationId': _ReorderableList_restorationId$,
        'clipBehavior': _ReorderableList_clipBehavior$,
        'itemExtent': _ReorderableList_itemExtent$,
        'prototypeItem': _ReorderableList_prototypeItem$,
        'createState': _ReorderableList_createState$,
      },
      {},
    ),
    'ReorderableListState': m.ClassMirror(
      'ReorderableListState',
      {
        'startItemDragReorder': _ReorderableListState_startItemDragReorder$,
        'cancelReorder': _ReorderableListState_cancelReorder$,
        'build': _ReorderableListState_build$,
      },
      {},
    ),
    'SliverReorderableList': m.ClassMirror(
      'SliverReorderableList',
      {
        'itemBuilder': _SliverReorderableList_itemBuilder$,
        'findChildIndexCallback':
            _SliverReorderableList_findChildIndexCallback$,
        'itemCount': _SliverReorderableList_itemCount$,
        'onReorder': _SliverReorderableList_onReorder$,
        'onReorderStart': _SliverReorderableList_onReorderStart$,
        'onReorderEnd': _SliverReorderableList_onReorderEnd$,
        'proxyDecorator': _SliverReorderableList_proxyDecorator$,
        'itemExtent': _SliverReorderableList_itemExtent$,
        'prototypeItem': _SliverReorderableList_prototypeItem$,
        'createState': _SliverReorderableList_createState$,
      },
      {},
    ),
    'SliverReorderableListState': m.ClassMirror(
      'SliverReorderableListState',
      {
        'didChangeDependencies':
            _SliverReorderableListState_didChangeDependencies$,
        'didUpdateWidget': _SliverReorderableListState_didUpdateWidget$,
        'dispose': _SliverReorderableListState_dispose$,
        'startItemDragReorder':
            _SliverReorderableListState_startItemDragReorder$,
        'cancelReorder': _SliverReorderableListState_cancelReorder$,
        'build': _SliverReorderableListState_build$,
      },
      {},
    ),
    'ReorderableDragStartListener': m.ClassMirror(
      'ReorderableDragStartListener',
      {
        'child': _ReorderableDragStartListener_child$,
        'index': _ReorderableDragStartListener_index$,
        'enabled': _ReorderableDragStartListener_enabled$,
        'build': _ReorderableDragStartListener_build$,
        'createRecognizer': _ReorderableDragStartListener_createRecognizer$,
      },
      {},
    ),
    'ReorderableDelayedDragStartListener': m.ClassMirror(
      'ReorderableDelayedDragStartListener',
      {
        'createRecognizer':
            _ReorderableDelayedDragStartListener_createRecognizer$
      },
      {},
    ),
  },
);
Widget Function(BuildContext, int) _ReorderableList_itemBuilder$(
    ReorderableList target) {
  return target.itemBuilder;
}

int _ReorderableList_itemCount$(ReorderableList target) {
  return target.itemCount;
}

void Function(int, int) _ReorderableList_onReorder$(ReorderableList target) {
  return target.onReorder;
}

void Function(int)? _ReorderableList_onReorderStart$(ReorderableList target) {
  return target.onReorderStart;
}

void Function(int)? _ReorderableList_onReorderEnd$(ReorderableList target) {
  return target.onReorderEnd;
}

Widget Function(Widget, int, Animation<double>)?
    _ReorderableList_proxyDecorator$(ReorderableList target) {
  return target.proxyDecorator;
}

EdgeInsetsGeometry? _ReorderableList_padding$(ReorderableList target) {
  return target.padding;
}

Axis _ReorderableList_scrollDirection$(ReorderableList target) {
  return target.scrollDirection;
}

bool _ReorderableList_reverse$(ReorderableList target) {
  return target.reverse;
}

ScrollController? _ReorderableList_controller$(ReorderableList target) {
  return target.controller;
}

bool? _ReorderableList_primary$(ReorderableList target) {
  return target.primary;
}

ScrollPhysics? _ReorderableList_physics$(ReorderableList target) {
  return target.physics;
}

bool _ReorderableList_shrinkWrap$(ReorderableList target) {
  return target.shrinkWrap;
}

double _ReorderableList_anchor$(ReorderableList target) {
  return target.anchor;
}

double? _ReorderableList_cacheExtent$(ReorderableList target) {
  return target.cacheExtent;
}

DragStartBehavior _ReorderableList_dragStartBehavior$(ReorderableList target) {
  return target.dragStartBehavior;
}

ScrollViewKeyboardDismissBehavior _ReorderableList_keyboardDismissBehavior$(
    ReorderableList target) {
  return target.keyboardDismissBehavior;
}

String? _ReorderableList_restorationId$(ReorderableList target) {
  return target.restorationId;
}

Clip _ReorderableList_clipBehavior$(ReorderableList target) {
  return target.clipBehavior;
}

double? _ReorderableList_itemExtent$(ReorderableList target) {
  return target.itemExtent;
}

Widget? _ReorderableList_prototypeItem$(ReorderableList target) {
  return target.prototypeItem;
}

Function _ReorderableList_of$(m.Scope scope) => ReorderableList.of;
Function _ReorderableList_maybeOf$(m.Scope scope) => ReorderableList.maybeOf;
Function _ReorderableList_createState$(
  m.Scope scope,
  ReorderableList target,
) =>
    target.createState;
Function _ReorderableListState_startItemDragReorder$(
  m.Scope scope,
  ReorderableListState target,
) =>
    target.startItemDragReorder;
Function _ReorderableListState_cancelReorder$(
  m.Scope scope,
  ReorderableListState target,
) =>
    target.cancelReorder;
Function _ReorderableListState_build$(
  m.Scope scope,
  ReorderableListState target,
) =>
    target.build;
Widget Function(BuildContext, int) _SliverReorderableList_itemBuilder$(
    SliverReorderableList target) {
  return target.itemBuilder;
}

int? Function(Key)? _SliverReorderableList_findChildIndexCallback$(
    SliverReorderableList target) {
  return target.findChildIndexCallback;
}

int _SliverReorderableList_itemCount$(SliverReorderableList target) {
  return target.itemCount;
}

void Function(int, int) _SliverReorderableList_onReorder$(
    SliverReorderableList target) {
  return target.onReorder;
}

void Function(int)? _SliverReorderableList_onReorderStart$(
    SliverReorderableList target) {
  return target.onReorderStart;
}

void Function(int)? _SliverReorderableList_onReorderEnd$(
    SliverReorderableList target) {
  return target.onReorderEnd;
}

Widget Function(Widget, int, Animation<double>)?
    _SliverReorderableList_proxyDecorator$(SliverReorderableList target) {
  return target.proxyDecorator;
}

double? _SliverReorderableList_itemExtent$(SliverReorderableList target) {
  return target.itemExtent;
}

Widget? _SliverReorderableList_prototypeItem$(SliverReorderableList target) {
  return target.prototypeItem;
}

Function _SliverReorderableList_createState$(
  m.Scope scope,
  SliverReorderableList target,
) =>
    target.createState;
Function _SliverReorderableList_of$(m.Scope scope) => SliverReorderableList.of;
Function _SliverReorderableList_maybeOf$(m.Scope scope) =>
    SliverReorderableList.maybeOf;
Function _SliverReorderableListState_didChangeDependencies$(
  m.Scope scope,
  SliverReorderableListState target,
) =>
    target.didChangeDependencies;
Function _SliverReorderableListState_didUpdateWidget$(
  m.Scope scope,
  SliverReorderableListState target,
) =>
    target.didUpdateWidget;
Function _SliverReorderableListState_dispose$(
  m.Scope scope,
  SliverReorderableListState target,
) =>
    target.dispose;
Function _SliverReorderableListState_startItemDragReorder$(
  m.Scope scope,
  SliverReorderableListState target,
) =>
    target.startItemDragReorder;
Function _SliverReorderableListState_cancelReorder$(
  m.Scope scope,
  SliverReorderableListState target,
) =>
    target.cancelReorder;
Function _SliverReorderableListState_build$(
  m.Scope scope,
  SliverReorderableListState target,
) =>
    target.build;
Widget _ReorderableDragStartListener_child$(
    ReorderableDragStartListener target) {
  return target.child;
}

int _ReorderableDragStartListener_index$(ReorderableDragStartListener target) {
  return target.index;
}

bool _ReorderableDragStartListener_enabled$(
    ReorderableDragStartListener target) {
  return target.enabled;
}

Function _ReorderableDragStartListener_build$(
  m.Scope scope,
  ReorderableDragStartListener target,
) =>
    target.build;
Function _ReorderableDragStartListener_createRecognizer$(
  m.Scope scope,
  ReorderableDragStartListener target,
) =>
    target.createRecognizer;
Function _ReorderableDelayedDragStartListener_createRecognizer$(
  m.Scope scope,
  ReorderableDelayedDragStartListener target,
) =>
    target.createRecognizer;
