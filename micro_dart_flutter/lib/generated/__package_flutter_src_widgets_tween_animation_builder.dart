// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/tween_animation_builder.dart';
import 'package:flutter/animation.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/implicit_animations.dart';
import 'package:flutter/src/widgets/value_listenable_builder.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/tween_animation_builder.dart',
  {'TweenAnimationBuilder.': _TweenAnimationBuilder__$},
  {},
  {
    'TweenAnimationBuilder': m.ClassMirror(
      'TweenAnimationBuilder',
      {
        '#as': TweenAnimationBuilder_as$,
        '#is': TweenAnimationBuilder_is$,
        'tween': _TweenAnimationBuilder_tween$,
        'builder': _TweenAnimationBuilder_builder$,
        'child': _TweenAnimationBuilder_child$,
        'createState': _TweenAnimationBuilder_createState$,
      },
      {},
    )
  },
);
Function TweenAnimationBuilder_as$<T extends Object?>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as TweenAnimationBuilder<T>;
Function TweenAnimationBuilder_is$<T extends Object?>(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is TweenAnimationBuilder<T>;
Function _TweenAnimationBuilder_tween$<T extends Object?>(
  m.Scope scope$,
  TweenAnimationBuilder<T> target$,
) =>
    () {
      return target$.tween;
    };
Function _TweenAnimationBuilder_builder$<T extends Object?>(
  m.Scope scope$,
  TweenAnimationBuilder<T> target$,
) =>
    () {
      return target$.builder;
    };
Function _TweenAnimationBuilder_child$<T extends Object?>(
  m.Scope scope$,
  TweenAnimationBuilder<T> target$,
) =>
    () {
      return target$.child;
    };
Function _TweenAnimationBuilder__$(m.Scope scope$) => <T extends Object?>({
      Key? key,
      required Tween<T> tween,
      required Duration duration,
      Curve? curve,
      required m.FunctionPointer builder,
      m.FunctionPointer? onEnd,
      Widget? child,
    }) {
      Widget builderProxy(
        BuildContext builder_context$,
        dynamic builder_value$,
        Widget? builder_child$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            builder,
            [
              builder_context$,
              builder_value$,
              builder_child$,
            ],
            {},
          );
      void onEndProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onEnd!,
            [],
            {},
          );
      return TweenAnimationBuilder<T>(
        builder: builderProxy,
        child: child,
        curve: curve ?? Curves.linear,
        duration: duration,
        key: key,
        onEnd: onEnd == null ? null : onEndProxy,
        tween: tween,
      );
    };
Function _TweenAnimationBuilder_createState$<T extends Object?>(
  m.Scope scope$,
  TweenAnimationBuilder<T> target$,
) =>
    target$.createState;
