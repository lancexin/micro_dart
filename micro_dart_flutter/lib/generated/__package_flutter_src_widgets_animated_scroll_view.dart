// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/animated_scroll_view.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/scroll_delegate.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_view.dart';
import 'package:flutter/src/widgets/sliver.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/animated_scroll_view.dart',
  {
    'AnimatedList.of': _AnimatedList_of$,
    'AnimatedList.maybeOf': _AnimatedList_maybeOf$,
    'AnimatedGrid.of': _AnimatedGrid_of$,
    'AnimatedGrid.maybeOf': _AnimatedGrid_maybeOf$,
    'SliverAnimatedList.of': _SliverAnimatedList_of$,
    'SliverAnimatedList.maybeOf': _SliverAnimatedList_maybeOf$,
    'SliverAnimatedGrid.of': _SliverAnimatedGrid_of$,
    'SliverAnimatedGrid.maybeOf': _SliverAnimatedGrid_maybeOf$,
  },
  {},
  {
    'AnimatedList': m.ClassMirror(
      'AnimatedList',
      {'createState': _AnimatedList_createState$},
      {},
    ),
    'AnimatedListState': m.ClassMirror(
      'AnimatedListState',
      {'build': _AnimatedListState_build$},
      {},
    ),
    'AnimatedGrid': m.ClassMirror(
      'AnimatedGrid',
      {
        'gridDelegate': _AnimatedGrid_gridDelegate$,
        'createState': _AnimatedGrid_createState$,
      },
      {},
    ),
    'AnimatedGridState': m.ClassMirror(
      'AnimatedGridState',
      {'build': _AnimatedGridState_build$},
      {},
    ),
    'SliverAnimatedList': m.ClassMirror(
      'SliverAnimatedList',
      {'createState': _SliverAnimatedList_createState$},
      {},
    ),
    'SliverAnimatedListState': m.ClassMirror(
      'SliverAnimatedListState',
      {'build': _SliverAnimatedListState_build$},
      {},
    ),
    'SliverAnimatedGrid': m.ClassMirror(
      'SliverAnimatedGrid',
      {
        'gridDelegate': _SliverAnimatedGrid_gridDelegate$,
        'createState': _SliverAnimatedGrid_createState$,
      },
      {},
    ),
    'SliverAnimatedGridState': m.ClassMirror(
      'SliverAnimatedGridState',
      {'build': _SliverAnimatedGridState_build$},
      {},
    ),
  },
);
Function _AnimatedList_of$(m.Scope scope) => AnimatedList.of;
Function _AnimatedList_maybeOf$(m.Scope scope) => AnimatedList.maybeOf;
Function _AnimatedList_createState$(
  m.Scope scope,
  AnimatedList target,
) =>
    target.createState;
Function _AnimatedListState_build$(
  m.Scope scope,
  AnimatedListState target,
) =>
    target.build;
SliverGridDelegate _AnimatedGrid_gridDelegate$(AnimatedGrid target) {
  return target.gridDelegate;
}

Function _AnimatedGrid_of$(m.Scope scope) => AnimatedGrid.of;
Function _AnimatedGrid_maybeOf$(m.Scope scope) => AnimatedGrid.maybeOf;
Function _AnimatedGrid_createState$(
  m.Scope scope,
  AnimatedGrid target,
) =>
    target.createState;
Function _AnimatedGridState_build$(
  m.Scope scope,
  AnimatedGridState target,
) =>
    target.build;
Function _SliverAnimatedList_createState$(
  m.Scope scope,
  SliverAnimatedList target,
) =>
    target.createState;
Function _SliverAnimatedList_of$(m.Scope scope) => SliverAnimatedList.of;
Function _SliverAnimatedList_maybeOf$(m.Scope scope) =>
    SliverAnimatedList.maybeOf;
Function _SliverAnimatedListState_build$(
  m.Scope scope,
  SliverAnimatedListState target,
) =>
    target.build;
SliverGridDelegate _SliverAnimatedGrid_gridDelegate$(
    SliverAnimatedGrid target) {
  return target.gridDelegate;
}

Function _SliverAnimatedGrid_createState$(
  m.Scope scope,
  SliverAnimatedGrid target,
) =>
    target.createState;
Function _SliverAnimatedGrid_of$(m.Scope scope) => SliverAnimatedGrid.of;
Function _SliverAnimatedGrid_maybeOf$(m.Scope scope) =>
    SliverAnimatedGrid.maybeOf;
Function _SliverAnimatedGridState_build$(
  m.Scope scope,
  SliverAnimatedGridState target,
) =>
    target.build;
