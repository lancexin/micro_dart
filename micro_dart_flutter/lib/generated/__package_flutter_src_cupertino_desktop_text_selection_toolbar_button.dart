// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/desktop_text_selection_toolbar_button.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/button.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/text_selection_toolbar_button.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/desktop_text_selection_toolbar_button.dart',
  {},
  {},
  {
    'CupertinoDesktopTextSelectionToolbarButton': m.ClassMirror(
      'CupertinoDesktopTextSelectionToolbarButton',
      {
        '#as': CupertinoDesktopTextSelectionToolbarButton_as$,
        '#is': CupertinoDesktopTextSelectionToolbarButton_is$,
        'onPressed': _CupertinoDesktopTextSelectionToolbarButton_onPressed$,
        'child': _CupertinoDesktopTextSelectionToolbarButton_child$,
        'buttonItem': _CupertinoDesktopTextSelectionToolbarButton_buttonItem$,
        'createState': _CupertinoDesktopTextSelectionToolbarButton_createState$,
      },
      {},
    )
  },
);
Function CupertinoDesktopTextSelectionToolbarButton_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as CupertinoDesktopTextSelectionToolbarButton;
Function CupertinoDesktopTextSelectionToolbarButton_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is CupertinoDesktopTextSelectionToolbarButton;
void Function() _CupertinoDesktopTextSelectionToolbarButton_onPressed$(
    CupertinoDesktopTextSelectionToolbarButton target) {
  return target.onPressed;
}

Widget? _CupertinoDesktopTextSelectionToolbarButton_child$(
    CupertinoDesktopTextSelectionToolbarButton target) {
  return target.child;
}

ContextMenuButtonItem? _CupertinoDesktopTextSelectionToolbarButton_buttonItem$(
    CupertinoDesktopTextSelectionToolbarButton target) {
  return target.buttonItem;
}

Function _CupertinoDesktopTextSelectionToolbarButton_createState$(
  m.Scope scope,
  CupertinoDesktopTextSelectionToolbarButton target,
) =>
    target.createState;
