// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/ink_splash.dart';
import 'dart:math';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:flutter/src/material/material.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/ink_splash.dart',
  {'InkSplash.splashFactory': _InkSplash_splashFactory$},
  {},
  {
    'InkSplash': m.ClassMirror(
      'InkSplash',
      {
        '#as': InkSplash_as$,
        '#is': InkSplash_is$,
        'confirm': _InkSplash_confirm$,
        'cancel': _InkSplash_cancel$,
        'dispose': _InkSplash_dispose$,
        'paintFeature': _InkSplash_paintFeature$,
      },
      {},
    )
  },
);
Function InkSplash_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as InkSplash;
Function InkSplash_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is InkSplash;
InteractiveInkFeatureFactory _InkSplash_splashFactory$() {
  return InkSplash.splashFactory;
}

Function _InkSplash_confirm$(
  m.Scope scope,
  InkSplash target,
) =>
    target.confirm;
Function _InkSplash_cancel$(
  m.Scope scope,
  InkSplash target,
) =>
    target.cancel;
Function _InkSplash_dispose$(
  m.Scope scope,
  InkSplash target,
) =>
    target.dispose;
Function _InkSplash_paintFeature$(
  m.Scope scope,
  InkSplash target,
) =>
    target.paintFeature;
