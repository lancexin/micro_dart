// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/text_selection.dart';
import 'dart:math';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/text_selection_theme.dart';
import 'package:flutter/src/material/text_selection_toolbar.dart';
import 'package:flutter/src/material/text_selection_toolbar_text_button.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/text_selection.dart',
  {
    'materialTextSelectionHandleControls':
        _materialTextSelectionHandleControls$,
    'materialTextSelectionControls': _materialTextSelectionControls$,
    'MaterialTextSelectionControls.': _MaterialTextSelectionControls__$,
    'MaterialTextSelectionControls.buildHandle':
        _MaterialTextSelectionControls_buildHandle$,
  },
  {},
  {
    'MaterialTextSelectionControls': m.ClassMirror(
      'MaterialTextSelectionControls',
      {
        '#as': MaterialTextSelectionControls_as$,
        '#is': MaterialTextSelectionControls_is$,
        'getHandleSize': _MaterialTextSelectionControls_getHandleSize$,
        'getHandleAnchor': _MaterialTextSelectionControls_getHandleAnchor$,
      },
      {},
    )
  },
);
TextSelectionControls _materialTextSelectionHandleControls$() {
  return materialTextSelectionHandleControls;
}

TextSelectionControls _materialTextSelectionControls$() {
  return materialTextSelectionControls;
}

Function MaterialTextSelectionControls_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as MaterialTextSelectionControls;
Function MaterialTextSelectionControls_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is MaterialTextSelectionControls;
Function _MaterialTextSelectionControls__$(m.Scope scope$) => () {
      return MaterialTextSelectionControls();
    };
Function _MaterialTextSelectionControls_getHandleSize$(
  m.Scope scope$,
  MaterialTextSelectionControls target$,
) =>
    target$.getHandleSize;
Function _MaterialTextSelectionControls_buildHandle$(
  m.Scope scope$,
  MaterialTextSelectionControls target$,
) =>
    (
      BuildContext context,
      TextSelectionHandleType type,
      double textHeight, [
      m.FunctionPointer? onTap,
    ]) {
      if (onTap == null) {
        return target$.buildHandle(
          context,
          type,
          textHeight,
        );
      }
      void onTapProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onTap!,
            [],
            {},
          );
      return target$.buildHandle(
        context,
        type,
        textHeight,
        onTap == null ? null : onTapProxy,
      );
    };
Function _MaterialTextSelectionControls_getHandleAnchor$(
  m.Scope scope$,
  MaterialTextSelectionControls target$,
) =>
    target$.getHandleAnchor;
