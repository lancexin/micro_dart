// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/asset_manifest.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/services/asset_bundle.dart';
import 'package:flutter/src/services/message_codecs.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/asset_manifest.dart',
  {'AssetManifest.loadFromAssetBundle': _AssetManifest_loadFromAssetBundle$},
  {},
  {
    'AssetManifest': m.ClassMirror(
      'AssetManifest',
      {
        'listAssets': _AssetManifest_listAssets$,
        'getAssetVariants': _AssetManifest_getAssetVariants$,
      },
      {},
    ),
    'AssetMetadata': m.ClassMirror(
      'AssetMetadata',
      {
        'targetDevicePixelRatio': _AssetMetadata_targetDevicePixelRatio$,
        'key': _AssetMetadata_key$,
        'main': _AssetMetadata_main$,
      },
      {},
    ),
  },
);
Function _AssetManifest_loadFromAssetBundle$(m.Scope scope) =>
    AssetManifest.loadFromAssetBundle;
Function _AssetManifest_listAssets$(
  m.Scope scope,
  AssetManifest target,
) =>
    target.listAssets;
Function _AssetManifest_getAssetVariants$(
  m.Scope scope,
  AssetManifest target,
) =>
    target.getAssetVariants;
double? _AssetMetadata_targetDevicePixelRatio$(AssetMetadata target) {
  return target.targetDevicePixelRatio;
}

String _AssetMetadata_key$(AssetMetadata target) {
  return target.key;
}

bool _AssetMetadata_main$(AssetMetadata target) {
  return target.main;
}
