// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/outlined_button_theme.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/outlined_button_theme.dart',
  {
    'OutlinedButtonThemeData.lerp': _OutlinedButtonThemeData_lerp$,
    'OutlinedButtonTheme.of': _OutlinedButtonTheme_of$,
  },
  {},
  {
    'OutlinedButtonThemeData': m.ClassMirror(
      'OutlinedButtonThemeData',
      {
        'style': _OutlinedButtonThemeData_style$,
        'hashCode': _OutlinedButtonThemeData_hashCode$,
        'debugFillProperties': _OutlinedButtonThemeData_debugFillProperties$,
      },
      {},
    ),
    'OutlinedButtonTheme': m.ClassMirror(
      'OutlinedButtonTheme',
      {
        'data': _OutlinedButtonTheme_data$,
        'wrap': _OutlinedButtonTheme_wrap$,
        'updateShouldNotify': _OutlinedButtonTheme_updateShouldNotify$,
      },
      {},
    ),
  },
);
ButtonStyle? _OutlinedButtonThemeData_style$(OutlinedButtonThemeData target) {
  return target.style;
}

int _OutlinedButtonThemeData_hashCode$(OutlinedButtonThemeData target) {
  return target.hashCode;
}

Function _OutlinedButtonThemeData_lerp$(m.Scope scope) =>
    OutlinedButtonThemeData.lerp;
Function _OutlinedButtonThemeData_debugFillProperties$(
  m.Scope scope,
  OutlinedButtonThemeData target,
) =>
    target.debugFillProperties;
OutlinedButtonThemeData _OutlinedButtonTheme_data$(OutlinedButtonTheme target) {
  return target.data;
}

Function _OutlinedButtonTheme_of$(m.Scope scope) => OutlinedButtonTheme.of;
Function _OutlinedButtonTheme_wrap$(
  m.Scope scope,
  OutlinedButtonTheme target,
) =>
    target.wrap;
Function _OutlinedButtonTheme_updateShouldNotify$(
  m.Scope scope,
  OutlinedButtonTheme target,
) =>
    target.updateShouldNotify;
