// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/tooltip_visibility.dart';
import 'package:flutter/widgets.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/tooltip_visibility.dart',
  {
    'TooltipVisibility.': _TooltipVisibility__$,
    'TooltipVisibility.of': _TooltipVisibility_of$,
  },
  {},
  {
    'TooltipVisibility': m.ClassMirror(
      'TooltipVisibility',
      {
        '#as': TooltipVisibility_as$,
        '#is': TooltipVisibility_is$,
        'child': _TooltipVisibility_child$,
        'visible': _TooltipVisibility_visible$,
        'build': _TooltipVisibility_build$,
      },
      {},
    )
  },
);
Function TooltipVisibility_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as TooltipVisibility;
Function TooltipVisibility_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is TooltipVisibility;
Function _TooltipVisibility_child$(
  m.Scope scope$,
  TooltipVisibility target$,
) =>
    () {
      return target$.child;
    };
Function _TooltipVisibility_visible$(
  m.Scope scope$,
  TooltipVisibility target$,
) =>
    () {
      return target$.visible;
    };
Function _TooltipVisibility__$(m.Scope scope$) => ({
      Key? key,
      required bool visible,
      required Widget child,
    }) {
      return TooltipVisibility(
        child: child,
        key: key,
        visible: visible,
      );
    };
Function _TooltipVisibility_of$(m.Scope scope$) => TooltipVisibility.of;
Function _TooltipVisibility_build$(
  m.Scope scope$,
  TooltipVisibility target$,
) =>
    target$.build;
