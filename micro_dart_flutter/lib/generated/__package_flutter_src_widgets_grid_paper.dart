// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/grid_paper.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/grid_paper.dart',
  {'GridPaper.': _GridPaper__$},
  {},
  {
    'GridPaper': m.ClassMirror(
      'GridPaper',
      {
        '#as': GridPaper_as$,
        '#is': GridPaper_is$,
        'color': _GridPaper_color$,
        'interval': _GridPaper_interval$,
        'divisions': _GridPaper_divisions$,
        'subdivisions': _GridPaper_subdivisions$,
        'child': _GridPaper_child$,
        'build': _GridPaper_build$,
      },
      {},
    )
  },
);
Function GridPaper_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as GridPaper;
Function GridPaper_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is GridPaper;
Function _GridPaper_color$(
  m.Scope scope$,
  GridPaper target$,
) =>
    () {
      return target$.color;
    };
Function _GridPaper_interval$(
  m.Scope scope$,
  GridPaper target$,
) =>
    () {
      return target$.interval;
    };
Function _GridPaper_divisions$(
  m.Scope scope$,
  GridPaper target$,
) =>
    () {
      return target$.divisions;
    };
Function _GridPaper_subdivisions$(
  m.Scope scope$,
  GridPaper target$,
) =>
    () {
      return target$.subdivisions;
    };
Function _GridPaper_child$(
  m.Scope scope$,
  GridPaper target$,
) =>
    () {
      return target$.child;
    };
Function _GridPaper__$(m.Scope scope$) => ({
      Key? key,
      Color? color,
      double? interval,
      int? divisions,
      int? subdivisions,
      Widget? child,
    }) {
      return GridPaper(
        child: child,
        color: color ?? const Color(0x7FC3E8F3),
        divisions: divisions ?? 2,
        interval: interval ?? 100.0,
        key: key,
        subdivisions: subdivisions ?? 5,
      );
    };
Function _GridPaper_build$(
  m.Scope scope$,
  GridPaper target$,
) =>
    target$.build;
