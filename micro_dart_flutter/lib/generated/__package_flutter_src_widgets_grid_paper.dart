// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/grid_paper.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/grid_paper.dart',
  {},
  {},
  {
    'GridPaper': m.ClassMirror(
      'GridPaper',
      {
        '#as': GridPaper_as$,
        '#is': GridPaper_is$,
        'color': _GridPaper_color$,
        'interval': _GridPaper_interval$,
        'divisions': _GridPaper_divisions$,
        'subdivisions': _GridPaper_subdivisions$,
        'child': _GridPaper_child$,
        'build': _GridPaper_build$,
      },
      {},
    )
  },
);
Function GridPaper_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as GridPaper;
Function GridPaper_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is GridPaper;
Color _GridPaper_color$(GridPaper target) {
  return target.color;
}

double _GridPaper_interval$(GridPaper target) {
  return target.interval;
}

int _GridPaper_divisions$(GridPaper target) {
  return target.divisions;
}

int _GridPaper_subdivisions$(GridPaper target) {
  return target.subdivisions;
}

Widget? _GridPaper_child$(GridPaper target) {
  return target.child;
}

Function _GridPaper_build$(
  m.Scope scope,
  GridPaper target,
) =>
    target.build;
