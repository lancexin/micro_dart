// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/context_menu_action.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/context_menu_action.dart',
  {},
  {},
  {
    'CupertinoContextMenuAction': m.ClassMirror(
      'CupertinoContextMenuAction',
      {
        '#as': CupertinoContextMenuAction_as$,
        '#is': CupertinoContextMenuAction_is$,
        'child': _CupertinoContextMenuAction_child$,
        'isDefaultAction': _CupertinoContextMenuAction_isDefaultAction$,
        'isDestructiveAction': _CupertinoContextMenuAction_isDestructiveAction$,
        'onPressed': _CupertinoContextMenuAction_onPressed$,
        'trailingIcon': _CupertinoContextMenuAction_trailingIcon$,
        'createState': _CupertinoContextMenuAction_createState$,
      },
      {},
    )
  },
);
Function CupertinoContextMenuAction_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as CupertinoContextMenuAction;
Function CupertinoContextMenuAction_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is CupertinoContextMenuAction;
Widget _CupertinoContextMenuAction_child$(CupertinoContextMenuAction target) {
  return target.child;
}

bool _CupertinoContextMenuAction_isDefaultAction$(
    CupertinoContextMenuAction target) {
  return target.isDefaultAction;
}

bool _CupertinoContextMenuAction_isDestructiveAction$(
    CupertinoContextMenuAction target) {
  return target.isDestructiveAction;
}

void Function()? _CupertinoContextMenuAction_onPressed$(
    CupertinoContextMenuAction target) {
  return target.onPressed;
}

IconData? _CupertinoContextMenuAction_trailingIcon$(
    CupertinoContextMenuAction target) {
  return target.trailingIcon;
}

Function _CupertinoContextMenuAction_createState$(
  m.Scope scope,
  CupertinoContextMenuAction target,
) =>
    target.createState;
