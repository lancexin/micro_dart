// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/star_border.dart';
import 'dart:math';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:vector_math/vector_math_64.dart' show Matrix4;
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/circle_border.dart';
import 'package:flutter/src/painting/rounded_rectangle_border.dart';
import 'package:flutter/src/painting/stadium_border.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/star_border.dart',
  {},
  {},
  {
    'StarBorder': m.ClassMirror(
      'StarBorder',
      {
        'points': _StarBorder_points$,
        'pointRounding': _StarBorder_pointRounding$,
        'valleyRounding': _StarBorder_valleyRounding$,
        'squash': _StarBorder_squash$,
        'innerRadiusRatio': _StarBorder_innerRadiusRatio$,
        'rotation': _StarBorder_rotation$,
        'hashCode': _StarBorder_hashCode$,
        'scale': _StarBorder_scale$,
        'lerpFrom': _StarBorder_lerpFrom$,
        'lerpTo': _StarBorder_lerpTo$,
        'copyWith': _StarBorder_copyWith$,
        'getInnerPath': _StarBorder_getInnerPath$,
        'getOuterPath': _StarBorder_getOuterPath$,
        'paint': _StarBorder_paint$,
        'toString': _StarBorder_toString$,
      },
      {},
    )
  },
);
double _StarBorder_points$(StarBorder target) {
  return target.points;
}

double _StarBorder_pointRounding$(StarBorder target) {
  return target.pointRounding;
}

double _StarBorder_valleyRounding$(StarBorder target) {
  return target.valleyRounding;
}

double _StarBorder_squash$(StarBorder target) {
  return target.squash;
}

double _StarBorder_innerRadiusRatio$(StarBorder target) {
  return target.innerRadiusRatio;
}

double _StarBorder_rotation$(StarBorder target) {
  return target.rotation;
}

int _StarBorder_hashCode$(StarBorder target) {
  return target.hashCode;
}

Function _StarBorder_scale$(
  m.Scope scope,
  StarBorder target,
) =>
    target.scale;
Function _StarBorder_lerpFrom$(
  m.Scope scope,
  StarBorder target,
) =>
    target.lerpFrom;
Function _StarBorder_lerpTo$(
  m.Scope scope,
  StarBorder target,
) =>
    target.lerpTo;
Function _StarBorder_copyWith$(
  m.Scope scope,
  StarBorder target,
) =>
    target.copyWith;
Function _StarBorder_getInnerPath$(
  m.Scope scope,
  StarBorder target,
) =>
    target.getInnerPath;
Function _StarBorder_getOuterPath$(
  m.Scope scope,
  StarBorder target,
) =>
    target.getOuterPath;
Function _StarBorder_paint$(
  m.Scope scope,
  StarBorder target,
) =>
    target.paint;
Function _StarBorder_toString$(
  m.Scope scope,
  StarBorder target,
) =>
    target.toString;
