// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/interface_level.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/interface_level.dart',
  {
    'CupertinoUserInterfaceLevel.': _CupertinoUserInterfaceLevel__$,
    'CupertinoUserInterfaceLevel.of': _CupertinoUserInterfaceLevel_of$,
    'CupertinoUserInterfaceLevel.maybeOf':
        _CupertinoUserInterfaceLevel_maybeOf$,
    'CupertinoUserInterfaceLevelData.base':
        _CupertinoUserInterfaceLevelData_base$,
    'CupertinoUserInterfaceLevelData.elevated':
        _CupertinoUserInterfaceLevelData_elevated$,
    'CupertinoUserInterfaceLevelData.values':
        _CupertinoUserInterfaceLevelData_values$,
  },
  {},
  {
    'CupertinoUserInterfaceLevel': m.ClassMirror(
      'CupertinoUserInterfaceLevel',
      {
        '#as': CupertinoUserInterfaceLevel_as$,
        '#is': CupertinoUserInterfaceLevel_is$,
        'updateShouldNotify': _CupertinoUserInterfaceLevel_updateShouldNotify$,
        'debugFillProperties':
            _CupertinoUserInterfaceLevel_debugFillProperties$,
      },
      {},
    ),
    'CupertinoUserInterfaceLevelData': m.ClassMirror(
      'CupertinoUserInterfaceLevelData',
      {},
      {},
    ),
  },
);
Function CupertinoUserInterfaceLevel_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoUserInterfaceLevel;
Function CupertinoUserInterfaceLevel_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoUserInterfaceLevel;
Function _CupertinoUserInterfaceLevel__$(m.Scope scope$) => ({
      Key? key,
      required CupertinoUserInterfaceLevelData data,
      required Widget child,
    }) {
      return CupertinoUserInterfaceLevel(
        child: child,
        data: data,
        key: key,
      );
    };
Function _CupertinoUserInterfaceLevel_updateShouldNotify$(
  m.Scope scope$,
  CupertinoUserInterfaceLevel target$,
) =>
    target$.updateShouldNotify;
Function _CupertinoUserInterfaceLevel_of$(m.Scope scope$) =>
    CupertinoUserInterfaceLevel.of;
Function _CupertinoUserInterfaceLevel_maybeOf$(m.Scope scope$) =>
    CupertinoUserInterfaceLevel.maybeOf;
Function _CupertinoUserInterfaceLevel_debugFillProperties$(
  m.Scope scope$,
  CupertinoUserInterfaceLevel target$,
) =>
    target$.debugFillProperties;
Function _CupertinoUserInterfaceLevelData_base$(m.Scope scope$) =>
    () => CupertinoUserInterfaceLevelData.base;
Function _CupertinoUserInterfaceLevelData_elevated$(m.Scope scope$) =>
    () => CupertinoUserInterfaceLevelData.elevated;
Function _CupertinoUserInterfaceLevelData_values$(m.Scope scope$) =>
    () => CupertinoUserInterfaceLevelData.values;
