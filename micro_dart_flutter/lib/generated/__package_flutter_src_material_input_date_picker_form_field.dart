// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/input_date_picker_form_field.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/date.dart';
import 'package:flutter/src/material/input_border.dart';
import 'package:flutter/src/material/input_decorator.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/text_form_field.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/input_date_picker_form_field.dart',
  {},
  {},
  {
    'InputDatePickerFormField': m.ClassMirror(
      'InputDatePickerFormField',
      {
        'initialDate': _InputDatePickerFormField_initialDate$,
        'firstDate': _InputDatePickerFormField_firstDate$,
        'lastDate': _InputDatePickerFormField_lastDate$,
        'onDateSubmitted': _InputDatePickerFormField_onDateSubmitted$,
        'onDateSaved': _InputDatePickerFormField_onDateSaved$,
        'selectableDayPredicate':
            _InputDatePickerFormField_selectableDayPredicate$,
        'errorFormatText': _InputDatePickerFormField_errorFormatText$,
        'errorInvalidText': _InputDatePickerFormField_errorInvalidText$,
        'fieldHintText': _InputDatePickerFormField_fieldHintText$,
        'fieldLabelText': _InputDatePickerFormField_fieldLabelText$,
        'keyboardType': _InputDatePickerFormField_keyboardType$,
        'autofocus': _InputDatePickerFormField_autofocus$,
        'createState': _InputDatePickerFormField_createState$,
      },
      {},
    )
  },
);
DateTime? _InputDatePickerFormField_initialDate$(
    InputDatePickerFormField target) {
  return target.initialDate;
}

DateTime _InputDatePickerFormField_firstDate$(InputDatePickerFormField target) {
  return target.firstDate;
}

DateTime _InputDatePickerFormField_lastDate$(InputDatePickerFormField target) {
  return target.lastDate;
}

void Function(DateTime)? _InputDatePickerFormField_onDateSubmitted$(
    InputDatePickerFormField target) {
  return target.onDateSubmitted;
}

void Function(DateTime)? _InputDatePickerFormField_onDateSaved$(
    InputDatePickerFormField target) {
  return target.onDateSaved;
}

bool Function(DateTime)? _InputDatePickerFormField_selectableDayPredicate$(
    InputDatePickerFormField target) {
  return target.selectableDayPredicate;
}

String? _InputDatePickerFormField_errorFormatText$(
    InputDatePickerFormField target) {
  return target.errorFormatText;
}

String? _InputDatePickerFormField_errorInvalidText$(
    InputDatePickerFormField target) {
  return target.errorInvalidText;
}

String? _InputDatePickerFormField_fieldHintText$(
    InputDatePickerFormField target) {
  return target.fieldHintText;
}

String? _InputDatePickerFormField_fieldLabelText$(
    InputDatePickerFormField target) {
  return target.fieldLabelText;
}

TextInputType? _InputDatePickerFormField_keyboardType$(
    InputDatePickerFormField target) {
  return target.keyboardType;
}

bool _InputDatePickerFormField_autofocus$(InputDatePickerFormField target) {
  return target.autofocus;
}

Function _InputDatePickerFormField_createState$(
  m.Scope scope,
  InputDatePickerFormField target,
) =>
    target.createState;
