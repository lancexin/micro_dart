// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/bottom_tab_bar.dart';
import 'dart:ui' show ImageFilter;
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/localizations.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/bottom_tab_bar.dart',
  {},
  {},
  {
    'CupertinoTabBar': m.ClassMirror(
      'CupertinoTabBar',
      {
        'items': _CupertinoTabBar_items$,
        'onTap': _CupertinoTabBar_onTap$,
        'currentIndex': _CupertinoTabBar_currentIndex$,
        'backgroundColor': _CupertinoTabBar_backgroundColor$,
        'activeColor': _CupertinoTabBar_activeColor$,
        'inactiveColor': _CupertinoTabBar_inactiveColor$,
        'iconSize': _CupertinoTabBar_iconSize$,
        'height': _CupertinoTabBar_height$,
        'border': _CupertinoTabBar_border$,
        'preferredSize': _CupertinoTabBar_preferredSize$,
        'opaque': _CupertinoTabBar_opaque$,
        'build': _CupertinoTabBar_build$,
      },
      {},
    )
  },
);
List<BottomNavigationBarItem> _CupertinoTabBar_items$(CupertinoTabBar target) {
  return target.items;
}

void Function(int)? _CupertinoTabBar_onTap$(CupertinoTabBar target) {
  return target.onTap;
}

int _CupertinoTabBar_currentIndex$(CupertinoTabBar target) {
  return target.currentIndex;
}

Color? _CupertinoTabBar_backgroundColor$(CupertinoTabBar target) {
  return target.backgroundColor;
}

Color? _CupertinoTabBar_activeColor$(CupertinoTabBar target) {
  return target.activeColor;
}

Color _CupertinoTabBar_inactiveColor$(CupertinoTabBar target) {
  return target.inactiveColor;
}

double _CupertinoTabBar_iconSize$(CupertinoTabBar target) {
  return target.iconSize;
}

double _CupertinoTabBar_height$(CupertinoTabBar target) {
  return target.height;
}

Border? _CupertinoTabBar_border$(CupertinoTabBar target) {
  return target.border;
}

Size _CupertinoTabBar_preferredSize$(CupertinoTabBar target) {
  return target.preferredSize;
}

Function _CupertinoTabBar_opaque$(
  m.Scope scope,
  CupertinoTabBar target,
) =>
    target.opaque;
Function _CupertinoTabBar_build$(
  m.Scope scope,
  CupertinoTabBar target,
) =>
    target.build;
