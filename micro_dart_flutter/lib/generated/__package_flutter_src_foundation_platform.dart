// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/foundation/platform.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/foundation/platform.dart',
  {
    'debugDefaultTargetPlatformOverride': _debugDefaultTargetPlatformOverride$,
    'defaultTargetPlatform': _defaultTargetPlatform$,
    'TargetPlatform.android': _TargetPlatform_android$,
    'TargetPlatform.fuchsia': _TargetPlatform_fuchsia$,
    'TargetPlatform.iOS': _TargetPlatform_iOS$,
    'TargetPlatform.linux': _TargetPlatform_linux$,
    'TargetPlatform.macOS': _TargetPlatform_macOS$,
    'TargetPlatform.windows': _TargetPlatform_windows$,
    'TargetPlatform.values': _TargetPlatform_values$,
  },
  {
    'debugDefaultTargetPlatformOverride':
        _debugDefaultTargetPlatformOverride_set$
  },
  {
    'TargetPlatform': m.ClassMirror(
      'TargetPlatform',
      {},
      {},
    )
  },
);
TargetPlatform? _debugDefaultTargetPlatformOverride$() {
  return debugDefaultTargetPlatformOverride;
}

void _debugDefaultTargetPlatformOverride_set$(TargetPlatform? other$) {
  debugDefaultTargetPlatformOverride = other$;
}

TargetPlatform _defaultTargetPlatform$() {
  return defaultTargetPlatform;
}

TargetPlatform _TargetPlatform_android$() {
  return TargetPlatform.android;
}

TargetPlatform _TargetPlatform_fuchsia$() {
  return TargetPlatform.fuchsia;
}

TargetPlatform _TargetPlatform_iOS$() {
  return TargetPlatform.iOS;
}

TargetPlatform _TargetPlatform_linux$() {
  return TargetPlatform.linux;
}

TargetPlatform _TargetPlatform_macOS$() {
  return TargetPlatform.macOS;
}

TargetPlatform _TargetPlatform_windows$() {
  return TargetPlatform.windows;
}

List<TargetPlatform> _TargetPlatform_values$() {
  return TargetPlatform.values;
}
