// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/text_selection_toolbar_layout_delegate.dart';
import 'dart:math';
import 'package:flutter/rendering.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/text_selection_toolbar_layout_delegate.dart',
  {
    'TextSelectionToolbarLayoutDelegate.':
        _TextSelectionToolbarLayoutDelegate__$,
    'TextSelectionToolbarLayoutDelegate.centerOn':
        _TextSelectionToolbarLayoutDelegate_centerOn$,
  },
  {},
  {
    'TextSelectionToolbarLayoutDelegate': m.ClassMirror(
      'TextSelectionToolbarLayoutDelegate',
      {
        '#as': TextSelectionToolbarLayoutDelegate_as$,
        '#is': TextSelectionToolbarLayoutDelegate_is$,
        'anchorAbove': _TextSelectionToolbarLayoutDelegate_anchorAbove$,
        'anchorBelow': _TextSelectionToolbarLayoutDelegate_anchorBelow$,
        'fitsAbove': _TextSelectionToolbarLayoutDelegate_fitsAbove$,
        'getConstraintsForChild':
            _TextSelectionToolbarLayoutDelegate_getConstraintsForChild$,
        'getPositionForChild':
            _TextSelectionToolbarLayoutDelegate_getPositionForChild$,
        'shouldRelayout': _TextSelectionToolbarLayoutDelegate_shouldRelayout$,
      },
      {},
    )
  },
);
Function TextSelectionToolbarLayoutDelegate_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as TextSelectionToolbarLayoutDelegate;
Function TextSelectionToolbarLayoutDelegate_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is TextSelectionToolbarLayoutDelegate;
Function _TextSelectionToolbarLayoutDelegate_anchorAbove$(
  m.Scope scope$,
  TextSelectionToolbarLayoutDelegate target$,
) =>
    () {
      return target$.anchorAbove;
    };
Function _TextSelectionToolbarLayoutDelegate_anchorBelow$(
  m.Scope scope$,
  TextSelectionToolbarLayoutDelegate target$,
) =>
    () {
      return target$.anchorBelow;
    };
Function _TextSelectionToolbarLayoutDelegate_fitsAbove$(
  m.Scope scope$,
  TextSelectionToolbarLayoutDelegate target$,
) =>
    () {
      return target$.fitsAbove;
    };
Function _TextSelectionToolbarLayoutDelegate__$(m.Scope scope$) => ({
      required Offset anchorAbove,
      required Offset anchorBelow,
      bool? fitsAbove,
    }) {
      return TextSelectionToolbarLayoutDelegate(
        anchorAbove: anchorAbove,
        anchorBelow: anchorBelow,
        fitsAbove: fitsAbove,
      );
    };
Function _TextSelectionToolbarLayoutDelegate_centerOn$(m.Scope scope$) =>
    TextSelectionToolbarLayoutDelegate.centerOn;
Function _TextSelectionToolbarLayoutDelegate_getConstraintsForChild$(
  m.Scope scope$,
  TextSelectionToolbarLayoutDelegate target$,
) =>
    target$.getConstraintsForChild;
Function _TextSelectionToolbarLayoutDelegate_getPositionForChild$(
  m.Scope scope$,
  TextSelectionToolbarLayoutDelegate target$,
) =>
    target$.getPositionForChild;
Function _TextSelectionToolbarLayoutDelegate_shouldRelayout$(
  m.Scope scope$,
  TextSelectionToolbarLayoutDelegate target$,
) =>
    target$.shouldRelayout;
