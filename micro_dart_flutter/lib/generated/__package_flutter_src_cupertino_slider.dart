// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/slider.dart';
import 'dart:math';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';
import 'package:flutter/src/cupertino/theme.dart';
import 'package:flutter/src/cupertino/thumb_painter.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/slider.dart',
  {},
  {},
  {
    'CupertinoSlider': m.ClassMirror(
      'CupertinoSlider',
      {
        'value': _CupertinoSlider_value$,
        'onChanged': _CupertinoSlider_onChanged$,
        'onChangeStart': _CupertinoSlider_onChangeStart$,
        'onChangeEnd': _CupertinoSlider_onChangeEnd$,
        'min': _CupertinoSlider_min$,
        'max': _CupertinoSlider_max$,
        'divisions': _CupertinoSlider_divisions$,
        'activeColor': _CupertinoSlider_activeColor$,
        'thumbColor': _CupertinoSlider_thumbColor$,
        'createState': _CupertinoSlider_createState$,
        'debugFillProperties': _CupertinoSlider_debugFillProperties$,
      },
      {},
    )
  },
);
double _CupertinoSlider_value$(CupertinoSlider target) {
  return target.value;
}

void Function(double)? _CupertinoSlider_onChanged$(CupertinoSlider target) {
  return target.onChanged;
}

void Function(double)? _CupertinoSlider_onChangeStart$(CupertinoSlider target) {
  return target.onChangeStart;
}

void Function(double)? _CupertinoSlider_onChangeEnd$(CupertinoSlider target) {
  return target.onChangeEnd;
}

double _CupertinoSlider_min$(CupertinoSlider target) {
  return target.min;
}

double _CupertinoSlider_max$(CupertinoSlider target) {
  return target.max;
}

int? _CupertinoSlider_divisions$(CupertinoSlider target) {
  return target.divisions;
}

Color? _CupertinoSlider_activeColor$(CupertinoSlider target) {
  return target.activeColor;
}

Color _CupertinoSlider_thumbColor$(CupertinoSlider target) {
  return target.thumbColor;
}

Function _CupertinoSlider_createState$(
  m.Scope scope,
  CupertinoSlider target,
) =>
    target.createState;
Function _CupertinoSlider_debugFillProperties$(
  m.Scope scope,
  CupertinoSlider target,
) =>
    target.debugFillProperties;
