// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/fade_in_image.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/image.dart';
import 'package:flutter/src/widgets/implicit_animations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/fade_in_image.dart',
  {},
  {},
  {
    'FadeInImage': m.ClassMirror(
      'FadeInImage',
      {
        'placeholder': _FadeInImage_placeholder$,
        'placeholderErrorBuilder': _FadeInImage_placeholderErrorBuilder$,
        'image': _FadeInImage_image$,
        'imageErrorBuilder': _FadeInImage_imageErrorBuilder$,
        'fadeOutDuration': _FadeInImage_fadeOutDuration$,
        'fadeOutCurve': _FadeInImage_fadeOutCurve$,
        'fadeInDuration': _FadeInImage_fadeInDuration$,
        'fadeInCurve': _FadeInImage_fadeInCurve$,
        'width': _FadeInImage_width$,
        'height': _FadeInImage_height$,
        'fit': _FadeInImage_fit$,
        'placeholderFit': _FadeInImage_placeholderFit$,
        'filterQuality': _FadeInImage_filterQuality$,
        'placeholderFilterQuality': _FadeInImage_placeholderFilterQuality$,
        'alignment': _FadeInImage_alignment$,
        'repeat': _FadeInImage_repeat$,
        'matchTextDirection': _FadeInImage_matchTextDirection$,
        'excludeFromSemantics': _FadeInImage_excludeFromSemantics$,
        'imageSemanticLabel': _FadeInImage_imageSemanticLabel$,
        'createState': _FadeInImage_createState$,
      },
      {},
    )
  },
);
ImageProvider<Object> _FadeInImage_placeholder$(FadeInImage target) {
  return target.placeholder;
}

Widget Function(BuildContext, Object, StackTrace?)?
    _FadeInImage_placeholderErrorBuilder$(FadeInImage target) {
  return target.placeholderErrorBuilder;
}

ImageProvider<Object> _FadeInImage_image$(FadeInImage target) {
  return target.image;
}

Widget Function(BuildContext, Object, StackTrace?)?
    _FadeInImage_imageErrorBuilder$(FadeInImage target) {
  return target.imageErrorBuilder;
}

Duration _FadeInImage_fadeOutDuration$(FadeInImage target) {
  return target.fadeOutDuration;
}

Curve _FadeInImage_fadeOutCurve$(FadeInImage target) {
  return target.fadeOutCurve;
}

Duration _FadeInImage_fadeInDuration$(FadeInImage target) {
  return target.fadeInDuration;
}

Curve _FadeInImage_fadeInCurve$(FadeInImage target) {
  return target.fadeInCurve;
}

double? _FadeInImage_width$(FadeInImage target) {
  return target.width;
}

double? _FadeInImage_height$(FadeInImage target) {
  return target.height;
}

BoxFit? _FadeInImage_fit$(FadeInImage target) {
  return target.fit;
}

BoxFit? _FadeInImage_placeholderFit$(FadeInImage target) {
  return target.placeholderFit;
}

FilterQuality _FadeInImage_filterQuality$(FadeInImage target) {
  return target.filterQuality;
}

FilterQuality? _FadeInImage_placeholderFilterQuality$(FadeInImage target) {
  return target.placeholderFilterQuality;
}

AlignmentGeometry _FadeInImage_alignment$(FadeInImage target) {
  return target.alignment;
}

ImageRepeat _FadeInImage_repeat$(FadeInImage target) {
  return target.repeat;
}

bool _FadeInImage_matchTextDirection$(FadeInImage target) {
  return target.matchTextDirection;
}

bool _FadeInImage_excludeFromSemantics$(FadeInImage target) {
  return target.excludeFromSemantics;
}

String? _FadeInImage_imageSemanticLabel$(FadeInImage target) {
  return target.imageSemanticLabel;
}

Function _FadeInImage_createState$(
  m.Scope scope,
  FadeInImage target,
) =>
    target.createState;
