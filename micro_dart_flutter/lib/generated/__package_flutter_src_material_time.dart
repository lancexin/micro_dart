// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/time.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/material_localizations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/time.dart',
  {
    'TimeOfDay.hoursPerDay': _TimeOfDay_hoursPerDay$,
    'TimeOfDay.hoursPerPeriod': _TimeOfDay_hoursPerPeriod$,
    'TimeOfDay.minutesPerHour': _TimeOfDay_minutesPerHour$,
    'DayPeriod.am': _DayPeriod_am$,
    'DayPeriod.pm': _DayPeriod_pm$,
    'DayPeriod.values': _DayPeriod_values$,
    'TimeOfDayFormat.HH_colon_mm': _TimeOfDayFormat_HH_colon_mm$,
    'TimeOfDayFormat.HH_dot_mm': _TimeOfDayFormat_HH_dot_mm$,
    'TimeOfDayFormat.frenchCanadian': _TimeOfDayFormat_frenchCanadian$,
    'TimeOfDayFormat.H_colon_mm': _TimeOfDayFormat_H_colon_mm$,
    'TimeOfDayFormat.h_colon_mm_space_a': _TimeOfDayFormat_h_colon_mm_space_a$,
    'TimeOfDayFormat.a_space_h_colon_mm': _TimeOfDayFormat_a_space_h_colon_mm$,
    'TimeOfDayFormat.values': _TimeOfDayFormat_values$,
    'HourFormat.HH': _HourFormat_HH$,
    'HourFormat.H': _HourFormat_H$,
    'HourFormat.h': _HourFormat_h$,
    'HourFormat.values': _HourFormat_values$,
    'hourFormat': _hourFormat$,
  },
  {},
  {
    'TimeOfDay': m.ClassMirror(
      'TimeOfDay',
      {
        '#as': TimeOfDay_as$,
        '#is': TimeOfDay_is$,
        'hour': _TimeOfDay_hour$,
        'minute': _TimeOfDay_minute$,
        'period': _TimeOfDay_period$,
        'hourOfPeriod': _TimeOfDay_hourOfPeriod$,
        'periodOffset': _TimeOfDay_periodOffset$,
        'hashCode': _TimeOfDay_hashCode$,
        'replacing': _TimeOfDay_replacing$,
        'format': _TimeOfDay_format$,
        '==': _TimeOfDay_eq$$,
        'toString': _TimeOfDay_toString$,
      },
      {},
    ),
    'RestorableTimeOfDay': m.ClassMirror(
      'RestorableTimeOfDay',
      {
        '#as': RestorableTimeOfDay_as$,
        '#is': RestorableTimeOfDay_is$,
        'createDefaultValue': _RestorableTimeOfDay_createDefaultValue$,
        'didUpdateValue': _RestorableTimeOfDay_didUpdateValue$,
        'fromPrimitives': _RestorableTimeOfDay_fromPrimitives$,
        'toPrimitives': _RestorableTimeOfDay_toPrimitives$,
      },
      {},
    ),
    'DayPeriod': m.ClassMirror(
      'DayPeriod',
      {},
      {},
    ),
    'TimeOfDayFormat': m.ClassMirror(
      'TimeOfDayFormat',
      {},
      {},
    ),
    'HourFormat': m.ClassMirror(
      'HourFormat',
      {},
      {},
    ),
  },
);
Function TimeOfDay_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as TimeOfDay;
Function TimeOfDay_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is TimeOfDay;
int _TimeOfDay_hoursPerDay$() {
  return TimeOfDay.hoursPerDay;
}

int _TimeOfDay_hoursPerPeriod$() {
  return TimeOfDay.hoursPerPeriod;
}

int _TimeOfDay_minutesPerHour$() {
  return TimeOfDay.minutesPerHour;
}

int _TimeOfDay_hour$(TimeOfDay target) {
  return target.hour;
}

int _TimeOfDay_minute$(TimeOfDay target) {
  return target.minute;
}

DayPeriod _TimeOfDay_period$(TimeOfDay target) {
  return target.period;
}

int _TimeOfDay_hourOfPeriod$(TimeOfDay target) {
  return target.hourOfPeriod;
}

int _TimeOfDay_periodOffset$(TimeOfDay target) {
  return target.periodOffset;
}

int _TimeOfDay_hashCode$(TimeOfDay target) {
  return target.hashCode;
}

Function _TimeOfDay_replacing$(
  m.Scope scope,
  TimeOfDay target,
) =>
    target.replacing;
Function _TimeOfDay_format$(
  m.Scope scope,
  TimeOfDay target,
) =>
    target.format;
Function _TimeOfDay_eq$$(
  m.Scope scope,
  TimeOfDay target,
) =>
    (Object other) => target == other;
Function _TimeOfDay_toString$(
  m.Scope scope,
  TimeOfDay target,
) =>
    target.toString;
Function RestorableTimeOfDay_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RestorableTimeOfDay;
Function RestorableTimeOfDay_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RestorableTimeOfDay;
Function _RestorableTimeOfDay_createDefaultValue$(
  m.Scope scope,
  RestorableTimeOfDay target,
) =>
    target.createDefaultValue;
Function _RestorableTimeOfDay_didUpdateValue$(
  m.Scope scope,
  RestorableTimeOfDay target,
) =>
    target.didUpdateValue;
Function _RestorableTimeOfDay_fromPrimitives$(
  m.Scope scope,
  RestorableTimeOfDay target,
) =>
    target.fromPrimitives;
Function _RestorableTimeOfDay_toPrimitives$(
  m.Scope scope,
  RestorableTimeOfDay target,
) =>
    target.toPrimitives;
DayPeriod _DayPeriod_am$() {
  return DayPeriod.am;
}

DayPeriod _DayPeriod_pm$() {
  return DayPeriod.pm;
}

List<DayPeriod> _DayPeriod_values$() {
  return DayPeriod.values;
}

TimeOfDayFormat _TimeOfDayFormat_HH_colon_mm$() {
  return TimeOfDayFormat.HH_colon_mm;
}

TimeOfDayFormat _TimeOfDayFormat_HH_dot_mm$() {
  return TimeOfDayFormat.HH_dot_mm;
}

TimeOfDayFormat _TimeOfDayFormat_frenchCanadian$() {
  return TimeOfDayFormat.frenchCanadian;
}

TimeOfDayFormat _TimeOfDayFormat_H_colon_mm$() {
  return TimeOfDayFormat.H_colon_mm;
}

TimeOfDayFormat _TimeOfDayFormat_h_colon_mm_space_a$() {
  return TimeOfDayFormat.h_colon_mm_space_a;
}

TimeOfDayFormat _TimeOfDayFormat_a_space_h_colon_mm$() {
  return TimeOfDayFormat.a_space_h_colon_mm;
}

List<TimeOfDayFormat> _TimeOfDayFormat_values$() {
  return TimeOfDayFormat.values;
}

HourFormat _HourFormat_HH$() {
  return HourFormat.HH;
}

HourFormat _HourFormat_H$() {
  return HourFormat.H;
}

HourFormat _HourFormat_h$() {
  return HourFormat.h;
}

List<HourFormat> _HourFormat_values$() {
  return HourFormat.values;
}

Function _hourFormat$(m.Scope scope) => hourFormat;
