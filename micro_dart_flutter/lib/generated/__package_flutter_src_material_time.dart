// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/time.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/material_localizations.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/time.dart',
  {
    'TimeOfDay.hoursPerDay': _TimeOfDay_hoursPerDay$,
    'TimeOfDay.hoursPerPeriod': _TimeOfDay_hoursPerPeriod$,
    'TimeOfDay.minutesPerHour': _TimeOfDay_minutesPerHour$,
    'TimeOfDay.': _TimeOfDay__$,
    'TimeOfDay.fromDateTime': _TimeOfDay_fromDateTime_$,
    'TimeOfDay.now': _TimeOfDay_now_$,
    'RestorableTimeOfDay.': _RestorableTimeOfDay__$,
    'DayPeriod.am': _DayPeriod_am$,
    'DayPeriod.pm': _DayPeriod_pm$,
    'DayPeriod.values': _DayPeriod_values$,
    'TimeOfDayFormat.HH_colon_mm': _TimeOfDayFormat_HH_colon_mm$,
    'TimeOfDayFormat.HH_dot_mm': _TimeOfDayFormat_HH_dot_mm$,
    'TimeOfDayFormat.frenchCanadian': _TimeOfDayFormat_frenchCanadian$,
    'TimeOfDayFormat.H_colon_mm': _TimeOfDayFormat_H_colon_mm$,
    'TimeOfDayFormat.h_colon_mm_space_a': _TimeOfDayFormat_h_colon_mm_space_a$,
    'TimeOfDayFormat.a_space_h_colon_mm': _TimeOfDayFormat_a_space_h_colon_mm$,
    'TimeOfDayFormat.values': _TimeOfDayFormat_values$,
    'HourFormat.HH': _HourFormat_HH$,
    'HourFormat.H': _HourFormat_H$,
    'HourFormat.h': _HourFormat_h$,
    'HourFormat.values': _HourFormat_values$,
    'hourFormat': _hourFormat$,
  },
  {},
  {
    'TimeOfDay': m.ClassMirror(
      'TimeOfDay',
      {
        '#as': TimeOfDay_as$,
        '#is': TimeOfDay_is$,
        'hour': _TimeOfDay_hour$,
        'minute': _TimeOfDay_minute$,
        'period': _TimeOfDay_period$,
        'hourOfPeriod': _TimeOfDay_hourOfPeriod$,
        'periodOffset': _TimeOfDay_periodOffset$,
        'hashCode': _TimeOfDay_hashCode$,
        'replacing': _TimeOfDay_replacing$,
        'format': _TimeOfDay_format$,
        '==': _TimeOfDay_eq$$,
        'toString': _TimeOfDay_toString$,
      },
      {},
    ),
    'RestorableTimeOfDay': m.ClassMirror(
      'RestorableTimeOfDay',
      {
        '#as': RestorableTimeOfDay_as$,
        '#is': RestorableTimeOfDay_is$,
        'createDefaultValue': _RestorableTimeOfDay_createDefaultValue$,
        'didUpdateValue': _RestorableTimeOfDay_didUpdateValue$,
        'fromPrimitives': _RestorableTimeOfDay_fromPrimitives$,
        'toPrimitives': _RestorableTimeOfDay_toPrimitives$,
      },
      {},
    ),
    'DayPeriod': m.ClassMirror(
      'DayPeriod',
      {},
      {},
    ),
    'TimeOfDayFormat': m.ClassMirror(
      'TimeOfDayFormat',
      {},
      {},
    ),
    'HourFormat': m.ClassMirror(
      'HourFormat',
      {},
      {},
    ),
  },
);
Function TimeOfDay_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as TimeOfDay;
Function TimeOfDay_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is TimeOfDay;
Function _TimeOfDay_hoursPerDay$(m.Scope scope$) => () => TimeOfDay.hoursPerDay;
Function _TimeOfDay_hoursPerPeriod$(m.Scope scope$) =>
    () => TimeOfDay.hoursPerPeriod;
Function _TimeOfDay_minutesPerHour$(m.Scope scope$) =>
    () => TimeOfDay.minutesPerHour;
Function _TimeOfDay_hour$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    () {
      return target$.hour;
    };
Function _TimeOfDay_minute$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    () {
      return target$.minute;
    };
Function _TimeOfDay_period$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    () {
      return target$.period;
    };
Function _TimeOfDay_hourOfPeriod$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    () {
      return target$.hourOfPeriod;
    };
Function _TimeOfDay_periodOffset$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    () {
      return target$.periodOffset;
    };
Function _TimeOfDay_hashCode$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    () {
      return target$.hashCode;
    };
Function _TimeOfDay__$(m.Scope scope$) => ({
      required int hour,
      required int minute,
    }) {
      return TimeOfDay(
        hour: hour,
        minute: minute,
      );
    };
Function _TimeOfDay_fromDateTime_$(m.Scope scope$) => TimeOfDay.fromDateTime;
Function _TimeOfDay_now_$(m.Scope scope$) => TimeOfDay.now;
Function _TimeOfDay_replacing$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    target$.replacing;
Function _TimeOfDay_format$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    target$.format;
Function _TimeOfDay_eq$$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    (Object other$) => target$ == other$;
Function _TimeOfDay_toString$(
  m.Scope scope$,
  TimeOfDay target$,
) =>
    target$.toString;
Function RestorableTimeOfDay_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RestorableTimeOfDay;
Function RestorableTimeOfDay_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RestorableTimeOfDay;
Function _RestorableTimeOfDay__$(m.Scope scope$) => (TimeOfDay defaultValue) {
      return RestorableTimeOfDay(defaultValue);
    };
Function _RestorableTimeOfDay_createDefaultValue$(
  m.Scope scope$,
  RestorableTimeOfDay target$,
) =>
    target$.createDefaultValue;
Function _RestorableTimeOfDay_didUpdateValue$(
  m.Scope scope$,
  RestorableTimeOfDay target$,
) =>
    target$.didUpdateValue;
Function _RestorableTimeOfDay_fromPrimitives$(
  m.Scope scope$,
  RestorableTimeOfDay target$,
) =>
    target$.fromPrimitives;
Function _RestorableTimeOfDay_toPrimitives$(
  m.Scope scope$,
  RestorableTimeOfDay target$,
) =>
    target$.toPrimitives;
Function _DayPeriod_am$(m.Scope scope$) => () => DayPeriod.am;
Function _DayPeriod_pm$(m.Scope scope$) => () => DayPeriod.pm;
Function _DayPeriod_values$(m.Scope scope$) => () => DayPeriod.values;
Function _TimeOfDayFormat_HH_colon_mm$(m.Scope scope$) =>
    () => TimeOfDayFormat.HH_colon_mm;
Function _TimeOfDayFormat_HH_dot_mm$(m.Scope scope$) =>
    () => TimeOfDayFormat.HH_dot_mm;
Function _TimeOfDayFormat_frenchCanadian$(m.Scope scope$) =>
    () => TimeOfDayFormat.frenchCanadian;
Function _TimeOfDayFormat_H_colon_mm$(m.Scope scope$) =>
    () => TimeOfDayFormat.H_colon_mm;
Function _TimeOfDayFormat_h_colon_mm_space_a$(m.Scope scope$) =>
    () => TimeOfDayFormat.h_colon_mm_space_a;
Function _TimeOfDayFormat_a_space_h_colon_mm$(m.Scope scope$) =>
    () => TimeOfDayFormat.a_space_h_colon_mm;
Function _TimeOfDayFormat_values$(m.Scope scope$) =>
    () => TimeOfDayFormat.values;
Function _HourFormat_HH$(m.Scope scope$) => () => HourFormat.HH;
Function _HourFormat_H$(m.Scope scope$) => () => HourFormat.H;
Function _HourFormat_h$(m.Scope scope$) => () => HourFormat.h;
Function _HourFormat_values$(m.Scope scope$) => () => HourFormat.values;
Function _hourFormat$(m.Scope scope$) => hourFormat;
