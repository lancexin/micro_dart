// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/haptic_feedback.dart';
import 'package:flutter/src/services/system_channels.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/haptic_feedback.dart',
  {
    'HapticFeedback.vibrate': _HapticFeedback_vibrate$,
    'HapticFeedback.lightImpact': _HapticFeedback_lightImpact$,
    'HapticFeedback.mediumImpact': _HapticFeedback_mediumImpact$,
    'HapticFeedback.heavyImpact': _HapticFeedback_heavyImpact$,
    'HapticFeedback.selectionClick': _HapticFeedback_selectionClick$,
  },
  {},
  {
    'HapticFeedback': m.ClassMirror(
      'HapticFeedback',
      {
        '#as': HapticFeedback_as$,
        '#is': HapticFeedback_is$,
      },
      {},
    )
  },
);
Function HapticFeedback_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as HapticFeedback;
Function HapticFeedback_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is HapticFeedback;
Function _HapticFeedback_vibrate$(m.Scope scope$) => HapticFeedback.vibrate;
Function _HapticFeedback_lightImpact$(m.Scope scope$) =>
    HapticFeedback.lightImpact;
Function _HapticFeedback_mediumImpact$(m.Scope scope$) =>
    HapticFeedback.mediumImpact;
Function _HapticFeedback_heavyImpact$(m.Scope scope$) =>
    HapticFeedback.heavyImpact;
Function _HapticFeedback_selectionClick$(m.Scope scope$) =>
    HapticFeedback.selectionClick;
