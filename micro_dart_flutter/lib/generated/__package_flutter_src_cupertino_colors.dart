// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/colors.dart';
import 'dart:ui' show Brightness, Color;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/media_query.dart';
import 'package:flutter/src/cupertino/interface_level.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/colors.dart',
  {
    'CupertinoColors.activeBlue': _CupertinoColors_activeBlue$,
    'CupertinoColors.activeGreen': _CupertinoColors_activeGreen$,
    'CupertinoColors.activeOrange': _CupertinoColors_activeOrange$,
    'CupertinoColors.white': _CupertinoColors_white$,
    'CupertinoColors.black': _CupertinoColors_black$,
    'CupertinoColors.lightBackgroundGray':
        _CupertinoColors_lightBackgroundGray$,
    'CupertinoColors.extraLightBackgroundGray':
        _CupertinoColors_extraLightBackgroundGray$,
    'CupertinoColors.darkBackgroundGray': _CupertinoColors_darkBackgroundGray$,
    'CupertinoColors.inactiveGray': _CupertinoColors_inactiveGray$,
    'CupertinoColors.destructiveRed': _CupertinoColors_destructiveRed$,
    'CupertinoColors.systemBlue': _CupertinoColors_systemBlue$,
    'CupertinoColors.systemGreen': _CupertinoColors_systemGreen$,
    'CupertinoColors.systemMint': _CupertinoColors_systemMint$,
    'CupertinoColors.systemIndigo': _CupertinoColors_systemIndigo$,
    'CupertinoColors.systemOrange': _CupertinoColors_systemOrange$,
    'CupertinoColors.systemPink': _CupertinoColors_systemPink$,
    'CupertinoColors.systemBrown': _CupertinoColors_systemBrown$,
    'CupertinoColors.systemPurple': _CupertinoColors_systemPurple$,
    'CupertinoColors.systemRed': _CupertinoColors_systemRed$,
    'CupertinoColors.systemTeal': _CupertinoColors_systemTeal$,
    'CupertinoColors.systemCyan': _CupertinoColors_systemCyan$,
    'CupertinoColors.systemYellow': _CupertinoColors_systemYellow$,
    'CupertinoColors.systemGrey': _CupertinoColors_systemGrey$,
    'CupertinoColors.systemGrey2': _CupertinoColors_systemGrey2$,
    'CupertinoColors.systemGrey3': _CupertinoColors_systemGrey3$,
    'CupertinoColors.systemGrey4': _CupertinoColors_systemGrey4$,
    'CupertinoColors.systemGrey5': _CupertinoColors_systemGrey5$,
    'CupertinoColors.systemGrey6': _CupertinoColors_systemGrey6$,
    'CupertinoColors.label': _CupertinoColors_label$,
    'CupertinoColors.secondaryLabel': _CupertinoColors_secondaryLabel$,
    'CupertinoColors.tertiaryLabel': _CupertinoColors_tertiaryLabel$,
    'CupertinoColors.quaternaryLabel': _CupertinoColors_quaternaryLabel$,
    'CupertinoColors.systemFill': _CupertinoColors_systemFill$,
    'CupertinoColors.secondarySystemFill':
        _CupertinoColors_secondarySystemFill$,
    'CupertinoColors.tertiarySystemFill': _CupertinoColors_tertiarySystemFill$,
    'CupertinoColors.quaternarySystemFill':
        _CupertinoColors_quaternarySystemFill$,
    'CupertinoColors.placeholderText': _CupertinoColors_placeholderText$,
    'CupertinoColors.systemBackground': _CupertinoColors_systemBackground$,
    'CupertinoColors.secondarySystemBackground':
        _CupertinoColors_secondarySystemBackground$,
    'CupertinoColors.tertiarySystemBackground':
        _CupertinoColors_tertiarySystemBackground$,
    'CupertinoColors.systemGroupedBackground':
        _CupertinoColors_systemGroupedBackground$,
    'CupertinoColors.secondarySystemGroupedBackground':
        _CupertinoColors_secondarySystemGroupedBackground$,
    'CupertinoColors.tertiarySystemGroupedBackground':
        _CupertinoColors_tertiarySystemGroupedBackground$,
    'CupertinoColors.separator': _CupertinoColors_separator$,
    'CupertinoColors.opaqueSeparator': _CupertinoColors_opaqueSeparator$,
    'CupertinoColors.link': _CupertinoColors_link$,
    'CupertinoDynamicColor.': _CupertinoDynamicColor__$,
    'CupertinoDynamicColor.withBrightnessAndContrast':
        _CupertinoDynamicColor_withBrightnessAndContrast_$,
    'CupertinoDynamicColor.withBrightness':
        _CupertinoDynamicColor_withBrightness_$,
    'CupertinoDynamicColor.resolve': _CupertinoDynamicColor_resolve$,
    'CupertinoDynamicColor.maybeResolve': _CupertinoDynamicColor_maybeResolve$,
    'createCupertinoColorProperty': _createCupertinoColorProperty$,
  },
  {},
  {
    'CupertinoColors': m.ClassMirror(
      'CupertinoColors',
      {
        '#as': CupertinoColors_as$,
        '#is': CupertinoColors_is$,
      },
      {},
    ),
    'CupertinoDynamicColor': m.ClassMirror(
      'CupertinoDynamicColor',
      {
        '#as': CupertinoDynamicColor_as$,
        '#is': CupertinoDynamicColor_is$,
        'color': _CupertinoDynamicColor_color$,
        'darkColor': _CupertinoDynamicColor_darkColor$,
        'highContrastColor': _CupertinoDynamicColor_highContrastColor$,
        'darkHighContrastColor': _CupertinoDynamicColor_darkHighContrastColor$,
        'elevatedColor': _CupertinoDynamicColor_elevatedColor$,
        'darkElevatedColor': _CupertinoDynamicColor_darkElevatedColor$,
        'highContrastElevatedColor':
            _CupertinoDynamicColor_highContrastElevatedColor$,
        'darkHighContrastElevatedColor':
            _CupertinoDynamicColor_darkHighContrastElevatedColor$,
        'value': _CupertinoDynamicColor_value$,
        'hashCode': _CupertinoDynamicColor_hashCode$,
        'resolveFrom': _CupertinoDynamicColor_resolveFrom$,
        '==': _CupertinoDynamicColor_eq$$,
        'toString': _CupertinoDynamicColor_toString$,
        'debugFillProperties': _CupertinoDynamicColor_debugFillProperties$,
      },
      {},
    ),
  },
);
Function CupertinoColors_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoColors;
Function CupertinoColors_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoColors;
CupertinoDynamicColor _CupertinoColors_activeBlue$() {
  return CupertinoColors.activeBlue;
}

CupertinoDynamicColor _CupertinoColors_activeGreen$() {
  return CupertinoColors.activeGreen;
}

CupertinoDynamicColor _CupertinoColors_activeOrange$() {
  return CupertinoColors.activeOrange;
}

Color _CupertinoColors_white$() {
  return CupertinoColors.white;
}

Color _CupertinoColors_black$() {
  return CupertinoColors.black;
}

Color _CupertinoColors_lightBackgroundGray$() {
  return CupertinoColors.lightBackgroundGray;
}

Color _CupertinoColors_extraLightBackgroundGray$() {
  return CupertinoColors.extraLightBackgroundGray;
}

Color _CupertinoColors_darkBackgroundGray$() {
  return CupertinoColors.darkBackgroundGray;
}

CupertinoDynamicColor _CupertinoColors_inactiveGray$() {
  return CupertinoColors.inactiveGray;
}

Color _CupertinoColors_destructiveRed$() {
  return CupertinoColors.destructiveRed;
}

CupertinoDynamicColor _CupertinoColors_systemBlue$() {
  return CupertinoColors.systemBlue;
}

CupertinoDynamicColor _CupertinoColors_systemGreen$() {
  return CupertinoColors.systemGreen;
}

CupertinoDynamicColor _CupertinoColors_systemMint$() {
  return CupertinoColors.systemMint;
}

CupertinoDynamicColor _CupertinoColors_systemIndigo$() {
  return CupertinoColors.systemIndigo;
}

CupertinoDynamicColor _CupertinoColors_systemOrange$() {
  return CupertinoColors.systemOrange;
}

CupertinoDynamicColor _CupertinoColors_systemPink$() {
  return CupertinoColors.systemPink;
}

CupertinoDynamicColor _CupertinoColors_systemBrown$() {
  return CupertinoColors.systemBrown;
}

CupertinoDynamicColor _CupertinoColors_systemPurple$() {
  return CupertinoColors.systemPurple;
}

CupertinoDynamicColor _CupertinoColors_systemRed$() {
  return CupertinoColors.systemRed;
}

CupertinoDynamicColor _CupertinoColors_systemTeal$() {
  return CupertinoColors.systemTeal;
}

CupertinoDynamicColor _CupertinoColors_systemCyan$() {
  return CupertinoColors.systemCyan;
}

CupertinoDynamicColor _CupertinoColors_systemYellow$() {
  return CupertinoColors.systemYellow;
}

CupertinoDynamicColor _CupertinoColors_systemGrey$() {
  return CupertinoColors.systemGrey;
}

CupertinoDynamicColor _CupertinoColors_systemGrey2$() {
  return CupertinoColors.systemGrey2;
}

CupertinoDynamicColor _CupertinoColors_systemGrey3$() {
  return CupertinoColors.systemGrey3;
}

CupertinoDynamicColor _CupertinoColors_systemGrey4$() {
  return CupertinoColors.systemGrey4;
}

CupertinoDynamicColor _CupertinoColors_systemGrey5$() {
  return CupertinoColors.systemGrey5;
}

CupertinoDynamicColor _CupertinoColors_systemGrey6$() {
  return CupertinoColors.systemGrey6;
}

CupertinoDynamicColor _CupertinoColors_label$() {
  return CupertinoColors.label;
}

CupertinoDynamicColor _CupertinoColors_secondaryLabel$() {
  return CupertinoColors.secondaryLabel;
}

CupertinoDynamicColor _CupertinoColors_tertiaryLabel$() {
  return CupertinoColors.tertiaryLabel;
}

CupertinoDynamicColor _CupertinoColors_quaternaryLabel$() {
  return CupertinoColors.quaternaryLabel;
}

CupertinoDynamicColor _CupertinoColors_systemFill$() {
  return CupertinoColors.systemFill;
}

CupertinoDynamicColor _CupertinoColors_secondarySystemFill$() {
  return CupertinoColors.secondarySystemFill;
}

CupertinoDynamicColor _CupertinoColors_tertiarySystemFill$() {
  return CupertinoColors.tertiarySystemFill;
}

CupertinoDynamicColor _CupertinoColors_quaternarySystemFill$() {
  return CupertinoColors.quaternarySystemFill;
}

CupertinoDynamicColor _CupertinoColors_placeholderText$() {
  return CupertinoColors.placeholderText;
}

CupertinoDynamicColor _CupertinoColors_systemBackground$() {
  return CupertinoColors.systemBackground;
}

CupertinoDynamicColor _CupertinoColors_secondarySystemBackground$() {
  return CupertinoColors.secondarySystemBackground;
}

CupertinoDynamicColor _CupertinoColors_tertiarySystemBackground$() {
  return CupertinoColors.tertiarySystemBackground;
}

CupertinoDynamicColor _CupertinoColors_systemGroupedBackground$() {
  return CupertinoColors.systemGroupedBackground;
}

CupertinoDynamicColor _CupertinoColors_secondarySystemGroupedBackground$() {
  return CupertinoColors.secondarySystemGroupedBackground;
}

CupertinoDynamicColor _CupertinoColors_tertiarySystemGroupedBackground$() {
  return CupertinoColors.tertiarySystemGroupedBackground;
}

CupertinoDynamicColor _CupertinoColors_separator$() {
  return CupertinoColors.separator;
}

CupertinoDynamicColor _CupertinoColors_opaqueSeparator$() {
  return CupertinoColors.opaqueSeparator;
}

CupertinoDynamicColor _CupertinoColors_link$() {
  return CupertinoColors.link;
}

Function CupertinoDynamicColor_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoDynamicColor;
Function CupertinoDynamicColor_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoDynamicColor;
Function _CupertinoDynamicColor_color$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.color;
    };
Function _CupertinoDynamicColor_darkColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkColor;
    };
Function _CupertinoDynamicColor_highContrastColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.highContrastColor;
    };
Function _CupertinoDynamicColor_darkHighContrastColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkHighContrastColor;
    };
Function _CupertinoDynamicColor_elevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.elevatedColor;
    };
Function _CupertinoDynamicColor_darkElevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkElevatedColor;
    };
Function _CupertinoDynamicColor_highContrastElevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.highContrastElevatedColor;
    };
Function _CupertinoDynamicColor_darkHighContrastElevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkHighContrastElevatedColor;
    };
Function _CupertinoDynamicColor_value$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.value;
    };
Function _CupertinoDynamicColor_hashCode$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.hashCode;
    };
Function _CupertinoDynamicColor__$(m.Scope scope$) => ({
      String? debugLabel,
      required Color color,
      required Color darkColor,
      required Color highContrastColor,
      required Color darkHighContrastColor,
      required Color elevatedColor,
      required Color darkElevatedColor,
      required Color highContrastElevatedColor,
      required Color darkHighContrastElevatedColor,
    }) {
      return CupertinoDynamicColor(
        color: color,
        darkColor: darkColor,
        darkElevatedColor: darkElevatedColor,
        darkHighContrastColor: darkHighContrastColor,
        darkHighContrastElevatedColor: darkHighContrastElevatedColor,
        debugLabel: debugLabel,
        elevatedColor: elevatedColor,
        highContrastColor: highContrastColor,
        highContrastElevatedColor: highContrastElevatedColor,
      );
    };
Function _CupertinoDynamicColor_withBrightnessAndContrast_$(m.Scope scope$) =>
    CupertinoDynamicColor.withBrightnessAndContrast;
Function _CupertinoDynamicColor_withBrightness_$(m.Scope scope$) =>
    CupertinoDynamicColor.withBrightness;
Function _CupertinoDynamicColor_resolve$(m.Scope scope$) =>
    CupertinoDynamicColor.resolve;
Function _CupertinoDynamicColor_maybeResolve$(m.Scope scope$) =>
    CupertinoDynamicColor.maybeResolve;
Function _CupertinoDynamicColor_resolveFrom$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    target$.resolveFrom;
Function _CupertinoDynamicColor_eq$$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    (Object other$) => target$ == other$;
Function _CupertinoDynamicColor_toString$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    target$.toString;
Function _CupertinoDynamicColor_debugFillProperties$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    target$.debugFillProperties;
Function _createCupertinoColorProperty$(m.Scope scope$) =>
    createCupertinoColorProperty;
