// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/colors.dart';
import 'dart:ui' show Brightness, Color;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/media_query.dart';
import 'package:flutter/src/cupertino/interface_level.dart';
import 'package:flutter/src/cupertino/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/colors.dart',
  {
    'CupertinoColors.activeBlue': _CupertinoColors_activeBlue$,
    'CupertinoColors.activeGreen': _CupertinoColors_activeGreen$,
    'CupertinoColors.activeOrange': _CupertinoColors_activeOrange$,
    'CupertinoColors.white': _CupertinoColors_white$,
    'CupertinoColors.black': _CupertinoColors_black$,
    'CupertinoColors.lightBackgroundGray':
        _CupertinoColors_lightBackgroundGray$,
    'CupertinoColors.extraLightBackgroundGray':
        _CupertinoColors_extraLightBackgroundGray$,
    'CupertinoColors.darkBackgroundGray': _CupertinoColors_darkBackgroundGray$,
    'CupertinoColors.inactiveGray': _CupertinoColors_inactiveGray$,
    'CupertinoColors.destructiveRed': _CupertinoColors_destructiveRed$,
    'CupertinoColors.systemBlue': _CupertinoColors_systemBlue$,
    'CupertinoColors.systemGreen': _CupertinoColors_systemGreen$,
    'CupertinoColors.systemMint': _CupertinoColors_systemMint$,
    'CupertinoColors.systemIndigo': _CupertinoColors_systemIndigo$,
    'CupertinoColors.systemOrange': _CupertinoColors_systemOrange$,
    'CupertinoColors.systemPink': _CupertinoColors_systemPink$,
    'CupertinoColors.systemBrown': _CupertinoColors_systemBrown$,
    'CupertinoColors.systemPurple': _CupertinoColors_systemPurple$,
    'CupertinoColors.systemRed': _CupertinoColors_systemRed$,
    'CupertinoColors.systemTeal': _CupertinoColors_systemTeal$,
    'CupertinoColors.systemCyan': _CupertinoColors_systemCyan$,
    'CupertinoColors.systemYellow': _CupertinoColors_systemYellow$,
    'CupertinoColors.systemGrey': _CupertinoColors_systemGrey$,
    'CupertinoColors.systemGrey2': _CupertinoColors_systemGrey2$,
    'CupertinoColors.systemGrey3': _CupertinoColors_systemGrey3$,
    'CupertinoColors.systemGrey4': _CupertinoColors_systemGrey4$,
    'CupertinoColors.systemGrey5': _CupertinoColors_systemGrey5$,
    'CupertinoColors.systemGrey6': _CupertinoColors_systemGrey6$,
    'CupertinoColors.label': _CupertinoColors_label$,
    'CupertinoColors.secondaryLabel': _CupertinoColors_secondaryLabel$,
    'CupertinoColors.tertiaryLabel': _CupertinoColors_tertiaryLabel$,
    'CupertinoColors.quaternaryLabel': _CupertinoColors_quaternaryLabel$,
    'CupertinoColors.systemFill': _CupertinoColors_systemFill$,
    'CupertinoColors.secondarySystemFill':
        _CupertinoColors_secondarySystemFill$,
    'CupertinoColors.tertiarySystemFill': _CupertinoColors_tertiarySystemFill$,
    'CupertinoColors.quaternarySystemFill':
        _CupertinoColors_quaternarySystemFill$,
    'CupertinoColors.placeholderText': _CupertinoColors_placeholderText$,
    'CupertinoColors.systemBackground': _CupertinoColors_systemBackground$,
    'CupertinoColors.secondarySystemBackground':
        _CupertinoColors_secondarySystemBackground$,
    'CupertinoColors.tertiarySystemBackground':
        _CupertinoColors_tertiarySystemBackground$,
    'CupertinoColors.systemGroupedBackground':
        _CupertinoColors_systemGroupedBackground$,
    'CupertinoColors.secondarySystemGroupedBackground':
        _CupertinoColors_secondarySystemGroupedBackground$,
    'CupertinoColors.tertiarySystemGroupedBackground':
        _CupertinoColors_tertiarySystemGroupedBackground$,
    'CupertinoColors.separator': _CupertinoColors_separator$,
    'CupertinoColors.opaqueSeparator': _CupertinoColors_opaqueSeparator$,
    'CupertinoColors.link': _CupertinoColors_link$,
    'CupertinoDynamicColor.': _CupertinoDynamicColor__$,
    'CupertinoDynamicColor.withBrightnessAndContrast':
        _CupertinoDynamicColor_withBrightnessAndContrast_$,
    'CupertinoDynamicColor.withBrightness':
        _CupertinoDynamicColor_withBrightness_$,
    'CupertinoDynamicColor.resolve': _CupertinoDynamicColor_resolve$,
    'CupertinoDynamicColor.maybeResolve': _CupertinoDynamicColor_maybeResolve$,
    'createCupertinoColorProperty': _createCupertinoColorProperty$,
  },
  {},
  {
    'CupertinoColors': m.ClassMirror(
      'CupertinoColors',
      {
        '#as': CupertinoColors_as$,
        '#is': CupertinoColors_is$,
      },
      {},
    ),
    'CupertinoDynamicColor': m.ClassMirror(
      'CupertinoDynamicColor',
      {
        '#as': CupertinoDynamicColor_as$,
        '#is': CupertinoDynamicColor_is$,
        'color': _CupertinoDynamicColor_color$,
        'darkColor': _CupertinoDynamicColor_darkColor$,
        'highContrastColor': _CupertinoDynamicColor_highContrastColor$,
        'darkHighContrastColor': _CupertinoDynamicColor_darkHighContrastColor$,
        'elevatedColor': _CupertinoDynamicColor_elevatedColor$,
        'darkElevatedColor': _CupertinoDynamicColor_darkElevatedColor$,
        'highContrastElevatedColor':
            _CupertinoDynamicColor_highContrastElevatedColor$,
        'darkHighContrastElevatedColor':
            _CupertinoDynamicColor_darkHighContrastElevatedColor$,
        'value': _CupertinoDynamicColor_value$,
        'hashCode': _CupertinoDynamicColor_hashCode$,
        'resolveFrom': _CupertinoDynamicColor_resolveFrom$,
        '==': _CupertinoDynamicColor_eq$$,
        'toString': _CupertinoDynamicColor_toString$,
        'debugFillProperties': _CupertinoDynamicColor_debugFillProperties$,
      },
      {},
    ),
  },
);
Function CupertinoColors_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoColors;
Function CupertinoColors_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoColors;
Function _CupertinoColors_activeBlue$(m.Scope scope$) =>
    () => CupertinoColors.activeBlue;
Function _CupertinoColors_activeGreen$(m.Scope scope$) =>
    () => CupertinoColors.activeGreen;
Function _CupertinoColors_activeOrange$(m.Scope scope$) =>
    () => CupertinoColors.activeOrange;
Function _CupertinoColors_white$(m.Scope scope$) => () => CupertinoColors.white;
Function _CupertinoColors_black$(m.Scope scope$) => () => CupertinoColors.black;
Function _CupertinoColors_lightBackgroundGray$(m.Scope scope$) =>
    () => CupertinoColors.lightBackgroundGray;
Function _CupertinoColors_extraLightBackgroundGray$(m.Scope scope$) =>
    () => CupertinoColors.extraLightBackgroundGray;
Function _CupertinoColors_darkBackgroundGray$(m.Scope scope$) =>
    () => CupertinoColors.darkBackgroundGray;
Function _CupertinoColors_inactiveGray$(m.Scope scope$) =>
    () => CupertinoColors.inactiveGray;
Function _CupertinoColors_destructiveRed$(m.Scope scope$) =>
    () => CupertinoColors.destructiveRed;
Function _CupertinoColors_systemBlue$(m.Scope scope$) =>
    () => CupertinoColors.systemBlue;
Function _CupertinoColors_systemGreen$(m.Scope scope$) =>
    () => CupertinoColors.systemGreen;
Function _CupertinoColors_systemMint$(m.Scope scope$) =>
    () => CupertinoColors.systemMint;
Function _CupertinoColors_systemIndigo$(m.Scope scope$) =>
    () => CupertinoColors.systemIndigo;
Function _CupertinoColors_systemOrange$(m.Scope scope$) =>
    () => CupertinoColors.systemOrange;
Function _CupertinoColors_systemPink$(m.Scope scope$) =>
    () => CupertinoColors.systemPink;
Function _CupertinoColors_systemBrown$(m.Scope scope$) =>
    () => CupertinoColors.systemBrown;
Function _CupertinoColors_systemPurple$(m.Scope scope$) =>
    () => CupertinoColors.systemPurple;
Function _CupertinoColors_systemRed$(m.Scope scope$) =>
    () => CupertinoColors.systemRed;
Function _CupertinoColors_systemTeal$(m.Scope scope$) =>
    () => CupertinoColors.systemTeal;
Function _CupertinoColors_systemCyan$(m.Scope scope$) =>
    () => CupertinoColors.systemCyan;
Function _CupertinoColors_systemYellow$(m.Scope scope$) =>
    () => CupertinoColors.systemYellow;
Function _CupertinoColors_systemGrey$(m.Scope scope$) =>
    () => CupertinoColors.systemGrey;
Function _CupertinoColors_systemGrey2$(m.Scope scope$) =>
    () => CupertinoColors.systemGrey2;
Function _CupertinoColors_systemGrey3$(m.Scope scope$) =>
    () => CupertinoColors.systemGrey3;
Function _CupertinoColors_systemGrey4$(m.Scope scope$) =>
    () => CupertinoColors.systemGrey4;
Function _CupertinoColors_systemGrey5$(m.Scope scope$) =>
    () => CupertinoColors.systemGrey5;
Function _CupertinoColors_systemGrey6$(m.Scope scope$) =>
    () => CupertinoColors.systemGrey6;
Function _CupertinoColors_label$(m.Scope scope$) => () => CupertinoColors.label;
Function _CupertinoColors_secondaryLabel$(m.Scope scope$) =>
    () => CupertinoColors.secondaryLabel;
Function _CupertinoColors_tertiaryLabel$(m.Scope scope$) =>
    () => CupertinoColors.tertiaryLabel;
Function _CupertinoColors_quaternaryLabel$(m.Scope scope$) =>
    () => CupertinoColors.quaternaryLabel;
Function _CupertinoColors_systemFill$(m.Scope scope$) =>
    () => CupertinoColors.systemFill;
Function _CupertinoColors_secondarySystemFill$(m.Scope scope$) =>
    () => CupertinoColors.secondarySystemFill;
Function _CupertinoColors_tertiarySystemFill$(m.Scope scope$) =>
    () => CupertinoColors.tertiarySystemFill;
Function _CupertinoColors_quaternarySystemFill$(m.Scope scope$) =>
    () => CupertinoColors.quaternarySystemFill;
Function _CupertinoColors_placeholderText$(m.Scope scope$) =>
    () => CupertinoColors.placeholderText;
Function _CupertinoColors_systemBackground$(m.Scope scope$) =>
    () => CupertinoColors.systemBackground;
Function _CupertinoColors_secondarySystemBackground$(m.Scope scope$) =>
    () => CupertinoColors.secondarySystemBackground;
Function _CupertinoColors_tertiarySystemBackground$(m.Scope scope$) =>
    () => CupertinoColors.tertiarySystemBackground;
Function _CupertinoColors_systemGroupedBackground$(m.Scope scope$) =>
    () => CupertinoColors.systemGroupedBackground;
Function _CupertinoColors_secondarySystemGroupedBackground$(m.Scope scope$) =>
    () => CupertinoColors.secondarySystemGroupedBackground;
Function _CupertinoColors_tertiarySystemGroupedBackground$(m.Scope scope$) =>
    () => CupertinoColors.tertiarySystemGroupedBackground;
Function _CupertinoColors_separator$(m.Scope scope$) =>
    () => CupertinoColors.separator;
Function _CupertinoColors_opaqueSeparator$(m.Scope scope$) =>
    () => CupertinoColors.opaqueSeparator;
Function _CupertinoColors_link$(m.Scope scope$) => () => CupertinoColors.link;
Function CupertinoDynamicColor_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as CupertinoDynamicColor;
Function CupertinoDynamicColor_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is CupertinoDynamicColor;
Function _CupertinoDynamicColor_color$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.color;
    };
Function _CupertinoDynamicColor_darkColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkColor;
    };
Function _CupertinoDynamicColor_highContrastColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.highContrastColor;
    };
Function _CupertinoDynamicColor_darkHighContrastColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkHighContrastColor;
    };
Function _CupertinoDynamicColor_elevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.elevatedColor;
    };
Function _CupertinoDynamicColor_darkElevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkElevatedColor;
    };
Function _CupertinoDynamicColor_highContrastElevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.highContrastElevatedColor;
    };
Function _CupertinoDynamicColor_darkHighContrastElevatedColor$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.darkHighContrastElevatedColor;
    };
Function _CupertinoDynamicColor_value$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.value;
    };
Function _CupertinoDynamicColor_hashCode$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    () {
      return target$.hashCode;
    };
Function _CupertinoDynamicColor__$(m.Scope scope$) => ({
      String? debugLabel,
      required Color color,
      required Color darkColor,
      required Color highContrastColor,
      required Color darkHighContrastColor,
      required Color elevatedColor,
      required Color darkElevatedColor,
      required Color highContrastElevatedColor,
      required Color darkHighContrastElevatedColor,
    }) {
      return CupertinoDynamicColor(
        color: color,
        darkColor: darkColor,
        darkElevatedColor: darkElevatedColor,
        darkHighContrastColor: darkHighContrastColor,
        darkHighContrastElevatedColor: darkHighContrastElevatedColor,
        debugLabel: debugLabel,
        elevatedColor: elevatedColor,
        highContrastColor: highContrastColor,
        highContrastElevatedColor: highContrastElevatedColor,
      );
    };
Function _CupertinoDynamicColor_withBrightnessAndContrast_$(m.Scope scope$) =>
    CupertinoDynamicColor.withBrightnessAndContrast;
Function _CupertinoDynamicColor_withBrightness_$(m.Scope scope$) =>
    CupertinoDynamicColor.withBrightness;
Function _CupertinoDynamicColor_resolve$(m.Scope scope$) =>
    CupertinoDynamicColor.resolve;
Function _CupertinoDynamicColor_maybeResolve$(m.Scope scope$) =>
    CupertinoDynamicColor.maybeResolve;
Function _CupertinoDynamicColor_resolveFrom$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    target$.resolveFrom;
Function _CupertinoDynamicColor_eq$$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    (Object other$) => target$ == other$;
Function _CupertinoDynamicColor_toString$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    target$.toString;
Function _CupertinoDynamicColor_debugFillProperties$(
  m.Scope scope$,
  CupertinoDynamicColor target$,
) =>
    target$.debugFillProperties;
Function _createCupertinoColorProperty$(m.Scope scope$) =>
    createCupertinoColorProperty;
