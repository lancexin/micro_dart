// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/animated_switcher.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/ticker_provider.dart';
import 'package:flutter/src/widgets/transitions.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/animated_switcher.dart',
  {
    'AnimatedSwitcher.': _AnimatedSwitcher__$,
    'AnimatedSwitcher.defaultTransitionBuilder':
        _AnimatedSwitcher_defaultTransitionBuilder$,
    'AnimatedSwitcher.defaultLayoutBuilder':
        _AnimatedSwitcher_defaultLayoutBuilder$,
  },
  {},
  {
    'AnimatedSwitcher': m.ClassMirror(
      'AnimatedSwitcher',
      {
        '#as': AnimatedSwitcher_as$,
        '#is': AnimatedSwitcher_is$,
        'child': _AnimatedSwitcher_child$,
        'duration': _AnimatedSwitcher_duration$,
        'reverseDuration': _AnimatedSwitcher_reverseDuration$,
        'switchInCurve': _AnimatedSwitcher_switchInCurve$,
        'switchOutCurve': _AnimatedSwitcher_switchOutCurve$,
        'transitionBuilder': _AnimatedSwitcher_transitionBuilder$,
        'layoutBuilder': _AnimatedSwitcher_layoutBuilder$,
        'createState': _AnimatedSwitcher_createState$,
        'debugFillProperties': _AnimatedSwitcher_debugFillProperties$,
      },
      {},
    )
  },
);
Function AnimatedSwitcher_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as AnimatedSwitcher;
Function AnimatedSwitcher_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is AnimatedSwitcher;
Function _AnimatedSwitcher_child$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.child;
    };
Function _AnimatedSwitcher_duration$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.duration;
    };
Function _AnimatedSwitcher_reverseDuration$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.reverseDuration;
    };
Function _AnimatedSwitcher_switchInCurve$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.switchInCurve;
    };
Function _AnimatedSwitcher_switchOutCurve$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.switchOutCurve;
    };
Function _AnimatedSwitcher_transitionBuilder$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.transitionBuilder;
    };
Function _AnimatedSwitcher_layoutBuilder$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    () {
      return target$.layoutBuilder;
    };
Function _AnimatedSwitcher__$(m.Scope scope$) => ({
      Key? key,
      Widget? child,
      required Duration duration,
      Duration? reverseDuration,
      Curve? switchInCurve,
      Curve? switchOutCurve,
      m.FunctionPointer? transitionBuilder,
      m.FunctionPointer? layoutBuilder,
    }) {
      Widget layoutBuilderProxy(
        Widget? layoutBuilder_currentChild$,
        List layoutBuilder_previousChildren$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            layoutBuilder!,
            [
              layoutBuilder_currentChild$,
              layoutBuilder_previousChildren$,
            ],
            {},
          );
      Widget transitionBuilderProxy(
        Widget transitionBuilder_child$,
        Animation<double> transitionBuilder_animation$,
      ) =>
          scope$.engine.callFunctionPointer(
            scope$,
            transitionBuilder!,
            [
              transitionBuilder_child$,
              transitionBuilder_animation$,
            ],
            {},
          );
      return AnimatedSwitcher(
        child: child,
        duration: duration,
        key: key,
        layoutBuilder: layoutBuilder == null
            ? AnimatedSwitcher.defaultLayoutBuilder
            : layoutBuilderProxy,
        reverseDuration: reverseDuration,
        switchInCurve: switchInCurve ?? Curves.linear,
        switchOutCurve: switchOutCurve ?? Curves.linear,
        transitionBuilder: transitionBuilder == null
            ? AnimatedSwitcher.defaultTransitionBuilder
            : transitionBuilderProxy,
      );
    };
Function _AnimatedSwitcher_createState$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    target$.createState;
Function _AnimatedSwitcher_defaultTransitionBuilder$(m.Scope scope$) =>
    AnimatedSwitcher.defaultTransitionBuilder;
Function _AnimatedSwitcher_defaultLayoutBuilder$(m.Scope scope$) =>
    AnimatedSwitcher.defaultLayoutBuilder;
Function _AnimatedSwitcher_debugFillProperties$(
  m.Scope scope$,
  AnimatedSwitcher target$,
) =>
    target$.debugFillProperties;
