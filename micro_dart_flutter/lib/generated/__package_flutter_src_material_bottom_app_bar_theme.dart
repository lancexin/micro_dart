// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_app_bar_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_app_bar_theme.dart',
  {
    'BottomAppBarTheme.of': _BottomAppBarTheme_of$,
    'BottomAppBarTheme.lerp': _BottomAppBarTheme_lerp$,
  },
  {},
  {
    'BottomAppBarTheme': m.ClassMirror(
      'BottomAppBarTheme',
      {
        'color': _BottomAppBarTheme_color$,
        'elevation': _BottomAppBarTheme_elevation$,
        'shape': _BottomAppBarTheme_shape$,
        'height': _BottomAppBarTheme_height$,
        'surfaceTintColor': _BottomAppBarTheme_surfaceTintColor$,
        'shadowColor': _BottomAppBarTheme_shadowColor$,
        'padding': _BottomAppBarTheme_padding$,
        'hashCode': _BottomAppBarTheme_hashCode$,
        'copyWith': _BottomAppBarTheme_copyWith$,
        'debugFillProperties': _BottomAppBarTheme_debugFillProperties$,
      },
      {},
    )
  },
);
Color? _BottomAppBarTheme_color$(BottomAppBarTheme target) {
  return target.color;
}

double? _BottomAppBarTheme_elevation$(BottomAppBarTheme target) {
  return target.elevation;
}

NotchedShape? _BottomAppBarTheme_shape$(BottomAppBarTheme target) {
  return target.shape;
}

double? _BottomAppBarTheme_height$(BottomAppBarTheme target) {
  return target.height;
}

Color? _BottomAppBarTheme_surfaceTintColor$(BottomAppBarTheme target) {
  return target.surfaceTintColor;
}

Color? _BottomAppBarTheme_shadowColor$(BottomAppBarTheme target) {
  return target.shadowColor;
}

EdgeInsetsGeometry? _BottomAppBarTheme_padding$(BottomAppBarTheme target) {
  return target.padding;
}

int _BottomAppBarTheme_hashCode$(BottomAppBarTheme target) {
  return target.hashCode;
}

Function _BottomAppBarTheme_copyWith$(
  m.Scope scope,
  BottomAppBarTheme target,
) =>
    target.copyWith;
Function _BottomAppBarTheme_of$(m.Scope scope) => BottomAppBarTheme.of;
Function _BottomAppBarTheme_lerp$(m.Scope scope) => BottomAppBarTheme.lerp;
Function _BottomAppBarTheme_debugFillProperties$(
  m.Scope scope,
  BottomAppBarTheme target,
) =>
    target.debugFillProperties;
