// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/bottom_app_bar_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/bottom_app_bar_theme.dart',
  {
    'BottomAppBarTheme.': _BottomAppBarTheme__$,
    'BottomAppBarTheme.of': _BottomAppBarTheme_of$,
    'BottomAppBarTheme.lerp': _BottomAppBarTheme_lerp$,
  },
  {},
  {
    'BottomAppBarTheme': m.ClassMirror(
      'BottomAppBarTheme',
      {
        '#as': BottomAppBarTheme_as$,
        '#is': BottomAppBarTheme_is$,
        'color': _BottomAppBarTheme_color$,
        'elevation': _BottomAppBarTheme_elevation$,
        'shape': _BottomAppBarTheme_shape$,
        'height': _BottomAppBarTheme_height$,
        'surfaceTintColor': _BottomAppBarTheme_surfaceTintColor$,
        'shadowColor': _BottomAppBarTheme_shadowColor$,
        'padding': _BottomAppBarTheme_padding$,
        'hashCode': _BottomAppBarTheme_hashCode$,
        'copyWith': _BottomAppBarTheme_copyWith$,
        '==': _BottomAppBarTheme_eq$$,
        'debugFillProperties': _BottomAppBarTheme_debugFillProperties$,
      },
      {},
    )
  },
);
Function BottomAppBarTheme_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as BottomAppBarTheme;
Function BottomAppBarTheme_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is BottomAppBarTheme;
Function _BottomAppBarTheme_color$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.color;
    };
Function _BottomAppBarTheme_elevation$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.elevation;
    };
Function _BottomAppBarTheme_shape$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.shape;
    };
Function _BottomAppBarTheme_height$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.height;
    };
Function _BottomAppBarTheme_surfaceTintColor$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.surfaceTintColor;
    };
Function _BottomAppBarTheme_shadowColor$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.shadowColor;
    };
Function _BottomAppBarTheme_padding$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.padding;
    };
Function _BottomAppBarTheme_hashCode$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    () {
      return target$.hashCode;
    };
Function _BottomAppBarTheme__$(m.Scope scope$) => ({
      Color? color,
      double? elevation,
      NotchedShape? shape,
      double? height,
      Color? surfaceTintColor,
      Color? shadowColor,
      EdgeInsetsGeometry? padding,
    }) {
      return BottomAppBarTheme(
        color: color,
        elevation: elevation,
        height: height,
        padding: padding,
        shadowColor: shadowColor,
        shape: shape,
        surfaceTintColor: surfaceTintColor,
      );
    };
Function _BottomAppBarTheme_copyWith$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    target$.copyWith;
Function _BottomAppBarTheme_of$(m.Scope scope$) => BottomAppBarTheme.of;
Function _BottomAppBarTheme_lerp$(m.Scope scope$) => BottomAppBarTheme.lerp;
Function _BottomAppBarTheme_eq$$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    (Object other$) => target$ == other$;
Function _BottomAppBarTheme_debugFillProperties$(
  m.Scope scope$,
  BottomAppBarTheme target$,
) =>
    target$.debugFillProperties;
