// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/sliver_fill.dart';
import 'dart:math';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/rendering/sliver.dart';
import 'package:flutter/src/rendering/sliver_fixed_extent_list.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/sliver_fill.dart',
  {},
  {},
  {
    'RenderSliverFillViewport': m.ClassMirror(
      'RenderSliverFillViewport',
      {
        '#as': RenderSliverFillViewport_as$,
        '#is': RenderSliverFillViewport_is$,
        'itemExtent': _RenderSliverFillViewport_itemExtent$,
        'viewportFraction': _RenderSliverFillViewport_viewportFraction$,
      },
      {'viewportFraction': _RenderSliverFillViewport_viewportFraction_set$},
    ),
    'RenderSliverFillRemainingWithScrollable': m.ClassMirror(
      'RenderSliverFillRemainingWithScrollable',
      {
        '#as': RenderSliverFillRemainingWithScrollable_as$,
        '#is': RenderSliverFillRemainingWithScrollable_is$,
        'performLayout':
            _RenderSliverFillRemainingWithScrollable_performLayout$,
      },
      {},
    ),
    'RenderSliverFillRemaining': m.ClassMirror(
      'RenderSliverFillRemaining',
      {
        '#as': RenderSliverFillRemaining_as$,
        '#is': RenderSliverFillRemaining_is$,
        'performLayout': _RenderSliverFillRemaining_performLayout$,
      },
      {},
    ),
    'RenderSliverFillRemainingAndOverscroll': m.ClassMirror(
      'RenderSliverFillRemainingAndOverscroll',
      {
        '#as': RenderSliverFillRemainingAndOverscroll_as$,
        '#is': RenderSliverFillRemainingAndOverscroll_is$,
        'performLayout': _RenderSliverFillRemainingAndOverscroll_performLayout$,
      },
      {},
    ),
  },
);
Function RenderSliverFillViewport_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderSliverFillViewport;
Function RenderSliverFillViewport_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderSliverFillViewport;
double _RenderSliverFillViewport_itemExtent$(RenderSliverFillViewport target) {
  return target.itemExtent;
}

double _RenderSliverFillViewport_viewportFraction$(
    RenderSliverFillViewport target) {
  return target.viewportFraction;
}

void _RenderSliverFillViewport_viewportFraction_set$(
  RenderSliverFillViewport target,
  double other,
) {
  target.viewportFraction = other;
}

Function RenderSliverFillRemainingWithScrollable_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderSliverFillRemainingWithScrollable;
Function RenderSliverFillRemainingWithScrollable_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderSliverFillRemainingWithScrollable;
Function _RenderSliverFillRemainingWithScrollable_performLayout$(
  m.Scope scope,
  RenderSliverFillRemainingWithScrollable target,
) =>
    target.performLayout;
Function RenderSliverFillRemaining_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderSliverFillRemaining;
Function RenderSliverFillRemaining_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderSliverFillRemaining;
Function _RenderSliverFillRemaining_performLayout$(
  m.Scope scope,
  RenderSliverFillRemaining target,
) =>
    target.performLayout;
Function RenderSliverFillRemainingAndOverscroll_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as RenderSliverFillRemainingAndOverscroll;
Function RenderSliverFillRemainingAndOverscroll_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is RenderSliverFillRemainingAndOverscroll;
Function _RenderSliverFillRemainingAndOverscroll_performLayout$(
  m.Scope scope,
  RenderSliverFillRemainingAndOverscroll target,
) =>
    target.performLayout;
