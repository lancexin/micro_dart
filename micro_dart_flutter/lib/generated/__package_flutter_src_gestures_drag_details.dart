// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/gestures/drag_details.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/gestures/velocity_tracker.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/gestures/drag_details.dart',
  {
    'DragDownDetails.': _DragDownDetails__$,
    'DragStartDetails.': _DragStartDetails__$,
    'DragUpdateDetails.': _DragUpdateDetails__$,
    'DragEndDetails.': _DragEndDetails__$,
  },
  {},
  {
    'DragDownDetails': m.ClassMirror(
      'DragDownDetails',
      {
        '#as': DragDownDetails_as$,
        '#is': DragDownDetails_is$,
        'globalPosition': _DragDownDetails_globalPosition$,
        'localPosition': _DragDownDetails_localPosition$,
        'toString': _DragDownDetails_toString$,
      },
      {},
    ),
    'DragStartDetails': m.ClassMirror(
      'DragStartDetails',
      {
        '#as': DragStartDetails_as$,
        '#is': DragStartDetails_is$,
        'sourceTimeStamp': _DragStartDetails_sourceTimeStamp$,
        'globalPosition': _DragStartDetails_globalPosition$,
        'localPosition': _DragStartDetails_localPosition$,
        'kind': _DragStartDetails_kind$,
        'toString': _DragStartDetails_toString$,
      },
      {},
    ),
    'DragUpdateDetails': m.ClassMirror(
      'DragUpdateDetails',
      {
        '#as': DragUpdateDetails_as$,
        '#is': DragUpdateDetails_is$,
        'sourceTimeStamp': _DragUpdateDetails_sourceTimeStamp$,
        'delta': _DragUpdateDetails_delta$,
        'primaryDelta': _DragUpdateDetails_primaryDelta$,
        'globalPosition': _DragUpdateDetails_globalPosition$,
        'localPosition': _DragUpdateDetails_localPosition$,
        'toString': _DragUpdateDetails_toString$,
      },
      {},
    ),
    'DragEndDetails': m.ClassMirror(
      'DragEndDetails',
      {
        '#as': DragEndDetails_as$,
        '#is': DragEndDetails_is$,
        'velocity': _DragEndDetails_velocity$,
        'primaryVelocity': _DragEndDetails_primaryVelocity$,
        'toString': _DragEndDetails_toString$,
      },
      {},
    ),
  },
);
Function DragDownDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DragDownDetails;
Function DragDownDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DragDownDetails;
Function _DragDownDetails_globalPosition$(
  m.Scope scope$,
  DragDownDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _DragDownDetails_localPosition$(
  m.Scope scope$,
  DragDownDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _DragDownDetails__$(m.Scope scope$) => ({
      Offset? globalPosition,
      Offset? localPosition,
    }) {
      return DragDownDetails(
        globalPosition: globalPosition ?? Offset.zero,
        localPosition: localPosition,
      );
    };
Function _DragDownDetails_toString$(
  m.Scope scope$,
  DragDownDetails target$,
) =>
    target$.toString;
Function DragStartDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DragStartDetails;
Function DragStartDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DragStartDetails;
Function _DragStartDetails_sourceTimeStamp$(
  m.Scope scope$,
  DragStartDetails target$,
) =>
    () {
      return target$.sourceTimeStamp;
    };
Function _DragStartDetails_globalPosition$(
  m.Scope scope$,
  DragStartDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _DragStartDetails_localPosition$(
  m.Scope scope$,
  DragStartDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _DragStartDetails_kind$(
  m.Scope scope$,
  DragStartDetails target$,
) =>
    () {
      return target$.kind;
    };
Function _DragStartDetails__$(m.Scope scope$) => ({
      Duration? sourceTimeStamp,
      Offset? globalPosition,
      Offset? localPosition,
      PointerDeviceKind? kind,
    }) {
      return DragStartDetails(
        globalPosition: globalPosition ?? Offset.zero,
        kind: kind,
        localPosition: localPosition,
        sourceTimeStamp: sourceTimeStamp,
      );
    };
Function _DragStartDetails_toString$(
  m.Scope scope$,
  DragStartDetails target$,
) =>
    target$.toString;
Function DragUpdateDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DragUpdateDetails;
Function DragUpdateDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DragUpdateDetails;
Function _DragUpdateDetails_sourceTimeStamp$(
  m.Scope scope$,
  DragUpdateDetails target$,
) =>
    () {
      return target$.sourceTimeStamp;
    };
Function _DragUpdateDetails_delta$(
  m.Scope scope$,
  DragUpdateDetails target$,
) =>
    () {
      return target$.delta;
    };
Function _DragUpdateDetails_primaryDelta$(
  m.Scope scope$,
  DragUpdateDetails target$,
) =>
    () {
      return target$.primaryDelta;
    };
Function _DragUpdateDetails_globalPosition$(
  m.Scope scope$,
  DragUpdateDetails target$,
) =>
    () {
      return target$.globalPosition;
    };
Function _DragUpdateDetails_localPosition$(
  m.Scope scope$,
  DragUpdateDetails target$,
) =>
    () {
      return target$.localPosition;
    };
Function _DragUpdateDetails__$(m.Scope scope$) => ({
      Duration? sourceTimeStamp,
      Offset? delta,
      double? primaryDelta,
      required Offset globalPosition,
      Offset? localPosition,
    }) {
      return DragUpdateDetails(
        delta: delta ?? Offset.zero,
        globalPosition: globalPosition,
        localPosition: localPosition,
        primaryDelta: primaryDelta,
        sourceTimeStamp: sourceTimeStamp,
      );
    };
Function _DragUpdateDetails_toString$(
  m.Scope scope$,
  DragUpdateDetails target$,
) =>
    target$.toString;
Function DragEndDetails_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DragEndDetails;
Function DragEndDetails_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DragEndDetails;
Function _DragEndDetails_velocity$(
  m.Scope scope$,
  DragEndDetails target$,
) =>
    () {
      return target$.velocity;
    };
Function _DragEndDetails_primaryVelocity$(
  m.Scope scope$,
  DragEndDetails target$,
) =>
    () {
      return target$.primaryVelocity;
    };
Function _DragEndDetails__$(m.Scope scope$) => ({
      Velocity? velocity,
      double? primaryVelocity,
    }) {
      return DragEndDetails(
        primaryVelocity: primaryVelocity,
        velocity: velocity ?? Velocity.zero,
      );
    };
Function _DragEndDetails_toString$(
  m.Scope scope$,
  DragEndDetails target$,
) =>
    target$.toString;
