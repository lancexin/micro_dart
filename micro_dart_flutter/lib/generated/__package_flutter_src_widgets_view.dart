// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/view.dart';
import 'dart:ui' show FlutterView;
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/lookup_boundary.dart';
import 'package:flutter/src/widgets/media_query.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/view.dart',
  {
    'View.': _View__$,
    'View.maybeOf': _View_maybeOf$,
    'View.of': _View_of$,
  },
  {},
  {
    'View': m.ClassMirror(
      'View',
      {
        '#as': View_as$,
        '#is': View_is$,
        'view': _View_view$,
        'child': _View_child$,
        'build': _View_build$,
      },
      {},
    )
  },
);
Function View_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as View;
Function View_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is View;
Function _View_view$(
  m.Scope scope$,
  View target$,
) =>
    () {
      return target$.view;
    };
Function _View_child$(
  m.Scope scope$,
  View target$,
) =>
    () {
      return target$.child;
    };
Function _View__$(m.Scope scope$) => ({
      required FlutterView view,
      required Widget child,
    }) {
      return View(
        child: child,
        view: view,
      );
    };
Function _View_build$(
  m.Scope scope$,
  View target$,
) =>
    target$.build;
Function _View_maybeOf$(m.Scope scope$) => View.maybeOf;
Function _View_of$(m.Scope scope$) => View.of;
