// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/raw_keyboard_listener.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/widgets/focus_scope.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/raw_keyboard_listener.dart',
  {'RawKeyboardListener.': _RawKeyboardListener__$},
  {},
  {
    'RawKeyboardListener': m.ClassMirror(
      'RawKeyboardListener',
      {
        '#as': RawKeyboardListener_as$,
        '#is': RawKeyboardListener_is$,
        'focusNode': _RawKeyboardListener_focusNode$,
        'autofocus': _RawKeyboardListener_autofocus$,
        'includeSemantics': _RawKeyboardListener_includeSemantics$,
        'onKey': _RawKeyboardListener_onKey$,
        'child': _RawKeyboardListener_child$,
        'createState': _RawKeyboardListener_createState$,
        'debugFillProperties': _RawKeyboardListener_debugFillProperties$,
      },
      {},
    )
  },
);
Function RawKeyboardListener_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RawKeyboardListener;
Function RawKeyboardListener_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RawKeyboardListener;
Function _RawKeyboardListener_focusNode$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    () {
      return target$.focusNode;
    };
Function _RawKeyboardListener_autofocus$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    () {
      return target$.autofocus;
    };
Function _RawKeyboardListener_includeSemantics$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    () {
      return target$.includeSemantics;
    };
Function _RawKeyboardListener_onKey$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    () {
      return target$.onKey;
    };
Function _RawKeyboardListener_child$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    () {
      return target$.child;
    };
Function _RawKeyboardListener__$(m.Scope scope$) => ({
      Key? key,
      required FocusNode focusNode,
      bool? autofocus,
      bool? includeSemantics,
      m.FunctionPointer? onKey,
      required Widget child,
    }) {
      void onKeyProxy(RawKeyEvent onKey_value$) =>
          scope$.engine.callFunctionPointer(
            scope$,
            onKey!,
            [onKey_value$],
            {},
          );
      return RawKeyboardListener(
        autofocus: autofocus ?? false,
        child: child,
        focusNode: focusNode,
        includeSemantics: includeSemantics ?? true,
        key: key,
        onKey: onKey == null ? null : onKeyProxy,
      );
    };
Function _RawKeyboardListener_createState$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    target$.createState;
Function _RawKeyboardListener_debugFillProperties$(
  m.Scope scope$,
  RawKeyboardListener target$,
) =>
    target$.debugFillProperties;
