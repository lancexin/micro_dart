// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/checkbox_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/theme.dart';
import 'package:flutter/src/material/theme_data.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/checkbox_theme.dart',
  {
    'CheckboxThemeData.lerp': _CheckboxThemeData_lerp$,
    'CheckboxTheme.of': _CheckboxTheme_of$,
  },
  {},
  {
    'CheckboxThemeData': m.ClassMirror(
      'CheckboxThemeData',
      {
        'mouseCursor': _CheckboxThemeData_mouseCursor$,
        'fillColor': _CheckboxThemeData_fillColor$,
        'checkColor': _CheckboxThemeData_checkColor$,
        'overlayColor': _CheckboxThemeData_overlayColor$,
        'splashRadius': _CheckboxThemeData_splashRadius$,
        'materialTapTargetSize': _CheckboxThemeData_materialTapTargetSize$,
        'visualDensity': _CheckboxThemeData_visualDensity$,
        'shape': _CheckboxThemeData_shape$,
        'side': _CheckboxThemeData_side$,
        'hashCode': _CheckboxThemeData_hashCode$,
        'copyWith': _CheckboxThemeData_copyWith$,
        'debugFillProperties': _CheckboxThemeData_debugFillProperties$,
      },
      {},
    ),
    'CheckboxTheme': m.ClassMirror(
      'CheckboxTheme',
      {
        'data': _CheckboxTheme_data$,
        'updateShouldNotify': _CheckboxTheme_updateShouldNotify$,
      },
      {},
    ),
  },
);
MaterialStateProperty<MouseCursor?>? _CheckboxThemeData_mouseCursor$(
    CheckboxThemeData target) {
  return target.mouseCursor;
}

MaterialStateProperty<Color?>? _CheckboxThemeData_fillColor$(
    CheckboxThemeData target) {
  return target.fillColor;
}

MaterialStateProperty<Color?>? _CheckboxThemeData_checkColor$(
    CheckboxThemeData target) {
  return target.checkColor;
}

MaterialStateProperty<Color?>? _CheckboxThemeData_overlayColor$(
    CheckboxThemeData target) {
  return target.overlayColor;
}

double? _CheckboxThemeData_splashRadius$(CheckboxThemeData target) {
  return target.splashRadius;
}

MaterialTapTargetSize? _CheckboxThemeData_materialTapTargetSize$(
    CheckboxThemeData target) {
  return target.materialTapTargetSize;
}

VisualDensity? _CheckboxThemeData_visualDensity$(CheckboxThemeData target) {
  return target.visualDensity;
}

OutlinedBorder? _CheckboxThemeData_shape$(CheckboxThemeData target) {
  return target.shape;
}

BorderSide? _CheckboxThemeData_side$(CheckboxThemeData target) {
  return target.side;
}

int _CheckboxThemeData_hashCode$(CheckboxThemeData target) {
  return target.hashCode;
}

Function _CheckboxThemeData_copyWith$(
  m.Scope scope,
  CheckboxThemeData target,
) =>
    target.copyWith;
Function _CheckboxThemeData_lerp$(m.Scope scope) => CheckboxThemeData.lerp;
Function _CheckboxThemeData_debugFillProperties$(
  m.Scope scope,
  CheckboxThemeData target,
) =>
    target.debugFillProperties;
CheckboxThemeData _CheckboxTheme_data$(CheckboxTheme target) {
  return target.data;
}

Function _CheckboxTheme_of$(m.Scope scope) => CheckboxTheme.of;
Function _CheckboxTheme_updateShouldNotify$(
  m.Scope scope,
  CheckboxTheme target,
) =>
    target.updateShouldNotify;
