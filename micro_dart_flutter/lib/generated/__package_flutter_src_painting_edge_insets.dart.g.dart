import 'package:flutter/src/painting/edge_insets.dart';
import 'dart:ui' show ViewPadding,lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
Map<String,Function> getLibrary(m.MicroDartEngine engine) {
return {
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@#as': (m.Scope scope, target)=>()=>target as EdgeInsetsGeometry,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@#is': (m.Scope scope, target)=>()=>target is EdgeInsetsGeometry,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@infinity': (m.Scope scope)=>EdgeInsetsGeometry.infinity,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@isNonNegative': (m.Scope scope, EdgeInsetsGeometry target)=>target.isNonNegative,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@horizontal': (m.Scope scope, EdgeInsetsGeometry target)=>target.horizontal,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@vertical': (m.Scope scope, EdgeInsetsGeometry target)=>target.vertical,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@collapsedSize': (m.Scope scope, EdgeInsetsGeometry target)=>target.collapsedSize,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@flipped': (m.Scope scope, EdgeInsetsGeometry target)=>target.flipped,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@hashCode': (m.Scope scope, EdgeInsetsGeometry target)=>target.hashCode,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@along': (m.Scope scope, EdgeInsetsGeometry target)=>target.along,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@inflateSize': (m.Scope scope, EdgeInsetsGeometry target)=>target.inflateSize,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@deflateSize': (m.Scope scope, EdgeInsetsGeometry target)=>target.deflateSize,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@subtract': (m.Scope scope, EdgeInsetsGeometry target)=>target.subtract,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@add': (m.Scope scope, EdgeInsetsGeometry target)=>target.add,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@clamp': (m.Scope scope, EdgeInsetsGeometry target)=>target.clamp,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@unary-': (m.Scope scope, EdgeInsetsGeometry target)=>()=> - target ,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@*': (m.Scope scope, EdgeInsetsGeometry target)=>(other)=> target * other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@/': (m.Scope scope, EdgeInsetsGeometry target)=>(other)=> target / other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@~/': (m.Scope scope, EdgeInsetsGeometry target)=>(other)=> target ~/ other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@%': (m.Scope scope, EdgeInsetsGeometry target)=>(other)=> target % other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@lerp': (m.Scope scope)=>EdgeInsetsGeometry.lerp,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@resolve': (m.Scope scope, EdgeInsetsGeometry target)=>target.resolve,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@toString': (m.Scope scope, EdgeInsetsGeometry target)=>target.toString,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsGeometry@==': (m.Scope scope, EdgeInsetsGeometry target)=>(other)=> target == other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@#as': (m.Scope scope, target)=>()=>target as EdgeInsets,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@#is': (m.Scope scope, target)=>()=>target is EdgeInsets,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@zero': (m.Scope scope)=>EdgeInsets.zero,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@left': (m.Scope scope, EdgeInsets target)=>target.left,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@top': (m.Scope scope, EdgeInsets target)=>target.top,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@right': (m.Scope scope, EdgeInsets target)=>target.right,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@bottom': (m.Scope scope, EdgeInsets target)=>target.bottom,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@topLeft': (m.Scope scope, EdgeInsets target)=>target.topLeft,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@topRight': (m.Scope scope, EdgeInsets target)=>target.topRight,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@bottomLeft': (m.Scope scope, EdgeInsets target)=>target.bottomLeft,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@bottomRight': (m.Scope scope, EdgeInsets target)=>target.bottomRight,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@flipped': (m.Scope scope, EdgeInsets target)=>target.flipped,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@fromLTRB': (m.Scope scope)=>EdgeInsets.fromLTRB,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@all': (m.Scope scope)=>EdgeInsets.all,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@only': (m.Scope scope)=>EdgeInsets.only,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@symmetric': (m.Scope scope)=>EdgeInsets.symmetric,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@fromViewPadding': (m.Scope scope)=>EdgeInsets.fromViewPadding,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@inflateRect': (m.Scope scope, EdgeInsets target)=>target.inflateRect,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@deflateRect': (m.Scope scope, EdgeInsets target)=>target.deflateRect,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@subtract': (m.Scope scope, EdgeInsets target)=>target.subtract,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@add': (m.Scope scope, EdgeInsets target)=>target.add,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@clamp': (m.Scope scope, EdgeInsets target)=>target.clamp,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@-': (m.Scope scope, EdgeInsets target)=>(other)=> target - other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@+': (m.Scope scope, EdgeInsets target)=>(other)=> target + other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@unary-': (m.Scope scope, EdgeInsets target)=>()=> - target ,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@*': (m.Scope scope, EdgeInsets target)=>(other)=> target * other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@/': (m.Scope scope, EdgeInsets target)=>(other)=> target / other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@~/': (m.Scope scope, EdgeInsets target)=>(other)=> target ~/ other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@%': (m.Scope scope, EdgeInsets target)=>(other)=> target % other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@lerp': (m.Scope scope)=>EdgeInsets.lerp,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@resolve': (m.Scope scope, EdgeInsets target)=>target.resolve,
'package:flutter/src/painting/edge_insets.dart@EdgeInsets@copyWith': (m.Scope scope, EdgeInsets target)=>target.copyWith,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@#as': (m.Scope scope, target)=>()=>target as EdgeInsetsDirectional,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@#is': (m.Scope scope, target)=>()=>target is EdgeInsetsDirectional,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@zero': (m.Scope scope)=>EdgeInsetsDirectional.zero,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@start': (m.Scope scope, EdgeInsetsDirectional target)=>target.start,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@top': (m.Scope scope, EdgeInsetsDirectional target)=>target.top,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@end': (m.Scope scope, EdgeInsetsDirectional target)=>target.end,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@bottom': (m.Scope scope, EdgeInsetsDirectional target)=>target.bottom,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@isNonNegative': (m.Scope scope, EdgeInsetsDirectional target)=>target.isNonNegative,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@flipped': (m.Scope scope, EdgeInsetsDirectional target)=>target.flipped,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@fromSTEB': (m.Scope scope)=>EdgeInsetsDirectional.fromSTEB,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@only': (m.Scope scope)=>EdgeInsetsDirectional.only,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@symmetric': (m.Scope scope)=>EdgeInsetsDirectional.symmetric,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@all': (m.Scope scope)=>EdgeInsetsDirectional.all,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@subtract': (m.Scope scope, EdgeInsetsDirectional target)=>target.subtract,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@add': (m.Scope scope, EdgeInsetsDirectional target)=>target.add,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@-': (m.Scope scope, EdgeInsetsDirectional target)=>(other)=> target - other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@+': (m.Scope scope, EdgeInsetsDirectional target)=>(other)=> target + other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@unary-': (m.Scope scope, EdgeInsetsDirectional target)=>()=> - target ,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@*': (m.Scope scope, EdgeInsetsDirectional target)=>(other)=> target * other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@/': (m.Scope scope, EdgeInsetsDirectional target)=>(other)=> target / other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@~/': (m.Scope scope, EdgeInsetsDirectional target)=>(other)=> target ~/ other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@%': (m.Scope scope, EdgeInsetsDirectional target)=>(other)=> target % other,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@lerp': (m.Scope scope)=>EdgeInsetsDirectional.lerp,
'package:flutter/src/painting/edge_insets.dart@EdgeInsetsDirectional@resolve': (m.Scope scope, EdgeInsetsDirectional target)=>target.resolve,

};
}