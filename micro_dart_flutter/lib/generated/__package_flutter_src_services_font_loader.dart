// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/services/font_loader.dart';
import 'dart:ui';
import 'package:flutter/foundation.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/services/font_loader.dart',
  {'FontLoader.': _FontLoader__$},
  {},
  {
    'FontLoader': m.ClassMirror(
      'FontLoader',
      {
        '#as': FontLoader_as$,
        '#is': FontLoader_is$,
        'family': _FontLoader_family$,
        'addFont': _FontLoader_addFont$,
        'load': _FontLoader_load$,
        'loadFont': _FontLoader_loadFont$,
      },
      {},
    )
  },
);
Function FontLoader_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as FontLoader;
Function FontLoader_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is FontLoader;
Function _FontLoader_family$(
  m.Scope scope$,
  FontLoader target$,
) =>
    () {
      return target$.family;
    };
Function _FontLoader__$(m.Scope scope$) => (String family) {
      return FontLoader(family);
    };
Function _FontLoader_addFont$(
  m.Scope scope$,
  FontLoader target$,
) =>
    target$.addFont;
Function _FontLoader_load$(
  m.Scope scope$,
  FontLoader target$,
) =>
    target$.load;
Function _FontLoader_loadFont$(
  m.Scope scope$,
  FontLoader target$,
) =>
    target$.loadFont;
