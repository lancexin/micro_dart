// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/rendering/list_body.dart';
import 'dart:math';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/object.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/rendering/list_body.dart',
  {
    'ListBodyParentData.': _ListBodyParentData__$,
    'RenderListBody.': _RenderListBody__$,
  },
  {},
  {
    'ListBodyParentData': m.ClassMirror(
      'ListBodyParentData',
      {
        '#as': ListBodyParentData_as$,
        '#is': ListBodyParentData_is$,
      },
      {},
    ),
    'RenderListBody': m.ClassMirror(
      'RenderListBody',
      {
        '#as': RenderListBody_as$,
        '#is': RenderListBody_is$,
        'axisDirection': _RenderListBody_axisDirection$,
        'mainAxis': _RenderListBody_mainAxis$,
        'setupParentData': _RenderListBody_setupParentData$,
        'computeDryLayout': _RenderListBody_computeDryLayout$,
        'performLayout': _RenderListBody_performLayout$,
        'debugFillProperties': _RenderListBody_debugFillProperties$,
        'computeMinIntrinsicWidth': _RenderListBody_computeMinIntrinsicWidth$,
        'computeMaxIntrinsicWidth': _RenderListBody_computeMaxIntrinsicWidth$,
        'computeMinIntrinsicHeight': _RenderListBody_computeMinIntrinsicHeight$,
        'computeMaxIntrinsicHeight': _RenderListBody_computeMaxIntrinsicHeight$,
        'computeDistanceToActualBaseline':
            _RenderListBody_computeDistanceToActualBaseline$,
        'paint': _RenderListBody_paint$,
        'hitTestChildren': _RenderListBody_hitTestChildren$,
      },
      {'axisDirection': _RenderListBody_axisDirection_set$},
    ),
  },
);
Function ListBodyParentData_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as ListBodyParentData;
Function ListBodyParentData_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is ListBodyParentData;
Function _ListBodyParentData__$(m.Scope scope$) => () {
      return ListBodyParentData();
    };
Function RenderListBody_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as RenderListBody;
Function RenderListBody_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is RenderListBody;
Function _RenderListBody_axisDirection$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    () {
      return target$.axisDirection;
    };
void _RenderListBody_axisDirection_set$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    (dynamic other$) {
      target$.axisDirection = other$;
    };
Function _RenderListBody_mainAxis$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    () {
      return target$.mainAxis;
    };
Function _RenderListBody__$(m.Scope scope$) => ({
      List? children,
      AxisDirection? axisDirection,
    }) {
      return RenderListBody(
        axisDirection: axisDirection ?? AxisDirection.down,
        children: children == null ? null : List.from(children),
      );
    };
Function _RenderListBody_setupParentData$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.setupParentData;
Function _RenderListBody_computeDryLayout$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.computeDryLayout;
Function _RenderListBody_performLayout$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.performLayout;
Function _RenderListBody_debugFillProperties$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.debugFillProperties;
Function _RenderListBody_computeMinIntrinsicWidth$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.computeMinIntrinsicWidth;
Function _RenderListBody_computeMaxIntrinsicWidth$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.computeMaxIntrinsicWidth;
Function _RenderListBody_computeMinIntrinsicHeight$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.computeMinIntrinsicHeight;
Function _RenderListBody_computeMaxIntrinsicHeight$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.computeMaxIntrinsicHeight;
Function _RenderListBody_computeDistanceToActualBaseline$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.computeDistanceToActualBaseline;
Function _RenderListBody_paint$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.paint;
Function _RenderListBody_hitTestChildren$(
  m.Scope scope$,
  RenderListBody target$,
) =>
    target$.hitTestChildren;
