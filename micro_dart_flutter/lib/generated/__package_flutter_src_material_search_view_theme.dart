// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/search_view_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/search_view_theme.dart',
  {
    'SearchViewThemeData.lerp': _SearchViewThemeData_lerp$,
    'SearchViewTheme.of': _SearchViewTheme_of$,
  },
  {},
  {
    'SearchViewThemeData': m.ClassMirror(
      'SearchViewThemeData',
      {
        'backgroundColor': _SearchViewThemeData_backgroundColor$,
        'elevation': _SearchViewThemeData_elevation$,
        'surfaceTintColor': _SearchViewThemeData_surfaceTintColor$,
        'side': _SearchViewThemeData_side$,
        'shape': _SearchViewThemeData_shape$,
        'headerTextStyle': _SearchViewThemeData_headerTextStyle$,
        'headerHintStyle': _SearchViewThemeData_headerHintStyle$,
        'constraints': _SearchViewThemeData_constraints$,
        'dividerColor': _SearchViewThemeData_dividerColor$,
        'hashCode': _SearchViewThemeData_hashCode$,
        'copyWith': _SearchViewThemeData_copyWith$,
        'debugFillProperties': _SearchViewThemeData_debugFillProperties$,
      },
      {},
    ),
    'SearchViewTheme': m.ClassMirror(
      'SearchViewTheme',
      {
        'data': _SearchViewTheme_data$,
        'updateShouldNotify': _SearchViewTheme_updateShouldNotify$,
      },
      {},
    ),
  },
);
Color? _SearchViewThemeData_backgroundColor$(SearchViewThemeData target) {
  return target.backgroundColor;
}

double? _SearchViewThemeData_elevation$(SearchViewThemeData target) {
  return target.elevation;
}

Color? _SearchViewThemeData_surfaceTintColor$(SearchViewThemeData target) {
  return target.surfaceTintColor;
}

BorderSide? _SearchViewThemeData_side$(SearchViewThemeData target) {
  return target.side;
}

OutlinedBorder? _SearchViewThemeData_shape$(SearchViewThemeData target) {
  return target.shape;
}

TextStyle? _SearchViewThemeData_headerTextStyle$(SearchViewThemeData target) {
  return target.headerTextStyle;
}

TextStyle? _SearchViewThemeData_headerHintStyle$(SearchViewThemeData target) {
  return target.headerHintStyle;
}

BoxConstraints? _SearchViewThemeData_constraints$(SearchViewThemeData target) {
  return target.constraints;
}

Color? _SearchViewThemeData_dividerColor$(SearchViewThemeData target) {
  return target.dividerColor;
}

int _SearchViewThemeData_hashCode$(SearchViewThemeData target) {
  return target.hashCode;
}

Function _SearchViewThemeData_copyWith$(
  m.Scope scope,
  SearchViewThemeData target,
) =>
    target.copyWith;
Function _SearchViewThemeData_lerp$(m.Scope scope) => SearchViewThemeData.lerp;
Function _SearchViewThemeData_debugFillProperties$(
  m.Scope scope,
  SearchViewThemeData target,
) =>
    target.debugFillProperties;
SearchViewThemeData _SearchViewTheme_data$(SearchViewTheme target) {
  return target.data;
}

Function _SearchViewTheme_of$(m.Scope scope) => SearchViewTheme.of;
Function _SearchViewTheme_updateShouldNotify$(
  m.Scope scope,
  SearchViewTheme target,
) =>
    target.updateShouldNotify;
