// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/cupertino/context_menu.dart';
import 'dart:math';
import 'dart:ui';
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart' show kMinFlingVelocity;
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart' show HapticFeedback;
import 'package:flutter/widgets.dart';
import 'package:flutter/src/cupertino/colors.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/cupertino/context_menu.dart',
  {
    'CupertinoContextMenu.kOpenBorderRadius':
        _CupertinoContextMenu_kOpenBorderRadius$,
    'CupertinoContextMenu.kEndBoxShadow': _CupertinoContextMenu_kEndBoxShadow$,
    'CupertinoContextMenu.animationOpensAt':
        _CupertinoContextMenu_animationOpensAt$,
  },
  {},
  {
    'CupertinoContextMenu': m.ClassMirror(
      'CupertinoContextMenu',
      {
        'builder': _CupertinoContextMenu_builder$,
        'child': _CupertinoContextMenu_child$,
        'actions': _CupertinoContextMenu_actions$,
        'enableHapticFeedback': _CupertinoContextMenu_enableHapticFeedback$,
        'previewBuilder': _CupertinoContextMenu_previewBuilder$,
        'createState': _CupertinoContextMenu_createState$,
      },
      {},
    )
  },
);
double _CupertinoContextMenu_kOpenBorderRadius$() {
  return CupertinoContextMenu.kOpenBorderRadius;
}

List<BoxShadow> _CupertinoContextMenu_kEndBoxShadow$() {
  return CupertinoContextMenu.kEndBoxShadow;
}

double _CupertinoContextMenu_animationOpensAt$() {
  return CupertinoContextMenu.animationOpensAt;
}

Widget Function(BuildContext, Animation<double>) _CupertinoContextMenu_builder$(
    CupertinoContextMenu target) {
  return target.builder;
}

Widget? _CupertinoContextMenu_child$(CupertinoContextMenu target) {
  return target.child;
}

List<Widget> _CupertinoContextMenu_actions$(CupertinoContextMenu target) {
  return target.actions;
}

bool _CupertinoContextMenu_enableHapticFeedback$(CupertinoContextMenu target) {
  return target.enableHapticFeedback;
}

Widget Function(BuildContext, Animation<double>, Widget)?
    _CupertinoContextMenu_previewBuilder$(CupertinoContextMenu target) {
  return target.previewBuilder;
}

Function _CupertinoContextMenu_createState$(
  m.Scope scope,
  CupertinoContextMenu target,
) =>
    target.createState;
