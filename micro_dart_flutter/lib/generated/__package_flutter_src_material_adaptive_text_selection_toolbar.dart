// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/adaptive_text_selection_toolbar.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/src/material/debug.dart';
import 'package:flutter/src/material/desktop_text_selection_toolbar.dart';
import 'package:flutter/src/material/desktop_text_selection_toolbar_button.dart';
import 'package:flutter/src/material/material_localizations.dart';
import 'package:flutter/src/material/text_selection_toolbar.dart';
import 'package:flutter/src/material/text_selection_toolbar_text_button.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/adaptive_text_selection_toolbar.dart',
  {
    'AdaptiveTextSelectionToolbar.getButtonLabel':
        _AdaptiveTextSelectionToolbar_getButtonLabel$,
    'AdaptiveTextSelectionToolbar.getAdaptiveButtons':
        _AdaptiveTextSelectionToolbar_getAdaptiveButtons$,
  },
  {},
  {
    'AdaptiveTextSelectionToolbar': m.ClassMirror(
      'AdaptiveTextSelectionToolbar',
      {
        'buttonItems': _AdaptiveTextSelectionToolbar_buttonItems$,
        'children': _AdaptiveTextSelectionToolbar_children$,
        'anchors': _AdaptiveTextSelectionToolbar_anchors$,
        'build': _AdaptiveTextSelectionToolbar_build$,
      },
      {},
    )
  },
);
List<ContextMenuButtonItem>? _AdaptiveTextSelectionToolbar_buttonItems$(
    AdaptiveTextSelectionToolbar target) {
  return target.buttonItems;
}

List<Widget>? _AdaptiveTextSelectionToolbar_children$(
    AdaptiveTextSelectionToolbar target) {
  return target.children;
}

TextSelectionToolbarAnchors _AdaptiveTextSelectionToolbar_anchors$(
    AdaptiveTextSelectionToolbar target) {
  return target.anchors;
}

Function _AdaptiveTextSelectionToolbar_getButtonLabel$(m.Scope scope) =>
    AdaptiveTextSelectionToolbar.getButtonLabel;
Function _AdaptiveTextSelectionToolbar_getAdaptiveButtons$(m.Scope scope) =>
    AdaptiveTextSelectionToolbar.getAdaptiveButtons;
Function _AdaptiveTextSelectionToolbar_build$(
  m.Scope scope,
  AdaptiveTextSelectionToolbar target,
) =>
    target.build;
