// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/desktop_text_selection_toolbar_button.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/colors.dart';
import 'package:flutter/src/material/constants.dart';
import 'package:flutter/src/material/text_button.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/desktop_text_selection_toolbar_button.dart',
  {
    'DesktopTextSelectionToolbarButton.': _DesktopTextSelectionToolbarButton__$,
    'DesktopTextSelectionToolbarButton.text':
        _DesktopTextSelectionToolbarButton_text_$,
  },
  {},
  {
    'DesktopTextSelectionToolbarButton': m.ClassMirror(
      'DesktopTextSelectionToolbarButton',
      {
        '#as': DesktopTextSelectionToolbarButton_as$,
        '#is': DesktopTextSelectionToolbarButton_is$,
        'onPressed': _DesktopTextSelectionToolbarButton_onPressed$,
        'child': _DesktopTextSelectionToolbarButton_child$,
        'build': _DesktopTextSelectionToolbarButton_build$,
      },
      {},
    )
  },
);
Function DesktopTextSelectionToolbarButton_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as DesktopTextSelectionToolbarButton;
Function DesktopTextSelectionToolbarButton_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is DesktopTextSelectionToolbarButton;
Function _DesktopTextSelectionToolbarButton_onPressed$(
  m.Scope scope$,
  DesktopTextSelectionToolbarButton target$,
) =>
    () {
      return target$.onPressed;
    };
Function _DesktopTextSelectionToolbarButton_child$(
  m.Scope scope$,
  DesktopTextSelectionToolbarButton target$,
) =>
    () {
      return target$.child;
    };
Function _DesktopTextSelectionToolbarButton__$(m.Scope scope$) => ({
      Key? key,
      required m.FunctionPointer onPressed,
      required Widget child,
    }) {
      void onPressedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPressed,
            [],
            {},
          );
      return DesktopTextSelectionToolbarButton(
        child: child,
        key: key,
        onPressed: onPressedProxy,
      );
    };
Function _DesktopTextSelectionToolbarButton_text_$(m.Scope scope$) => ({
      Key? key,
      required BuildContext context,
      required m.FunctionPointer onPressed,
      required String text,
    }) {
      void onPressedProxy() => scope$.engine.callFunctionPointer(
            scope$,
            onPressed,
            [],
            {},
          );
      return DesktopTextSelectionToolbarButton.text(
        context: context,
        key: key,
        onPressed: onPressedProxy,
        text: text,
      );
    };
Function _DesktopTextSelectionToolbarButton_build$(
  m.Scope scope$,
  DesktopTextSelectionToolbarButton target$,
) =>
    target$.build;
