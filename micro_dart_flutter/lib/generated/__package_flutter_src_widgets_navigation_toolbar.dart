// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/navigation_toolbar.dart';
import 'dart:math';
import 'package:flutter/src/widgets/basic.dart';
import 'package:flutter/src/widgets/debug.dart';
import 'package:flutter/src/widgets/framework.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/navigation_toolbar.dart',
  {
    'NavigationToolbar.kMiddleSpacing': _NavigationToolbar_kMiddleSpacing$,
    'NavigationToolbar.': _NavigationToolbar__$,
  },
  {},
  {
    'NavigationToolbar': m.ClassMirror(
      'NavigationToolbar',
      {
        '#as': NavigationToolbar_as$,
        '#is': NavigationToolbar_is$,
        'leading': _NavigationToolbar_leading$,
        'middle': _NavigationToolbar_middle$,
        'trailing': _NavigationToolbar_trailing$,
        'centerMiddle': _NavigationToolbar_centerMiddle$,
        'middleSpacing': _NavigationToolbar_middleSpacing$,
        'build': _NavigationToolbar_build$,
      },
      {},
    )
  },
);
Function NavigationToolbar_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as NavigationToolbar;
Function NavigationToolbar_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is NavigationToolbar;
double _NavigationToolbar_kMiddleSpacing$() {
  return NavigationToolbar.kMiddleSpacing;
}

Function _NavigationToolbar_leading$(
  m.Scope scope$,
  NavigationToolbar target$,
) =>
    () {
      return target$.leading;
    };
Function _NavigationToolbar_middle$(
  m.Scope scope$,
  NavigationToolbar target$,
) =>
    () {
      return target$.middle;
    };
Function _NavigationToolbar_trailing$(
  m.Scope scope$,
  NavigationToolbar target$,
) =>
    () {
      return target$.trailing;
    };
Function _NavigationToolbar_centerMiddle$(
  m.Scope scope$,
  NavigationToolbar target$,
) =>
    () {
      return target$.centerMiddle;
    };
Function _NavigationToolbar_middleSpacing$(
  m.Scope scope$,
  NavigationToolbar target$,
) =>
    () {
      return target$.middleSpacing;
    };
Function _NavigationToolbar__$(m.Scope scope$) => ({
      Key? key,
      Widget? leading,
      Widget? middle,
      Widget? trailing,
      bool? centerMiddle,
      double? middleSpacing,
    }) {
      return NavigationToolbar(
        centerMiddle: centerMiddle ?? true,
        key: key,
        leading: leading,
        middle: middle,
        middleSpacing: middleSpacing ?? NavigationToolbar.kMiddleSpacing,
        trailing: trailing,
      );
    };
Function _NavigationToolbar_build$(
  m.Scope scope$,
  NavigationToolbar target$,
) =>
    target$.build;
