// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/physics/simulation.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/physics/tolerance.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/physics/simulation.dart',
  {},
  {},
  {
    'Simulation': m.ClassMirror(
      'Simulation',
      {
        '#as': Simulation_as$,
        '#is': Simulation_is$,
        'tolerance': _Simulation_tolerance$,
        'x': _Simulation_x$,
        'dx': _Simulation_dx$,
        'isDone': _Simulation_isDone$,
        'toString': _Simulation_toString$,
      },
      {'tolerance': _Simulation_tolerance_set$},
    )
  },
);
Function Simulation_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as Simulation;
Function Simulation_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is Simulation;
Tolerance _Simulation_tolerance$(Simulation target) {
  return target.tolerance;
}

void _Simulation_tolerance_set$(
  Simulation target,
  Tolerance other,
) {
  target.tolerance = other;
}

Function _Simulation_x$(
  m.Scope scope,
  Simulation target,
) =>
    target.x;
Function _Simulation_dx$(
  m.Scope scope,
  Simulation target,
) =>
    target.dx;
Function _Simulation_isDone$(
  m.Scope scope,
  Simulation target,
) =>
    target.isDone;
Function _Simulation_toString$(
  m.Scope scope,
  Simulation target,
) =>
    target.toString;
