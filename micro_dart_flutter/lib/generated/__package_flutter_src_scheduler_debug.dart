// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/scheduler/debug.dart';
import 'package:flutter/foundation.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/scheduler/debug.dart',
  {
    'debugPrintBeginFrameBanner': _debugPrintBeginFrameBanner$,
    'debugPrintEndFrameBanner': _debugPrintEndFrameBanner$,
    'debugPrintScheduleFrameStacks': _debugPrintScheduleFrameStacks$,
    'debugAssertAllSchedulerVarsUnset': _debugAssertAllSchedulerVarsUnset$,
  },
  {
    'debugPrintBeginFrameBanner': _debugPrintBeginFrameBanner_set$,
    'debugPrintEndFrameBanner': _debugPrintEndFrameBanner_set$,
    'debugPrintScheduleFrameStacks': _debugPrintScheduleFrameStacks_set$,
  },
  {},
);
Function _debugPrintBeginFrameBanner$(m.Scope scope$) =>
    () => debugPrintBeginFrameBanner;
void _debugPrintBeginFrameBanner_set$(bool other$) {
  debugPrintBeginFrameBanner = other$;
}

Function _debugPrintEndFrameBanner$(m.Scope scope$) =>
    () => debugPrintEndFrameBanner;
void _debugPrintEndFrameBanner_set$(bool other$) {
  debugPrintEndFrameBanner = other$;
}

Function _debugPrintScheduleFrameStacks$(m.Scope scope$) =>
    () => debugPrintScheduleFrameStacks;
void _debugPrintScheduleFrameStacks_set$(bool other$) {
  debugPrintScheduleFrameStacks = other$;
}

Function _debugAssertAllSchedulerVarsUnset$(m.Scope scope$) =>
    debugAssertAllSchedulerVarsUnset;
