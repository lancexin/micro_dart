// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/widgets/shared_app_data.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/inherited_model.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/widgets/shared_app_data.dart',
  {
    'SharedAppData.': _SharedAppData__$,
    'SharedAppData.getValue': _SharedAppData_getValue$,
    'SharedAppData.setValue': _SharedAppData_setValue$,
  },
  {},
  {
    'SharedAppData': m.ClassMirror(
      'SharedAppData',
      {
        '#as': SharedAppData_as$,
        '#is': SharedAppData_is$,
        'child': _SharedAppData_child$,
        'createState': _SharedAppData_createState$,
      },
      {},
    )
  },
);
Function SharedAppData_as$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ as SharedAppData;
Function SharedAppData_is$(
  m.Scope scope$,
  dynamic target$,
) =>
    () => target$ is SharedAppData;
Function _SharedAppData_child$(
  m.Scope scope$,
  SharedAppData target$,
) =>
    () {
      return target$.child;
    };
Function _SharedAppData__$(m.Scope scope$) => ({
      Key? key,
      required Widget child,
    }) {
      return SharedAppData(
        child: child,
        key: key,
      );
    };
Function _SharedAppData_createState$(
  m.Scope scope$,
  SharedAppData target$,
) =>
    target$.createState;
Function _SharedAppData_getValue$(m.Scope scope$) => (
      BuildContext context,
      Object key,
      m.FunctionPointer init,
    ) {
      dynamic initProxy() => scope$.engine.callFunctionPointer(
            scope$,
            init,
            [],
            {},
          );
      return SharedAppData.getValue(
        context,
        key,
        initProxy,
      );
    };
Function _SharedAppData_setValue$<K extends Object, V>(m.Scope scope$) =>
    SharedAppData.setValue<K, V>;
