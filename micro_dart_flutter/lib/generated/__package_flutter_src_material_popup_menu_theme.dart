// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/material/popup_menu_theme.dart';
import 'dart:ui' show lerpDouble;
import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/theme.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/material/popup_menu_theme.dart',
  {
    'PopupMenuThemeData.lerp': _PopupMenuThemeData_lerp$,
    'PopupMenuTheme.of': _PopupMenuTheme_of$,
    'PopupMenuPosition.over': _PopupMenuPosition_over$,
    'PopupMenuPosition.under': _PopupMenuPosition_under$,
    'PopupMenuPosition.values': _PopupMenuPosition_values$,
  },
  {},
  {
    'PopupMenuThemeData': m.ClassMirror(
      'PopupMenuThemeData',
      {
        '#as': PopupMenuThemeData_as$,
        '#is': PopupMenuThemeData_is$,
        'color': _PopupMenuThemeData_color$,
        'shape': _PopupMenuThemeData_shape$,
        'elevation': _PopupMenuThemeData_elevation$,
        'shadowColor': _PopupMenuThemeData_shadowColor$,
        'surfaceTintColor': _PopupMenuThemeData_surfaceTintColor$,
        'textStyle': _PopupMenuThemeData_textStyle$,
        'labelTextStyle': _PopupMenuThemeData_labelTextStyle$,
        'enableFeedback': _PopupMenuThemeData_enableFeedback$,
        'mouseCursor': _PopupMenuThemeData_mouseCursor$,
        'position': _PopupMenuThemeData_position$,
        'hashCode': _PopupMenuThemeData_hashCode$,
        'copyWith': _PopupMenuThemeData_copyWith$,
        '==': _PopupMenuThemeData_eq$$,
        'debugFillProperties': _PopupMenuThemeData_debugFillProperties$,
      },
      {},
    ),
    'PopupMenuTheme': m.ClassMirror(
      'PopupMenuTheme',
      {
        '#as': PopupMenuTheme_as$,
        '#is': PopupMenuTheme_is$,
        'data': _PopupMenuTheme_data$,
        'wrap': _PopupMenuTheme_wrap$,
        'updateShouldNotify': _PopupMenuTheme_updateShouldNotify$,
      },
      {},
    ),
    'PopupMenuPosition': m.ClassMirror(
      'PopupMenuPosition',
      {},
      {},
    ),
  },
);
Function PopupMenuThemeData_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as PopupMenuThemeData;
Function PopupMenuThemeData_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is PopupMenuThemeData;
Color? _PopupMenuThemeData_color$(PopupMenuThemeData target) {
  return target.color;
}

ShapeBorder? _PopupMenuThemeData_shape$(PopupMenuThemeData target) {
  return target.shape;
}

double? _PopupMenuThemeData_elevation$(PopupMenuThemeData target) {
  return target.elevation;
}

Color? _PopupMenuThemeData_shadowColor$(PopupMenuThemeData target) {
  return target.shadowColor;
}

Color? _PopupMenuThemeData_surfaceTintColor$(PopupMenuThemeData target) {
  return target.surfaceTintColor;
}

TextStyle? _PopupMenuThemeData_textStyle$(PopupMenuThemeData target) {
  return target.textStyle;
}

MaterialStateProperty<TextStyle?>? _PopupMenuThemeData_labelTextStyle$(
    PopupMenuThemeData target) {
  return target.labelTextStyle;
}

bool? _PopupMenuThemeData_enableFeedback$(PopupMenuThemeData target) {
  return target.enableFeedback;
}

MaterialStateProperty<MouseCursor?>? _PopupMenuThemeData_mouseCursor$(
    PopupMenuThemeData target) {
  return target.mouseCursor;
}

PopupMenuPosition? _PopupMenuThemeData_position$(PopupMenuThemeData target) {
  return target.position;
}

int _PopupMenuThemeData_hashCode$(PopupMenuThemeData target) {
  return target.hashCode;
}

Function _PopupMenuThemeData_copyWith$(
  m.Scope scope,
  PopupMenuThemeData target,
) =>
    target.copyWith;
Function _PopupMenuThemeData_lerp$(m.Scope scope) => PopupMenuThemeData.lerp;
Function _PopupMenuThemeData_eq$$(
  m.Scope scope,
  PopupMenuThemeData target,
) =>
    (Object other) => target == other;
Function _PopupMenuThemeData_debugFillProperties$(
  m.Scope scope,
  PopupMenuThemeData target,
) =>
    target.debugFillProperties;
Function PopupMenuTheme_as$(
  m.Scope scope,
  dynamic target,
) =>
    () => target as PopupMenuTheme;
Function PopupMenuTheme_is$(
  m.Scope scope,
  dynamic target,
) =>
    () => target is PopupMenuTheme;
PopupMenuThemeData _PopupMenuTheme_data$(PopupMenuTheme target) {
  return target.data;
}

Function _PopupMenuTheme_of$(m.Scope scope) => PopupMenuTheme.of;
Function _PopupMenuTheme_wrap$(
  m.Scope scope,
  PopupMenuTheme target,
) =>
    target.wrap;
Function _PopupMenuTheme_updateShouldNotify$(
  m.Scope scope,
  PopupMenuTheme target,
) =>
    target.updateShouldNotify;
PopupMenuPosition _PopupMenuPosition_over$() {
  return PopupMenuPosition.over;
}

PopupMenuPosition _PopupMenuPosition_under$() {
  return PopupMenuPosition.under;
}

List<PopupMenuPosition> _PopupMenuPosition_values$() {
  return PopupMenuPosition.values;
}
