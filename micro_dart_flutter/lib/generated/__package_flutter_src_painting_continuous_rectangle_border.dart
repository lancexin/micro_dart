// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'package:flutter/src/painting/continuous_rectangle_border.dart';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/edge_insets.dart';

const libraryMirror = m.LibraryMirror(
  'package:flutter/src/painting/continuous_rectangle_border.dart',
  {},
  {},
  {
    'ContinuousRectangleBorder': m.ClassMirror(
      'ContinuousRectangleBorder',
      {
        'borderRadius': _ContinuousRectangleBorder_borderRadius$,
        'dimensions': _ContinuousRectangleBorder_dimensions$,
        'hashCode': _ContinuousRectangleBorder_hashCode$,
        'scale': _ContinuousRectangleBorder_scale$,
        'lerpFrom': _ContinuousRectangleBorder_lerpFrom$,
        'lerpTo': _ContinuousRectangleBorder_lerpTo$,
        'getInnerPath': _ContinuousRectangleBorder_getInnerPath$,
        'getOuterPath': _ContinuousRectangleBorder_getOuterPath$,
        'copyWith': _ContinuousRectangleBorder_copyWith$,
        'paint': _ContinuousRectangleBorder_paint$,
        'toString': _ContinuousRectangleBorder_toString$,
      },
      {},
    )
  },
);
BorderRadiusGeometry _ContinuousRectangleBorder_borderRadius$(
    ContinuousRectangleBorder target) {
  return target.borderRadius;
}

EdgeInsetsGeometry _ContinuousRectangleBorder_dimensions$(
    ContinuousRectangleBorder target) {
  return target.dimensions;
}

int _ContinuousRectangleBorder_hashCode$(ContinuousRectangleBorder target) {
  return target.hashCode;
}

Function _ContinuousRectangleBorder_scale$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.scale;
Function _ContinuousRectangleBorder_lerpFrom$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.lerpFrom;
Function _ContinuousRectangleBorder_lerpTo$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.lerpTo;
Function _ContinuousRectangleBorder_getInnerPath$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.getInnerPath;
Function _ContinuousRectangleBorder_getOuterPath$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.getOuterPath;
Function _ContinuousRectangleBorder_copyWith$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.copyWith;
Function _ContinuousRectangleBorder_paint$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.paint;
Function _ContinuousRectangleBorder_toString$(
  m.Scope scope,
  ContinuousRectangleBorder target,
) =>
    target.toString;
