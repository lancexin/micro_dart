// generated by micro_dart_generator
// ignore_for_file: non_constant_identifier_names

import 'package:micro_dart_runtime/micro_dart_runtime.dart' as m;
import 'dart:ffi';
import 'dart:isolate';
import 'dart:typed_data';

const libraryMirror = m.LibraryMirror(
  'dart:ffi',
  {
    'nullptr': _nullptr$,
    'NativeApi.majorVersion': _NativeApi_majorVersion$,
    'NativeApi.minorVersion': _NativeApi_minorVersion$,
    'NativeApi.postCObject': _NativeApi_postCObject$,
    'NativeApi.newNativePort': _NativeApi_newNativePort$,
    'NativeApi.closeNativePort': _NativeApi_closeNativePort$,
    'NativeApi.initializeApiDLData': _NativeApi_initializeApiDLData$,
    'sizeOf': _sizeOf$,
    'Abi.androidArm': _Abi_androidArm$,
    'Abi.androidArm64': _Abi_androidArm64$,
    'Abi.androidIA32': _Abi_androidIA32$,
    'Abi.androidX64': _Abi_androidX64$,
    'Abi.fuchsiaArm64': _Abi_fuchsiaArm64$,
    'Abi.fuchsiaX64': _Abi_fuchsiaX64$,
    'Abi.fuchsiaRiscv64': _Abi_fuchsiaRiscv64$,
    'Abi.iosArm': _Abi_iosArm$,
    'Abi.iosArm64': _Abi_iosArm64$,
    'Abi.iosX64': _Abi_iosX64$,
    'Abi.linuxArm': _Abi_linuxArm$,
    'Abi.linuxArm64': _Abi_linuxArm64$,
    'Abi.linuxIA32': _Abi_linuxIA32$,
    'Abi.linuxX64': _Abi_linuxX64$,
    'Abi.linuxRiscv32': _Abi_linuxRiscv32$,
    'Abi.linuxRiscv64': _Abi_linuxRiscv64$,
    'Abi.macosArm64': _Abi_macosArm64$,
    'Abi.macosX64': _Abi_macosX64$,
    'Abi.windowsArm64': _Abi_windowsArm64$,
    'Abi.windowsIA32': _Abi_windowsIA32$,
    'Abi.windowsX64': _Abi_windowsX64$,
    'Abi.values': _Abi_values$,
    'unsized': _unsized$,
  },
  {},
  {},
);
Pointer<Never> _nullptr$() {
  return nullptr;
}

int _NativeApi_majorVersion$() {
  return NativeApi.majorVersion;
}

int _NativeApi_minorVersion$() {
  return NativeApi.minorVersion;
}

Pointer<NativeFunction<Int8 Function(Int64, Pointer<Dart_CObject>)>>
    _NativeApi_postCObject$() {
  return NativeApi.postCObject;
}

Pointer<
    NativeFunction<
        Int64 Function(
            Pointer<Uint8>,
            Pointer<
                NativeFunction<Void Function(Int64, Pointer<Dart_CObject>)>>,
            Int8)>> _NativeApi_newNativePort$() {
  return NativeApi.newNativePort;
}

Pointer<NativeFunction<Int8 Function(Int64)>> _NativeApi_closeNativePort$() {
  return NativeApi.closeNativePort;
}

Pointer<Void> _NativeApi_initializeApiDLData$() {
  return NativeApi.initializeApiDLData;
}

Function _sizeOf$<T extends NativeType>(m.Scope scope) => sizeOf<T>;
Abi _Abi_androidArm$() {
  return Abi.androidArm;
}

Abi _Abi_androidArm64$() {
  return Abi.androidArm64;
}

Abi _Abi_androidIA32$() {
  return Abi.androidIA32;
}

Abi _Abi_androidX64$() {
  return Abi.androidX64;
}

Abi _Abi_fuchsiaArm64$() {
  return Abi.fuchsiaArm64;
}

Abi _Abi_fuchsiaX64$() {
  return Abi.fuchsiaX64;
}

Abi _Abi_fuchsiaRiscv64$() {
  return Abi.fuchsiaRiscv64;
}

Abi _Abi_iosArm$() {
  return Abi.iosArm;
}

Abi _Abi_iosArm64$() {
  return Abi.iosArm64;
}

Abi _Abi_iosX64$() {
  return Abi.iosX64;
}

Abi _Abi_linuxArm$() {
  return Abi.linuxArm;
}

Abi _Abi_linuxArm64$() {
  return Abi.linuxArm64;
}

Abi _Abi_linuxIA32$() {
  return Abi.linuxIA32;
}

Abi _Abi_linuxX64$() {
  return Abi.linuxX64;
}

Abi _Abi_linuxRiscv32$() {
  return Abi.linuxRiscv32;
}

Abi _Abi_linuxRiscv64$() {
  return Abi.linuxRiscv64;
}

Abi _Abi_macosArm64$() {
  return Abi.macosArm64;
}

Abi _Abi_macosX64$() {
  return Abi.macosX64;
}

Abi _Abi_windowsArm64$() {
  return Abi.windowsArm64;
}

Abi _Abi_windowsIA32$() {
  return Abi.windowsIA32;
}

Abi _Abi_windowsX64$() {
  return Abi.windowsX64;
}

List<Abi> _Abi_values$() {
  return Abi.values;
}

Unsized _unsized$() {
  return unsized;
}
